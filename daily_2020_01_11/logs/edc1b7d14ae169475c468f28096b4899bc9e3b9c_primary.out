cset: moving following pidspec: 1991
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.389472308 seconds)
loading group "string"... done (took 0.582980373 seconds)
loading group "linalg"... done (took 7.239876128 seconds)
loading group "parallel"... done (took 0.157076245 seconds)
loading group "find"... done (took 1.145809988 seconds)
loading group "tuple"... done (took 1.80428214 seconds)
loading group "dates"... done (took 1.3073334 seconds)
loading group "micro"... done (took 0.217288148 seconds)
loading group "io"... done (took 0.954406128 seconds)
loading group "scalar"... done (took 37.719348458 seconds)
loading group "sparse"... done (took 12.039923164 seconds)
loading group "broadcast"... done (took 0.946231312 seconds)
loading group "union"... done (took 12.957328182 seconds)
loading group "simd"... done (took 4.760153193 seconds)
loading group "random"... done (took 9.685904217 seconds)
loading group "problem"... done (took 1.88819778 seconds)
loading group "array"... done (took 21.558520093 seconds)
loading group "misc"... done (took 1.707566996 seconds)
loading group "sort"... done (took 3.336541383 seconds)
loading group "collection"... done (took 17.36418907 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.531753447 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125495992 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118840894 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119838032 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148793644 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113286105 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125852846 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08597735 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.819627711 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148588633 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117647253 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431614203 seconds)
done (took 4.113966547 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177453946 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085541773 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08342678 seconds)
  done (took 0.209193931 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065614485 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124920126 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066903879 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066694715 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067248079 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067048141 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066557023 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06616689 seconds)
  done (took 0.57048042 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075868546 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07081992 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066151187 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071306959 seconds)
  done (took 0.328883066 seconds)
done (took 1.419581362 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794645604 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203089818 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187821275 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41280005 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131283601 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160291755 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637221359 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326463218 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192109225 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080498525 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109621752 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329615824 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110789077 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641070604 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077983985 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09114115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139005907 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423322474 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.0688351 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082282376 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088970341 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127578389 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08831182 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074856131 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146579457 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067665908 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13734701 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080085108 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066504026 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214120624 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.1726807 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658502497 seconds)
  done (took 9.195126258 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09824057 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097047633 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06883918 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123015272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09648908 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069787533 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071120421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068062532 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086972842 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128533098 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089090243 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101692732 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065721933 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069250825 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085217731 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204371017 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083134257 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083481934 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070837776 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076092736 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105255937 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078265227 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077834229 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076889089 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129634823 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179562761 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097157871 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097695393 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067133246 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0802072 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115341072 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125581426 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065962267 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066551659 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12427647 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094545493 seconds)
  done (took 3.536818129 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.003714038 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143812624 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090532015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135723587 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065303486 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109916634 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065939094 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081231988 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210050521 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.384274906 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.598123484 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11123291 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105155803 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067842805 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068883135 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066999134 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.505177261 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095964931 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106622296 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081963348 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084815706 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069826533 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068823253 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069127368 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064651836 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068309689 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110228483 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.299483355 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125838054 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068458501 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956093882 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127653532 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067438009 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100928468 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162160161 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088301825 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142043163 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.199065027 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064883586 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155250337 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07046463 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066776471 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084605597 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103397251 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114196281 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065347787 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066859911 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165419845 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065568716 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079389989 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.639674973 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155043988 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077239038 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064492025 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254850358 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088029311 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069368264 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064624177 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181036535 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134684157 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068289974 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067119904 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068399966 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069147709 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361991567 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066349206 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.889635892 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070696444 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076513434 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069511669 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07038072 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073526084 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073176003 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087960951 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066558025 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075151525 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06602659 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065814646 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067190455 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084216142 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380106893 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067285034 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068849113 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065183248 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089605887 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096915594 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066623003 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065656792 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100574945 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064110181 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068289741 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066272643 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107791283 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066918021 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083645805 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091371873 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069294081 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112936454 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06702609 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193693531 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06758052 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095862315 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070612602 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09831034 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080346564 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068349215 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.422000558 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068000973 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06550686 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063846139 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065896008 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068002677 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066401751 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06747581 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079838654 seconds)
  done (took 20.027471034 seconds)
done (took 33.805186578 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.23732481 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078483493 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074433365 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077323917 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07590461 seconds)
  done (took 0.619656676 seconds)
done (took 0.699143796 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12566346 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100524915 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064518944 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098121265 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064137069 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103274185 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101617322 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082216308 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101044681 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064515183 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097315561 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064614922 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064690362 seconds)
  done (took 1.205184712 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083608648 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084608235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070068079 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083536823 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063365069 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083712367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081232403 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088908286 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082484114 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072897323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064371791 seconds)
  done (took 0.927449095 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084945764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086432665 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069398089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082959828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063564722 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083014407 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083166188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085914 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081849964 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075265805 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064737168 seconds)
  done (took 0.91750698 seconds)
done (took 3.108380497 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080949319 seconds)
  done (took 0.106604907 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593056701 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.088840152 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081666621 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113042705 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189870825 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119442968 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276025892 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08692979 seconds)
  done (took 7.779633184 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090517656 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069439947 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069232431 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082392799 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073345224 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068689174 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07168982 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068748673 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071762026 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069930153 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071300679 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068946276 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070033416 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071789263 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072352688 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071980234 seconds)
  done (took 1.352109054 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09426693 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092276232 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073137444 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076207267 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072789398 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072165087 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073958101 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073923082 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070907752 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072326895 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074767508 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073509325 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071671452 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064617597 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073930389 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075870303 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071014148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073630152 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074192745 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075177395 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074472845 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06399541 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071382044 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074717604 seconds)
  done (took 1.9483699 seconds)
done (took 11.240480894 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118798264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072394439 seconds)
  done (took 0.22154198 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084959296 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084124294 seconds)
  done (took 0.216315804 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086168338 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065604568 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091531773 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078929188 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066802958 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065607574 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089251075 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065993595 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065476664 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066111418 seconds)
  done (took 0.788294566 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070966718 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079133 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07046976 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081767155 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074671296 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065140794 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072550335 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067625679 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077828333 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062306547 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071038858 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082836858 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070966765 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085031888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071898028 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068910737 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071135905 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067155676 seconds)
  done (took 1.369878215 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068545778 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068808623 seconds)
  done (took 0.203419871 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069775582 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065997097 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067315385 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067045866 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064264611 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062629264 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063597198 seconds)
  done (took 0.50562497 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387766312 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112935732 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310632633 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071114942 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081330587 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254649528 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065290742 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070449705 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069935049 seconds)
  done (took 1.517844565 seconds)
done (took 4.903079426 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080402973 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086396752 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096464773 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376399257 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091616616 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065856102 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113928263 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19334279 seconds)
done (took 1.179969145 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218090135 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.644482268 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404325964 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204417166 seconds)
  done (took 1.299923827 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347707333 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087897126 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058629713 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067411978 seconds)
  done (took 0.628181304 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068004387 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071480307 seconds)
  done (took 0.192341563 seconds)
done (took 2.408160811 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067919783 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066950077 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063346234 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065932555 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063230716 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063273948 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085211063 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066123824 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066266011 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065997002 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069126403 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066202435 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063408656 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063258587 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065923564 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063707396 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063589953 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066053983 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064024958 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065784283 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063620859 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063680946 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064035717 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066156545 seconds)
  done (took 1.654921775 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087525661 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066222643 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07154492 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071534018 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070338152 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071717385 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071655377 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066876934 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071240209 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068602017 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069288129 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069449079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067941204 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0696701 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068548135 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069875655 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071273311 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066001046 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068329194 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070022618 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071212735 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065873153 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069773951 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071557586 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069467416 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070946781 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068629361 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066366582 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070764275 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069328996 seconds)
  done (took 2.174212036 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070377998 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063065454 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064417153 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070650465 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063215805 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064715129 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063170653 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064194086 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065410395 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063387965 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065625674 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06319609 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064099855 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06481431 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064423123 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067265216 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078887408 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063848041 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063865113 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064328589 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067327163 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063876722 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064223127 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063736898 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063618797 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063633211 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06409691 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06401871 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064355467 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063539201 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067087693 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067202189 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063377895 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070482205 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067665004 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063209136 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068053611 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06323505 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064046261 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063265 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063392874 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064027005 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06334607 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070377305 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063403726 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065298145 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063911422 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065138148 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063966412 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066308597 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063208126 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064330431 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065450086 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064604394 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067840491 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062906042 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064813698 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063385742 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06457747 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063500189 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062928894 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063082976 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066532316 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063986536 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079093039 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070524508 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063184999 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064940123 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064740803 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066364045 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.177659282 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077272808 seconds)
  done (took 4.909723527 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091470947 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087531817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065014629 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065726503 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062494781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063903137 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069742785 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063968722 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065980398 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082443359 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063698196 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065669648 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064869767 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067374109 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063964244 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065795865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072213304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061660552 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063298689 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067091369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064627232 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069343122 seconds)
  done (took 1.620593761 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157622822 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070970545 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105353269 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07587682 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07095736 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076510365 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070226636 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07027588 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069628415 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066949622 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067479165 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069454075 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069610639 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067058974 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067193148 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067453512 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069726791 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067510335 seconds)
  done (took 1.45077714 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079852599 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068077849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08835135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06608872 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066359518 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068379583 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071165561 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074133018 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069135279 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066695228 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074118637 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068309025 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067946175 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065645758 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068084014 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065705063 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068142236 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065858138 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074106929 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070134282 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070344379 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073791133 seconds)
  done (took 1.622444925 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082227876 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068735245 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082503373 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068426254 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062609889 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064064889 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069926217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066020077 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070611427 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067314068 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066205064 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063866608 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068363418 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065558952 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068236098 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065118571 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06733405 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065696947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067524507 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061361178 seconds)
  done (took 1.43302653 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089317291 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068364465 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068378075 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075343101 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067667716 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067833015 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076149356 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067159597 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067647819 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08829807 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067685913 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067292406 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075463334 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072043626 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067719291 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074984387 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075076172 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074768189 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068022509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067624035 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088626216 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067634178 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075100121 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067098328 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06725779 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067197081 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067370163 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07214304 seconds)
  done (took 2.089346668 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06917547 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067323073 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063273395 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063484953 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064190624 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063298041 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063686229 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06449142 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065962343 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063427703 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065916195 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06598469 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066158248 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066103015 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065818293 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066216464 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066477811 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063618716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063283425 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063478921 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065744736 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066285596 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066882732 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063517716 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063426232 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066151985 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063663059 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064078232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065876039 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063304818 seconds)
  done (took 2.033386965 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077846127 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07388129 seconds)
  done (took 0.224176874 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065254958 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082397196 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063777318 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070447215 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070452603 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067297721 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073823093 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069930719 seconds)
  done (took 0.613160901 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085091672 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079521915 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06798062 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080679465 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076980472 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083791046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135246582 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066956002 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073522136 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06425839 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07974092 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065625814 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072620567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067254483 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072130789 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072586107 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063702002 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072079385 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068279824 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065007927 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068077142 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074918154 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068725866 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06165148 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067818886 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088350803 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077275923 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065631949 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069167771 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073933402 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071769118 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059837003 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06623702 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066705075 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063815754 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075831439 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080948268 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069031233 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074958368 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06711894 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07572509 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061005062 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07093654 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072755618 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076385123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066669063 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066439627 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06111084 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064020121 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068650018 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06111021 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068993162 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060659935 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072932318 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070525669 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07676567 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065178601 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067948917 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069039493 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069895842 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072993094 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068398932 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069206552 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066355783 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076413296 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071077217 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074814058 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061376543 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060211417 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064151604 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076521258 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090088037 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072476337 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06740356 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067477799 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063988036 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070842369 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067414134 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071756564 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072975421 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066504405 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072216713 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073918523 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066793742 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069011177 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074366101 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065068717 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069822979 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064618219 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082565295 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065568802 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064495947 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064348691 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077068321 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06989551 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066657302 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064936403 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073741226 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061017064 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066864102 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067468499 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067231723 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076492488 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071166837 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07097049 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074120707 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072797528 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066103874 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068469471 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062606735 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066168215 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065047585 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072769711 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059643045 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068362976 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066534954 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066138326 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073998141 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06358 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064973629 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072703656 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07100205 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063197948 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.187561211 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070385557 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067423397 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070821035 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075314526 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065534082 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062052184 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062060671 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070676006 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06608901 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070454057 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071830307 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070558551 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060979822 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065297373 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072870178 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075722838 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067348814 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067774372 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072935527 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067876884 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066141464 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073678346 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069180307 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065620066 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072504998 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06781827 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061947654 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069756253 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069100115 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066130996 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070683929 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070175713 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068880942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067383656 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06544604 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073578693 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067291464 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066046843 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066641549 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065567174 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076962704 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069113902 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06194408 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063566701 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075194115 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065080526 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065614282 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065582919 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068701669 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06724897 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064568166 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066152796 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068720675 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076538287 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070257704 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067561561 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072005994 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077620228 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065973452 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06884199 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065801901 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067258287 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066786958 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075334566 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071665198 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071203202 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068182593 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062842558 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071864492 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07364421 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065136661 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064031309 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065879042 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07035074 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071922071 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070341669 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066388267 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06403142 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067065343 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06970372 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068907521 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066226644 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065143703 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072456876 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064043544 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072611615 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066607319 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077141847 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070148394 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061383277 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068715099 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064511855 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072276701 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061099621 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064281727 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065398433 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066987617 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065739237 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068894859 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060402726 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073125747 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073799179 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066902775 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065730181 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065953683 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073854881 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068325282 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07079172 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069825634 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071872158 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076434296 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064601858 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068564602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.0753964 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064699815 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059583363 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070371702 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064323304 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063865024 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064018642 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063359994 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067899689 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072873191 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071959724 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059225577 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067891294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063490286 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.193615408 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062510742 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071666703 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070795293 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068407465 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073038499 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067098446 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067677432 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070758143 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06671273 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067508438 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067748673 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070007438 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068044884 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069310531 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066313141 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069541481 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066084096 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064211415 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06853982 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066587195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067467536 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072032725 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066356909 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066699733 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069556307 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066810009 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067347967 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067743157 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065541151 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069368363 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067386557 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067425579 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068943421 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061472788 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073839098 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065768054 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074112926 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066959557 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063396436 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072786183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069582785 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072006241 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066946944 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067352171 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067836389 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066074406 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069320114 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073334572 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064607069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077403982 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07384731 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06744027 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069110176 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06681616 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068108049 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065702561 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067812845 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067206552 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066807544 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066007769 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070665039 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068657468 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066689485 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06790906 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067223864 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066495169 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067290312 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060552566 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065824168 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066124463 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066075793 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076178714 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067097685 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066020369 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06544213 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06764895 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065522287 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063331659 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074298874 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075217307 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066771354 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073812133 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066197267 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068616265 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077030943 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060905071 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065338192 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064282399 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064729876 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07341986 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06756922 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076214096 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067003733 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065926799 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063441003 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067482745 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064531691 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060393385 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064065547 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07011151 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065860459 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065266125 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066482775 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068915721 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067361903 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075450376 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065727467 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067611659 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066460636 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063506351 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065837518 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064999678 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068848807 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066729989 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063393367 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062558953 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065185365 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066167755 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06653905 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067483061 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066513172 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07153856 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065250777 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06783512 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067684529 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059896451 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068091253 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065113434 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064606356 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064341324 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.200365475 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070067437 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067007538 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076331769 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066502159 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068188222 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06702001 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064162664 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066228335 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066202757 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066658701 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065840131 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067618137 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074564606 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064105817 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070165151 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066101725 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066945708 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073331824 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067492406 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069642293 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073708144 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067626115 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068721274 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074945431 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070634403 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069978512 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067284563 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068113517 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072704167 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065452855 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073298866 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06703704 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068079958 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068054767 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064572295 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066284738 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066526107 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0665316 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073032791 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067225057 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06581977 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066037471 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064180604 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067719988 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069544079 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074401607 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069297876 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069299325 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061712582 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063805051 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06689944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064447163 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068194453 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06882122 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072142861 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068465617 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067428127 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065236372 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07559433 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072392978 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069970138 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064121755 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.0704408 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067283195 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068996017 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067516761 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067257147 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068097774 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070783864 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068139592 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066526436 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073721635 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07033624 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067289936 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06841055 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067711988 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06707619 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061418224 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067181145 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068384795 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071536751 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068935695 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066799661 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077554778 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064943995 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067133079 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070178709 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066091692 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071097066 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061622266 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06820288 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067457386 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066859671 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061835775 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065883279 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06481887 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068972916 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066134035 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06162596 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077368311 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076006119 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069554374 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065733329 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065191323 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062026087 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061885813 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066295967 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067781644 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068776511 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077034898 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065876152 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066015756 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061645318 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066905848 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069301008 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069851065 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063165556 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060927854 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064595008 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06890846 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07127513 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064054716 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065305148 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069292056 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067761685 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063101206 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068683774 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062778993 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069297556 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077747424 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066012875 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.199179958 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074065886 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076319343 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068124663 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06254518 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068187106 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069776479 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06720958 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067960809 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068434845 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082421981 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069812102 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066977998 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065483303 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069307204 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066050313 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075075182 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068361848 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068220509 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071499914 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068786372 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075736635 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069890064 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0749609 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069963735 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070469871 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065997122 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06715116 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065113819 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066286663 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06788992 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067340776 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07168944 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074769586 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067484717 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078581201 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075944991 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06894835 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063798727 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06662807 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066375356 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062312283 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069098562 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065347042 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065058179 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065651942 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065786558 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068410165 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072073897 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067774146 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06720807 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066575616 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060686791 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069184876 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06951184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068111458 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064075895 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066722319 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067488085 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070562107 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069904309 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064867093 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068481562 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06840751 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067271217 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062149481 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073204083 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065853417 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068470461 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066135539 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066955196 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06720406 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070382756 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071623816 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067565494 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069058822 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070677988 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068672679 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063891158 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064208852 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071657999 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064605179 seconds)
  done (took 41.422488881 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101654598 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063841084 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061561716 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062154399 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073911671 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063231224 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062193339 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063392207 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063432508 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065739707 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062109922 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061568476 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071341887 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078230342 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074616272 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066224515 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061545513 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063466365 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062000401 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062794452 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070731507 seconds)
  done (took 1.560991802 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076116379 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079255135 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075715334 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082977783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071213579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071047488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076894527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071886034 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079050834 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073427958 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079906464 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071205778 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072532342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072787107 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072613859 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070900078 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079289577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070591241 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070328471 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075252885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070787906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075266562 seconds)
  done (took 1.71526889 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069334882 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066225877 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067829991 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061739553 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066511507 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061134056 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069095618 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063734717 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069667031 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065690349 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065293505 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065304741 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06869422 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061171499 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066256672 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064303064 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10879407 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069919596 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066803795 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067075541 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061165665 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067476853 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061081784 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061836078 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064214035 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068904627 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066086466 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063363911 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066198316 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064760206 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065992036 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063490508 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067672426 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06615838 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064587335 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064922282 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06539308 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065438927 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061132931 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063586941 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066530114 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061458714 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066194065 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066982054 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064060133 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06352019 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067557733 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065469411 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060903674 seconds)
  done (took 3.323995083 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082341531 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109082474 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06735076 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091248765 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.0808956 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073105642 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069563799 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091099826 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063881541 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06539204 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082252839 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079343206 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065925869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071258874 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072414179 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06649178 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067180612 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06473077 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069067982 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064689621 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069218266 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071673054 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079584282 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077827009 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069443306 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06398413 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064357535 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069751218 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077733143 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069693504 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070320792 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071008117 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080446067 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071127697 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064544892 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067991783 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081429409 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065472544 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067999086 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063487547 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067701873 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069939844 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07223748 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08238761 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065864731 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070701721 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065915785 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062525854 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078054904 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067998925 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073348081 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079613484 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069024792 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065518515 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069932354 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080333111 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065403997 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063428388 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068485271 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077110666 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062820243 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068928905 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078406161 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067154498 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072020902 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079109359 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070338136 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069494639 seconds)
  done (took 5.13817032 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07710583 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095399847 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08446086 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084218633 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077374181 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075758763 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076381804 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076124909 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076517001 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080560857 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076824221 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116489303 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072181617 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078498395 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07664205 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075974159 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076089523 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075762331 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075556438 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075580765 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075445411 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082621486 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075317958 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083531377 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079984306 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070416805 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074952491 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074987271 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083004492 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07503104 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088127649 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074895232 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075485654 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082977082 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079222322 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075146282 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065231338 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075411271 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07555927 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075592614 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070564302 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083191941 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0751112 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071060414 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075448669 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075347571 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08345029 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07965833 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077499497 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079975191 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076144422 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083432212 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075104478 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075923836 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083709527 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086368237 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082866766 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083060427 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076091296 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083255439 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083525953 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086946836 seconds)
  done (took 5.039475662 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083936663 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074299434 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082704922 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06168186 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064332274 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072410467 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064639044 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064400344 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074956558 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07544774 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077059521 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072916825 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074804966 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077016489 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072285526 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07487617 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072629129 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072154694 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074477214 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071634697 seconds)
  done (took 1.599106394 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077262122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084172183 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066832521 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071966125 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069399806 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071946616 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068893097 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069041007 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067491285 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069851026 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076682652 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077052572 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06746339 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071534767 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075440996 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072112371 seconds)
  done (took 1.238948594 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085072192 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072830511 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081487136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06580728 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067326459 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062303939 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.0656983 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062097123 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062251477 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077832764 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066014784 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076354818 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065439633 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064865448 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062592909 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071319614 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062616295 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063758287 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065439346 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078601618 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070391042 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064164981 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069355144 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065889442 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068180232 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070367864 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06514011 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065693057 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062686731 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066397767 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06899961 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069213859 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062478089 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063652638 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064974558 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063407938 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065629014 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066360882 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07125368 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065966589 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064928575 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067785913 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065747346 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066765148 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062542739 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066106086 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062239278 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067895643 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063742523 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068268556 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06582879 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068697213 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066527153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072368821 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068651332 seconds)
  done (took 3.785021622 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082938193 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072645833 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061763892 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064609681 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070511034 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067920541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070344302 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067664341 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06755747 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06439161 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067871646 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069071002 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067766004 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070750251 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068091128 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070607832 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062503341 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067889409 seconds)
  done (took 1.3489737 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07306033 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067633446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07279668 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066218104 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066129756 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068819629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06254782 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064771088 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06517122 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067195045 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066617497 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068448901 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065789134 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068022475 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065790744 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065630628 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068035118 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064501144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065612236 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061990891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068661703 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064478357 seconds)
  done (took 1.54132979 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096953482 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082579468 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141940055 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079480545 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085343198 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071077054 seconds)
  done (took 0.635957019 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093397049 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101468292 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066406987 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069267078 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077250464 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069939975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069462482 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070891269 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07881737 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076364981 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070792336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078783773 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078744155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07820361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076360362 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075887708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070231086 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069996928 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066555408 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083533119 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069851896 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078038048 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069939032 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069376671 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06972724 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077677953 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077944014 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075687024 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069275246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078547556 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075767881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069574724 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078429015 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075903579 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068893045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078025033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07024626 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084036438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075979014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077176138 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068694723 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07557212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078465228 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074151427 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078365185 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070158815 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074308847 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070327132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070239513 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085821 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076227067 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077187899 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078155179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078943853 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078705793 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085815436 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076472508 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077657252 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076053784 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076493083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077860648 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076001507 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077618213 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076618236 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07607738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078052278 seconds)
  done (took 5.073499674 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103000449 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067469698 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07086555 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077300721 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078268356 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070504458 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070748535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071146068 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069928288 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066810985 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108445396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070799619 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078304715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078843994 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070400331 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07079589 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070419595 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077420164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067071335 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08606793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070145859 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077445256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077620652 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077160734 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076431197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075473027 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069876227 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070033021 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06974639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069772301 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074762457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0702992 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077366927 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066290233 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077683521 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070086281 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070327006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074576063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069662858 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075538278 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07793614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083691591 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069884972 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069947683 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07580002 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069845117 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070347398 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066756138 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069877726 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066758626 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076186513 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075788861 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075697599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077197357 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07000116 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070011848 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070012821 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070681878 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070224479 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075830437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077259919 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070134763 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085752038 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070416629 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07021457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077504727 seconds)
  done (took 5.036077755 seconds)
done (took 98.330156724 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187166856 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165550427 seconds)
  done (took 0.387298439 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071623197 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098952814 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076759816 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128201797 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06637655 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101052272 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098961423 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078747472 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066302642 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066029407 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066658863 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068946349 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131977412 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066470009 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066283441 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068671806 seconds)
  done (took 1.382159108 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102708226 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162111812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101855199 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065106182 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099371671 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073470328 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065306035 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074984917 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071229848 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065348655 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073454997 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070597712 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064842418 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070116368 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071378148 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07342714 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064492495 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072941736 seconds)
  done (took 1.516750773 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099322735 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091347226 seconds)
  done (took 0.271129299 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15992371 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134034731 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202006251 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35405491 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166146934 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148819787 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145187608 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143885392 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116731724 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139455252 seconds)
  done (took 1.769863896 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10012487 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154706983 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267891349 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119035578 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073256307 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09421471 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11917031 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078916924 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080417674 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080399929 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08019922 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076670358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100021047 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073092006 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074162779 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076187828 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103724489 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07260811 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07433053 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075812627 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100270929 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066105634 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072961604 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073400897 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077338772 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077035341 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06600955 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065410286 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075613815 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074350738 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076493648 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092971816 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077017363 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105923188 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070681671 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107082768 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076760072 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073431415 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074468287 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073224667 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078305824 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077702085 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072897887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075942807 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065555657 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076887435 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06581039 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065396566 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077791005 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066775456 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077609376 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076648004 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106271889 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067332793 seconds)
  done (took 4.708703761 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103686937 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106199045 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071102008 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113501988 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103531622 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072945308 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103286352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096582069 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104545933 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070310571 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068992875 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070983048 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083619895 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083717116 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11580952 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10699382 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074667543 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071504261 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108504994 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105871165 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069027257 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097207192 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09152533 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103180908 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.0676952 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070231141 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067919945 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070466677 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07697975 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078592789 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07026136 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080778375 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084833459 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078393163 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067499056 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067697183 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068299238 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079476271 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079472297 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079091729 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077520243 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068232001 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068182762 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069653281 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069893121 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067952239 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079040944 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080329196 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078712996 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06945903 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070328989 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068018301 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069581721 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080380909 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077773133 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080576999 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080202134 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068178813 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068393831 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072657979 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081042127 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079163624 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079487549 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069770209 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078572164 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067947013 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080031512 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084219609 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068681284 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069767038 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06904274 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069515117 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0698245 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07766408 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077660581 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06938413 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069112258 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068720997 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080392284 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078389372 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068544761 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07750787 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067413428 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068707577 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069849935 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069230829 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077403985 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079752096 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069695808 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068777419 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069777353 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068591812 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066932331 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077150956 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079958793 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079496418 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079297149 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068976114 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077693974 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07692079 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068871986 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078567618 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06795031 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0690735 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068764879 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076807005 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076197055 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078097885 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068395013 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06716865 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.20770464 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082805805 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069345039 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078257398 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081340149 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079894114 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068901129 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081345645 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069166982 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080209596 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069929806 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080970603 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069951382 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080166965 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06939141 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069129414 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068754445 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080007102 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073694303 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069184326 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070085825 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070550872 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079432033 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081917814 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071037598 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078255128 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078704807 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070653589 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078961287 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069422452 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07932201 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069755788 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070539049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068069162 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082345556 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068573778 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068895487 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069928509 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080333302 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069099521 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080624196 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078531492 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068822352 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081405972 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080430508 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077402051 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080200924 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070802117 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068488389 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068449833 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069776883 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078078995 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079860996 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070626262 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068600821 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078220234 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079482827 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067790164 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07816498 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078508671 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078590463 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068998512 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070395241 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08025632 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080725437 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078057921 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078480691 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078400584 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068981239 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077578816 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078512414 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068432191 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084769721 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068444486 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083156085 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079477227 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076530383 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078947172 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080267005 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079873541 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080234883 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083484081 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068464478 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068358581 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079415022 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06834628 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069138287 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078339747 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070112114 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06940916 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083094749 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06896263 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080152674 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067849671 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078922682 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067511356 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070194869 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084240989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068271729 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069715893 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078442704 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068710548 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076209129 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078823138 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07638198 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067288997 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069201745 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077533486 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077119111 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06668412 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066873238 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068810241 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.209541852 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077457495 seconds)
  done (took 17.444199318 seconds)
done (took 27.623608004 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212992552 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15279489 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182276485 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118236821 seconds)
  done (took 0.793076021 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117973027 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104016851 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093253641 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06516858 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099396148 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065467195 seconds)
  done (took 0.62836655 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311268291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209793373 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187821476 seconds)
  done (took 0.782518017 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200402739 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188454811 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415904349 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264207097 seconds)
  done (took 1.260006103 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145380719 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088602613 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067219623 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084061413 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134287703 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160593943 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100085969 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125919305 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07906361 seconds)
  done (took 1.117427959 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14989868 seconds)
done (took 4.80395359 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.157952941 seconds)
    (2/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.227284529 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.25181268 seconds)
    (4/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096945077 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.158899157 seconds)
    (6/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.223369987 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092320532 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106975602 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080322129 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19990991 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094978162 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.213070637 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071996129 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072061333 seconds)
    (15/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16229281 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.202701929 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078742958 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074203801 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208861886 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073146516 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103510931 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.226321749 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.20516132 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05067924 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071794797 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07635909 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06632883 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07246486 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197240966 seconds)
    (30/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.168002273 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076401702 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064838304 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104445461 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.143339318 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073984784 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153035641 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066173757 seconds)
    (38/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065753811 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110499931 seconds)
    (40/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050544683 seconds)
    (41/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21148186 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071270571 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068769639 seconds)
    (44/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.121847113 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.207314275 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153494177 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074824334 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076350278 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106662854 seconds)
    (50/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087070372 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.0966389 seconds)
    (52/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.12270704 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092252463 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053032445 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.0734155 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067805065 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051188227 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195274672 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072969042 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142820605 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065430331 seconds)
    (62/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14103203 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093429101 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097229509 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077153015 seconds)
    (66/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.11249059 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067899866 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.205501654 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066046783 seconds)
    (70/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073469021 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051363983 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076981449 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069651485 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.205548865 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074918804 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.202618837 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06860914 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073202343 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069451501 seconds)
    (80/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.15348011 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051753389 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073584984 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186535101 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09379124 seconds)
    (85/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076340573 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051894227 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137680404 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142651121 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089413025 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.223414162 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.151660646 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052714195 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073496194 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106138938 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151982713 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076988826 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052470365 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117269289 seconds)
    (99/309) benchmarking ("sort", Int64, false)...
    done (took 0.067019242 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064977573 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.144394928 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125656053 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173259743 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10295322 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096705857 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096208037 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071180098 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090396558 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072708031 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163122827 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.178334218 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185039801 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051754249 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086161962 seconds)
    (115/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066197021 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164564783 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092238473 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146252726 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173651698 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089445542 seconds)
    (121/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054539151 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110678204 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066848727 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.136785034 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074001751 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080674584 seconds)
    (127/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100176808 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075609199 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086162915 seconds)
    (130/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107752656 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182479695 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051919682 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071931929 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072273506 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136574266 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050642109 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074251638 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077985182 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077048243 seconds)
    (140/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073446924 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052684559 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052137965 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06550898 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072354193 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155418479 seconds)
    (146/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080279867 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051586635 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06536262 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073152662 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082234629 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184727865 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092116515 seconds)
    (153/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050753269 seconds)
    (154/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070137022 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050519025 seconds)
    (156/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079791443 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08269025 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067138282 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051833732 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073395478 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.161605783 seconds)
    (162/309) benchmarking ("sort", Float32, false)...
    done (took 0.131616917 seconds)
    (163/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06185873 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076136974 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066379228 seconds)
    (166/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064433883 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053472036 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051116388 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114631939 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080582772 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066579986 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067096936 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098661458 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068339816 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06999032 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093793852 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065642364 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086783837 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065204002 seconds)
    (180/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066941247 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07240168 seconds)
    (182/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061707195 seconds)
    (183/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155363306 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069361895 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09283019 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073629387 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050898283 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072906685 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073639655 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140265848 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073778533 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119938068 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051149337 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050793932 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064650049 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100403628 seconds)
    (197/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051336182 seconds)
    (198/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110802754 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06663971 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063707682 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050465021 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065219323 seconds)
    (203/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082132867 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145349543 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152506564 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.075845143 seconds)
    (207/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06726369 seconds)
    (208/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060482841 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.261336275 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073527233 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066727608 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073937225 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075288216 seconds)
    (214/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05238531 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087319893 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066119628 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065885927 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066127008 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071881213 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066413437 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072178522 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091578464 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052974586 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065378825 seconds)
    (225/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090541583 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051289902 seconds)
    (227/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089153753 seconds)
    (228/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073680704 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139991536 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06382373 seconds)
    (231/309) benchmarking ("sort", Int8, false)...
    done (took 0.141921368 seconds)
    (232/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062411936 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065673891 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140936259 seconds)
    (235/309) benchmarking ("sort", Float64, false)...
    done (took 0.131995675 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076822241 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066591382 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051495453 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051869213 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050786063 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11380866 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06391917 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065027609 seconds)
    (244/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06109069 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07864683 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072619447 seconds)
    (247/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181495499 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178095712 seconds)
    (249/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051130052 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.273231349 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089019251 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068675238 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08923931 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051070657 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069687455 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065339462 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065724726 seconds)
    (258/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051623135 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052532892 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185147026 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072756671 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052349889 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072841992 seconds)
    (264/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05094369 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074466729 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053373924 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088578466 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066722836 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065874378 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061199328 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088485449 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088179532 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111399504 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094453373 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09099096 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051161218 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193230713 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068482179 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050661817 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072250819 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102141528 seconds)
    (282/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051964803 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073722869 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072446416 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064420426 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063757055 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052103078 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051195219 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072274536 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127832439 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072356622 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087741909 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072691469 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065650413 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140972406 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06089232 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051255932 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071341935 seconds)
    (299/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065562459 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065643797 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050647688 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065605383 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086557243 seconds)
    (304/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065985158 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052374486 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070554372 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050745832 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087862767 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068395242 seconds)
  done (took 29.622496596 seconds)
done (took 29.716402088 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083863633 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091922279 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074563602 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093163138 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080673846 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075845354 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073059684 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078323985 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080123377 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081927694 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077872983 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053696658 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073621602 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074576691 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074890363 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091756087 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079681612 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073492641 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072928611 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065247796 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073344546 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065519798 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067088211 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054069431 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078550909 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071709598 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071937272 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073890749 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065233818 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065328019 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068960929 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073445901 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065429905 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078657375 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072411078 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073285884 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07431459 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076773847 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067315559 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065994391 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074047811 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065827206 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073019311 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073640753 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071813061 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071671991 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073525963 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078148852 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091303275 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068001144 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074827976 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07588271 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076135114 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073014226 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069857959 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073240216 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070903779 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091390267 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074008673 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067222794 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074148584 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074086473 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07114093 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072754107 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073009864 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074930523 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07549941 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071027377 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074197792 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071294285 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064872899 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073377252 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068617104 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065540294 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075836789 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077111385 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064251542 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071094064 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072937343 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070981125 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064512442 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067087265 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066974992 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071507216 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067168646 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05380293 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069398699 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072329176 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064223098 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073359308 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071706083 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072216445 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066929869 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075471296 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064528002 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070425473 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065110818 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065043901 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066870132 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069434951 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065319814 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067689626 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074382459 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066996893 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07125129 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078741076 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065346657 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071882255 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063894884 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064681944 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079743451 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074568772 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065307614 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067921017 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064356111 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072686842 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064131052 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064894474 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06544208 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065397757 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070886056 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064692006 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06662058 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071785772 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077875398 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064563804 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068411807 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066247348 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064453144 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069882932 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064321805 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064394608 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065702472 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060892387 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066245204 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064272027 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071830667 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066332216 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071995269 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065690129 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072301799 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069590682 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.207113445 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071130497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064310788 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059016867 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068007771 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067720003 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067323927 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065389085 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067720184 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065673015 seconds)
done (took 11.11213184 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068831351 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140485503 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098749048 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095089377 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086402894 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066204375 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076344846 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102688777 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067730333 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102404198 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088372128 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085756486 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115408636 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064748686 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065921037 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069944227 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067461162 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082665998 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101764726 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087584241 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116787005 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065588414 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093543819 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089771887 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089142149 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103818638 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069321746 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069756455 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069225212 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093315489 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.0879628 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069777384 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066423246 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098505348 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093656861 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084424049 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066082225 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083692532 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066669612 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065788887 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067379016 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099030424 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08087952 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080981858 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06974315 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068946964 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066805568 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084050509 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089845498 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079556248 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087000475 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101783417 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06859955 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065396986 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064329911 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086220371 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065272755 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068825421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066233118 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068674716 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066249672 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069141628 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081007329 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080392365 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069903519 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079699544 seconds)
  done (took 5.396435244 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082985561 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091057048 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083708821 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083992537 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066245042 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065765712 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067141847 seconds)
  done (took 0.690706897 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066813451 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088103955 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088571671 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089169225 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081266594 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087684094 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075780095 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066481166 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087542068 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067979308 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088130585 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101080426 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070524388 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073476615 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090834456 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066385681 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09099612 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067165193 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069949237 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091104639 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069336667 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095870622 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069874132 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067611144 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081619928 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066742132 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114243818 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07072004 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068219402 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069936599 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064297055 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107750411 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080938019 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075010604 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066639076 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080995308 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081573602 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065021276 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083176727 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075195084 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080416614 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067167182 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067716916 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064620153 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070323465 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076638514 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067095396 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06682761 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069259886 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086658421 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067631213 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080912508 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069269039 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072099287 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068066207 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072973084 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07656575 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066968394 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086279451 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067752708 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083679134 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083050106 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080233434 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082693475 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069046616 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080124216 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080519665 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069096161 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068081092 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07021977 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082644472 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064820051 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068253871 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077315932 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068703379 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090293318 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089889312 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069066534 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080350949 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067968497 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067010212 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067218844 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090458873 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072266807 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066894064 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070619033 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06959761 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064991672 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065639196 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070483308 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065401988 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068120246 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069691763 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06993836 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06922126 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083749212 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068948877 seconds)
  done (took 7.414652005 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069524072 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06795591 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069906372 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068446959 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06771783 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067813115 seconds)
  done (took 0.584469373 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095092754 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068716729 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081047995 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072054594 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104403756 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086989804 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087748252 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079241514 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084310773 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079098623 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087079306 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089224049 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092834678 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07233939 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087810096 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071597394 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087957041 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075658627 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078174225 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072897705 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087459329 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072536118 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072779927 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081666369 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076430006 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071911535 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067872837 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078808344 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078153081 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078203808 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072296782 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075470684 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070556029 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078474636 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086532864 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070778492 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071812259 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076754063 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071807202 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075966838 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087706094 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072388945 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073785145 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07716784 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07790104 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070209415 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076810673 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074689087 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085955783 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077117346 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076777635 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07094913 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075404324 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076911114 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070029248 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078058131 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076640384 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08647828 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071798879 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070158046 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068163629 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075789551 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077376563 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07579225 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078455072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076900797 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070509035 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07231214 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072353599 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07110718 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077212915 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068915921 seconds)
  done (took 5.659104655 seconds)
done (took 19.835698325 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536144957 seconds)
  done (took 0.577628545 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617214467 seconds)
  done (took 0.710602951 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.655383139 seconds)
  done (took 6.738663336 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.414598956 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.524629983 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722605126 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132357484 seconds)
  done (took 1.900028964 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704693777 seconds)
  done (took 0.824027033 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218786776 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202782326 seconds)
  done (took 0.533145621 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379635316 seconds)
  done (took 0.45604357 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.128270009 seconds)
  done (took 1.203260263 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26587845 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176003212 seconds)
  done (took 0.534234958 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.476875101 seconds)
  done (took 0.557008116 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.861729457 seconds)
  done (took 4.941785644 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217861377 seconds)
  done (took 0.353772407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239930893 seconds)
  done (took 0.31103837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.752924044 seconds)
  done (took 1.826297036 seconds)
done (took 21.617474685 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082788382 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08103259 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080930903 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078576726 seconds)
  done (took 0.364974441 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079999532 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074825731 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07773469 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072356 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077072251 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072875335 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07512809 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075317712 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073059587 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073040635 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072546738 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073052005 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074814791 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073800201 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070857074 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074705617 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07614065 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072195548 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075482931 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072597229 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070706801 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074703159 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074897421 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071919729 seconds)
  done (took 1.855333545 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080391865 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073167382 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074569419 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071978688 seconds)
  done (took 0.397597886 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080554735 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098687893 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089699125 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077339224 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092990805 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086608641 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069562712 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069145763 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070747721 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077340108 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067516388 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096070628 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08818756 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076818475 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079644987 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065657305 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067989192 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087266654 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078239735 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077803122 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06997312 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077377102 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067678478 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08799055 seconds)
  done (took 1.974657186 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087746512 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105668463 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081424534 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089002002 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090730566 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0655164 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087137302 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090708852 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12562158 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065298005 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070327553 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065388984 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072629857 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064866958 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080740488 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106674147 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110751392 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068556772 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096532956 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065777908 seconds)
  done (took 1.793479437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072938821 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069487667 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065020818 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068694008 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076976636 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072756641 seconds)
  done (took 0.524558205 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071008234 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068527533 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067167081 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067177005 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072109105 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067162115 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066016113 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06728274 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067263716 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066663772 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066590351 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065446035 seconds)
  done (took 0.890391204 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202080626 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068170409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06925234 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065627415 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071176605 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066873567 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081085331 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067678398 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091490253 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066756904 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066459079 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068627834 seconds)
  done (took 1.06908194 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212271953 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076994661 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239718959 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150910699 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110956552 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115779036 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112816334 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113694388 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142650274 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100906768 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168973775 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167109859 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107399921 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136841761 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088489599 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100311336 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154976538 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162903327 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105225458 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167245881 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145881201 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125766712 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148183435 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106361469 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106176297 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122203774 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071039615 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080053994 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170878504 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132901459 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144538459 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110532802 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092305557 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178465568 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172475784 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141113363 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146493106 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083651474 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105244518 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134023114 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200037728 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088300539 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161178511 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107949255 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07943694 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273311952 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12000564 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120896728 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106013502 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089594571 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145050823 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18304445 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137329952 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087216637 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12386618 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113951825 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114031536 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11368114 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181925543 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161862162 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127961696 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070844215 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108337591 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153184772 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133237538 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108745828 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124872772 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092295027 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135165288 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155849265 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120955435 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145239238 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116746101 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088437932 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119513125 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140471531 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127760202 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162015229 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123899251 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072633248 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124518994 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10207819 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080474665 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144982192 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075390103 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176583674 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099439409 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108874342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124436963 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109077304 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108129984 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159525314 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145022234 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103442711 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065408696 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104197216 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119526484 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289568181 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087870612 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109823061 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118367577 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077040475 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13793284 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075683712 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123410815 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076744301 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128011141 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129065239 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077063607 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122156451 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103749169 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100674863 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132886034 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160434999 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087521057 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081935593 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168960072 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121379417 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102648356 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144820901 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157393791 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101344455 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101126116 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149565195 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180239635 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089601418 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163722624 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106406741 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083215669 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087873937 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123491083 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11179351 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123497769 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081803347 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118021866 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169853704 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074782347 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095381918 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133665737 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078236299 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080817746 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105126323 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105278578 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095954751 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101170563 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103888097 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136044603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122752293 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105431614 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124732908 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097466557 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169512171 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087890422 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10106229 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103186333 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068555911 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.282641262 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159365849 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079569442 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165906243 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124603933 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115760473 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119175921 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082763856 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140506812 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078732811 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070296815 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143668823 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110572673 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110252902 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151313147 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116205327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125906502 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118554711 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133051175 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131286859 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130749098 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105346363 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088549673 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11230815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126221666 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073218893 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090857002 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079869642 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104647247 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095908797 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082701356 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142135322 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124748521 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109505626 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112284262 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097004082 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148474381 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075852963 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128458318 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119488779 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095303422 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152833224 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15411963 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132523007 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099752868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136795135 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070008285 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073303518 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088347821 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122829293 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08188118 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082987765 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115915854 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147697332 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129796169 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134589103 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268014885 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120917499 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155115226 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069681932 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117366141 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148190932 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121805795 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105735979 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090764988 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098898686 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143475631 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107434046 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183631785 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116712029 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124062764 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154044715 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101230881 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079625838 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103352617 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136562679 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103965767 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144570173 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099949726 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088299541 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110572006 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074717697 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098766717 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127231735 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118714889 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135444302 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115188274 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132693167 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07770413 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115708509 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121040225 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121941703 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063725762 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120968546 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162481823 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094737632 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120125896 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155091044 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079105403 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134721366 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17655878 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144259332 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084671986 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107578595 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118625965 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127956453 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120029995 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139606304 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106985379 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28560892 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110323193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086248899 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086848303 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097466484 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104750061 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095107457 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106743621 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112821398 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095506685 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131262383 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103619003 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109873391 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117669716 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097692241 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090685255 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096575565 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177047527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118673917 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170578586 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099269613 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145170497 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164380457 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074435305 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078462351 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07821017 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140649935 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084030632 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13086155 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106870095 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116888363 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123994587 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14335652 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095516048 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068191812 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109010403 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133204846 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124550407 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097897172 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103638492 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164064864 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100995617 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079004683 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114263445 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116571505 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103136906 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173505124 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061682878 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106644238 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076168211 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08027659 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128743723 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15092893 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079714487 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103171686 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118942154 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111758276 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128229914 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10255757 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107128059 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274387512 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15111543 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128055501 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089624294 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112174725 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128918758 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157914048 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105278965 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096458915 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171800557 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153640343 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161185297 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08716533 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115053385 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113886998 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108149005 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138591932 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083012653 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164671904 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082201597 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137219695 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103424719 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08871927 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129489733 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108321565 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088113673 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148419112 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117749849 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082321489 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07744524 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117627722 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119368156 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106177744 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075398161 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138945941 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073390274 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132338316 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161362496 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080781579 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108287202 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096746642 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079659919 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106959491 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102383968 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087102959 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099249103 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171155337 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086748751 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149825178 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133207098 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112687001 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135733043 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249465137 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64054915 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078429194 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154195307 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11654662 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176924846 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100639239 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118537018 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109892771 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122625632 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144390536 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103637277 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178512851 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131697798 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115248336 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07928914 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10177109 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104531602 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087410906 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107091283 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11404054 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115232141 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093116492 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116117555 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124656088 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081961079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096096617 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157017588 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117224737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144272035 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140887349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085492211 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117663328 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138701866 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080126064 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121434468 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153554752 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106323229 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099393707 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081138539 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100809199 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159653029 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073035053 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160754381 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121067376 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110406585 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112463246 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111794555 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129869712 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106235029 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121180105 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091958045 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108840898 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112333537 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079588077 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075510641 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252971732 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112429582 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099211455 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097834355 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099261593 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153939495 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071797187 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098788466 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115004843 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144595442 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17478302 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088549083 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082961388 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11895516 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11475948 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113164797 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121473975 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078870163 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081220398 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080811946 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077652784 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109066477 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11291558 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114500157 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111620092 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164832032 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.0828587 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229494898 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095492024 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10571324 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069288391 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078433731 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095986625 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098346615 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107257488 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109921845 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159280877 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095363451 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089775596 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09109503 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073425256 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083466678 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12874696 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109716951 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118960499 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09920798 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061988156 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108188844 seconds)
  done (took 57.534177379 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108261243 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083216133 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093948217 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143713493 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123863783 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202795785 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15328037 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18894367 seconds)
  done (took 1.2851142 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070515263 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095709867 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103605568 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083947791 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066219303 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067709405 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233789228 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080582664 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066691702 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099345216 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077842131 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068590134 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426904867 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065806694 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067219075 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06088008 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067033759 seconds)
  done (took 1.895992463 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391027526 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608421849 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350309903 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071885595 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.457592185 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083741401 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.131005943 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128688371 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072565024 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523240745 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.405198372 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125616959 seconds)
  done (took 16.463559289 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077393094 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069713664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083786854 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083254734 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072357957 seconds)
  done (took 0.468502834 seconds)
done (took 86.606886661 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083628952 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.61944967 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053607371 seconds)
  done (took 0.784029028 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086130031 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085035195 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085387333 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082915677 seconds)
  done (took 0.439617085 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077266701 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075805462 seconds)
  done (took 0.236101967 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233669395 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164345515 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095935233 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084352386 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078544353 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080757999 seconds)
  done (took 0.338158024 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075021416 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075181892 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072142073 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076361707 seconds)
  done (took 0.377656341 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079862966 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053182071 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054468377 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057759911 seconds)
  done (took 0.326746927 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089954084 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079507954 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07865112 seconds)
  done (took 0.331485799 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10541046 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08613601 seconds)
  done (took 0.272914851 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085601451 seconds)
  done (took 0.167466613 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104278636 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101467778 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131852216 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111051369 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140266476 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109572108 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085735739 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086995804 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076982073 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087646086 seconds)
  done (took 1.116196401 seconds)
done (took 5.052732239 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081561369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.462473177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360421557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090050696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668578605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357314659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991863112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093155945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115700886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067493004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08405511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647461211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981304703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419027519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968322477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323461622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649716422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068784801 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067701951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067577016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9765813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067434526 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06768057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06816197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647951511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372493188 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068659906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31877963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068265469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069669545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355328502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068736899 seconds)
  done (took 14.763185298 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071781963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119950686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073783039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084816205 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.06991427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070137858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071657885 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069601238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121594198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067861673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085696786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068296981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071660306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.084948985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088106139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068501109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068567294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069722675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06862155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067945335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086988911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068011301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068098898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068591761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068098394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080035889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068582088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068166994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068053863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069580363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071080479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068735304 seconds)
  done (took 2.533838017 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116123181 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124971491 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073818923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104029755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11155041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069539947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14249102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093161801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126901344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067984288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084782196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068354551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103267947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069371211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087848602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068525685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069019713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069142357 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0687833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068374242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087528658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068150855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068322826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068507428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068091623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081418692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068334014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068450971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067833636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069762338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071159006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068436506 seconds)
  done (took 2.758122511 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074600519 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075918301 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082818403 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084653514 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069847838 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071596863 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073741438 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069555442 seconds)
  done (took 0.719181031 seconds)
done (took 20.876914621 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081737497 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069721946 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072098543 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081636464 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073198306 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078760047 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067528643 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076708807 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072407463 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073283792 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075370516 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068077596 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07098974 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06702557 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074203283 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06892856 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078820901 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071859423 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078898847 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079140539 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070021279 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07274979 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07481127 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078754559 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079428034 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079273131 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077645388 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072999166 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068994002 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070434032 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077531421 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083676652 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068327686 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07901764 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067997866 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067255424 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071387306 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067666632 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079497402 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076859037 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069625758 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076502156 seconds)
  done (took 3.158708102 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089871352 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093399892 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08461346 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06132265 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067043375 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065780236 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089472993 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06009235 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059565216 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088730166 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056405116 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059136427 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066484242 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053117265 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060728504 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056581694 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062099398 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05528678 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060467638 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059803713 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089256037 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053440834 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077593466 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063204671 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055720205 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06112567 seconds)
  done (took 1.875049028 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075444349 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085714292 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090033617 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130745803 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10644576 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079786489 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079237108 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095854557 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08879384 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066787979 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070960237 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093026313 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089645408 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074856043 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067807527 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086866843 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08409997 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068776431 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073641915 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094713428 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087021044 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086453323 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095987766 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083791342 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066939158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069545763 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071438122 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081413971 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072870218 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076503008 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071333856 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071187056 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06952252 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078700707 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071265154 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068871812 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092325878 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077372158 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078482565 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068526693 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076549943 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068703574 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092510431 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125623321 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067416342 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074408047 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071322444 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077962091 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067849455 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088159455 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078994197 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06753578 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070522105 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067284795 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067853648 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081280735 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070364537 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069840256 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077692568 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07391973 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092813868 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072439776 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083732087 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067448607 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075726782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067606906 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069103801 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06723965 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095971187 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069880834 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11152133 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069341398 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069121171 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077725238 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075942753 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074356501 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06833953 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083850505 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078384463 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071591559 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077318592 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071572716 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07071552 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092428893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070160166 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070997634 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068577061 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073927636 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070914399 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069264462 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081304326 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067568689 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071204719 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08511263 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067757148 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069237141 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073842598 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072413005 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067527653 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078942953 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072599655 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068412695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077537369 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067865047 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070519525 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081623138 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074427688 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066556592 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072281762 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073515262 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069620101 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069784262 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070606783 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070587407 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077113647 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075371462 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072486051 seconds)
  done (took 9.131663804 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165475711 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15759265 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.081614872 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149928211 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077229572 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079278923 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151116078 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095039926 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068142353 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068384481 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069407838 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11173431 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10699943 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11699822 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079817942 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067817979 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084867779 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115133616 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153556759 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146961735 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085041732 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077423683 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070103622 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068929486 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070794643 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078747605 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085684852 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07699348 seconds)
  done (took 2.963666053 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081794876 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104968934 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075995092 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091327832 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091045053 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067776227 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071153676 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.0704935 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081198299 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079437186 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067758857 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07408868 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075112172 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071449634 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068707333 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075043715 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075718859 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069911277 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072248198 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073786585 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079666224 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092138878 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072053794 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066877724 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072870044 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067487553 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06383003 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084944389 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068692332 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095392144 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065852831 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073454154 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082408447 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068788369 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068260381 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067751217 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067750509 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067932791 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069627903 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066341582 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066929239 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057545622 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067211779 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079565596 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074517239 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056426668 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072360268 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072726275 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072998012 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065229884 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070895261 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070240102 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071247805 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075843805 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072086 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073030273 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069007515 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07423801 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077174984 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068399868 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065207214 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066326516 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072693821 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065842368 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076424089 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072768939 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06636981 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06773196 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069993974 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074822949 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067907291 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072407684 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065492072 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069904537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072776395 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069892317 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069301134 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066698772 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067804749 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068286047 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055125532 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068055002 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053634036 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071871675 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066179615 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065975278 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068133838 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072473359 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079948674 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068992374 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073439064 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068738042 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066885679 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070577717 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060589491 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071036803 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083485116 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082791832 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067626269 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065241079 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080862761 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072210544 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06705764 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05572354 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072644905 seconds)
  done (took 7.657689973 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090155446 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069614157 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085193904 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091576805 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087452636 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075101731 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077880611 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069647937 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083758972 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074606 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07715515 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06770724 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078496935 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077082534 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069709837 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077555319 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071564343 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084522372 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082330625 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067787487 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076623488 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081753022 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090538247 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081895228 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080785843 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082056329 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090653061 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077280761 seconds)
  done (took 2.407823735 seconds)
done (took 27.281669606 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.134216474 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.337263512 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.138091958 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.509445902 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 5.231937024 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.514121708 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.249616957 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.130277336 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 5.531973197 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.199973378 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.332821051 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 3.243645625 seconds)
done (took 44.612910612 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 5.153199705 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.266767984 seconds)
    (2/2) benchmarking "String"...
    done (took 0.366844662 seconds)
  done (took 0.692301953 seconds)
  (3/5) benchmarking "replace"...
  done (took 1.338211297 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.685708934 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.382439526 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.128008228 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.132670565 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.470625183 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.964892308 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.651890168 seconds)
  done (took 17.475399309 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.294599621 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.411480843 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.942131025 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.941948228 seconds)
  done (took 7.717373509 seconds)
done (took 32.539875959 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.14928413 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.151978839 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.148094236 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.110690786 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.184623119 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.131815188 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 5.288800694 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.373854273 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.125240592 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.114850602 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.160733268 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 3.581191562 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.134059729 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 5.326984666 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.126941686 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.138115191 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.158066489 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 5.579976602 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.283074904 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.136771982 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.130193346 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.200254377 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.13374333 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.139192002 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.129776443 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.124118426 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 4.549631468 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.137932401 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.738120369 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.128185046 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.161381278 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 5.490424546 seconds)
  done (took 150.519098209 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.127156189 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.21555063 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.27032651 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.152967138 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.795869495 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.309105172 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.244723 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.801974054 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.127151834 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.129103679 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.458558113 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.125161014 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.472348591 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.14053109 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.156093644 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.223172533 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.397952837 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.456213302 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.157276857 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.26560381 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.140642362 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.452703691 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.395205424 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.409580303 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.134567795 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.216251236 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.140056892 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.149233501 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.329989394 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.372810712 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.144807128 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.14917919 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.255710657 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.001214626 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.126120002 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.136460929 seconds)
  done (took 110.638717967 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.51340426 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.126878084 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126550095 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126481072 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.1323419 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125260692 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.249825579 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.249397366 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.736794013 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 20.559184641 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176503226 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.935059566 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.12359601 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.194369082 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.137253951 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.125922752 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.141779603 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.152566681 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127097018 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127217325 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126530592 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.252137775 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.138785406 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.133079995 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.127276465 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.132171144 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.498188821 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.120530152 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125150189 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132076931 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.371240848 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124440723 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126407457 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.020834506 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 9.809975259 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.210494667 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128085002 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132674401 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.127235107 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.34699285 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124891133 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.127013322 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130540415 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.290621381 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12572179 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.248542003 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126790958 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 2.625883673 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.125244037 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126859326 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 20.934669608 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 8.804445514 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.125614572 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.126270681 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.130021819 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.125715181 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.126780607 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.132451571 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 20.778777851 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.20533542 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.127952509 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.130943473 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.132004048 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.126962425 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.207128644 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126750076 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 20.739042703 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.183812455 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 1.250043254 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.247967381 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12670786 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.195128336 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.218772271 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.124611842 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.12696821 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126696529 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.127509375 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.208221195 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.126026098 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 2.250799852 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132517514 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.128186417 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.177192055 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.196302946 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125021717 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.028584525 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.126984273 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.126864646 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.430640891 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.123860223 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.194790348 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.125039706 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.126561313 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.127141268 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 2.251475782 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125942185 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.247988969 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.909034815 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.127276499 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 20.811742343 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.134087734 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 2.266831205 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.124537125 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.302181887 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126907721 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.211081851 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.128758774 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.127388721 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126435405 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126602135 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.126404921 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159139885 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.125945173 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.187700235 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.497979667 seconds)
  done (took 212.808443434 seconds)
done (took 474.563188416 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.782660821 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.739870204 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.859129664 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.767210227 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.736303402 seconds)
  done (took 3.934632482 seconds)
done (took 3.989772566 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.209104194 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.2146771 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.149906198 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.211648112 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.14654321 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212497141 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.194874582 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.152869485 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.179718073 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.152384767 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181000866 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.151397766 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.138111183 seconds)
  done (took 2.345268722 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.354988066 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.373717219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.207793435 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.35832842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.184919994 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.362641705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.294712064 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.288240779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.285500615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.152308907 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.141805375 seconds)
  done (took 3.060745369 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.364286489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.379648381 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.21155728 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.374763726 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.186708983 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.364480104 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.294367755 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.289628256 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.284777971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.151376256 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.140894981 seconds)
  done (took 3.097293813 seconds)
done (took 8.563938347 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.135656613 seconds)
  done (took 0.185158199 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.160903688 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 0.313795859 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.140944946 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.140523952 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.136061998 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.137097491 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.140550789 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.136610942 seconds)
  done (took 1.363273376 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.131590594 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.133898036 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.131495474 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.134417757 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.136279993 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.133245299 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.1361536 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.131145285 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.135347428 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.132934191 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.135723663 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.132452166 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.133810564 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.135909329 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.135782591 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.134816779 seconds)
  done (took 2.201339285 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.134304206 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.132536675 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.133001536 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.133320145 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.132942011 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.133424397 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.134158544 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.132069209 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.132280845 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.131965886 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.133947511 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.131462207 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.133132022 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.133002876 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.131926686 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.133254382 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.131929997 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.132525932 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.136814609 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.132082292 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.132288 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.132420767 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.132109119 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.132879799 seconds)
  done (took 3.247689007 seconds)
done (took 7.052152481 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.944604604 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.647335347 seconds)
  done (took 3.641673981 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.134864559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.134592596 seconds)
  done (took 0.391791037 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.134802999 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.135098294 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135661193 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.134849366 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.135436436 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.133856761 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134432304 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.134380145 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134845351 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.135500826 seconds)
  done (took 1.403899266 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.135384612 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.135607907 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.132694726 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137386932 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.134535793 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.132706654 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.135246049 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.135371338 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.135057983 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.133281912 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.135926972 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.134067798 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.135778849 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.134479673 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.136226001 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.133384387 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.13242705 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.133302717 seconds)
  done (took 2.478264656 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.135605482 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.136145335 seconds)
  done (took 0.326583889 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.132394208 seconds)
    (2/7) benchmarking "second"...
    done (took 0.133769438 seconds)
    (3/7) benchmarking "month"...
    done (took 0.132614714 seconds)
    (4/7) benchmarking "year"...
    done (took 0.133917005 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.133144114 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132836669 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.133977393 seconds)
  done (took 0.987782714 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.136249085 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.292742802 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.363825859 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.832273274 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.1351314 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.13847432 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.119155662 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.139783915 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.141877929 seconds)
  done (took 3.355118947 seconds)
done (took 12.639997879 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 2.915342216 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.12675869 seconds)
  (3/8) benchmarking "parseint"...
  done (took 1.520339579 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.219468106 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.137768682 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.425227697 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.144699837 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.43741521 seconds)
done (took 27.984491849 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.212454767 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.695574014 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.756472331 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 4.578005483 seconds)
  done (took 6.082051328 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.118359638 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.667706465 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.183472621 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.709913537 seconds)
  done (took 11.856628158 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.498853518 seconds)
    (2/2) benchmarking "read"...
    done (took 0.488945681 seconds)
  done (took 1.048670108 seconds)
done (took 24.257874039 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.133649185 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.134689295 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.13125202 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.13433302 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.130690863 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.130674379 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.132181143 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.134325616 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.134359846 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.134529249 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.134870897 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134862849 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.132152645 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132365506 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134603768 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.132464713 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131586809 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.134627462 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.132044186 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.135100684 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.132515848 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.132565941 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.131497844 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.134756534 seconds)
  done (took 3.246790256 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.133685172 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.132649383 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.137518008 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.134282909 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.132338419 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.134005418 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.134157888 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.130737776 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.13529186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.134640039 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.131699511 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.131011375 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134707469 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.131839835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133360136 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.132188898 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.134894683 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13168747 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1344378 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.132692078 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.134708548 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131758151 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.131883196 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134077497 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.132013198 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.133596425 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.133677634 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.132145133 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13441689 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.132361855 seconds)
  done (took 4.053769424 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.138497181 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.141764961 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.134544571 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.134765561 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.134130211 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.134283441 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.134672702 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135556932 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.135254483 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.134210202 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.134955687 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136112958 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.134744342 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.134562649 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.136483829 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.134255062 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.135773267 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.135850516 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.135247088 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.134874196 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.134784684 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.135496346 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.135118688 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.134122234 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.134851495 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.134438387 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135459781 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.134220552 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.133908491 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.135032146 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.134770399 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.134774681 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.134676399 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.135035977 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.135895561 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.134319065 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.138754905 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.143867047 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.135682209 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.134978243 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.134697886 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.135841883 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.134450566 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.134160097 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.134058048 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.135270257 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.138526797 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.135330354 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.134038968 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.135976561 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.135884137 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134249802 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.135135862 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.135730071 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.136310363 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.135608522 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.135517609 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.135453862 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135494669 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.135616025 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.134763774 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.135826896 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.136213377 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.135836935 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.136271127 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.135632143 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135931572 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.135359878 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.136227474 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.136502962 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.135313735 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.134947799 seconds)
  done (took 9.813521107 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135056661 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134281477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.133056805 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.132788742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133026057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134805054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.132900673 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136054957 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132517038 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135584224 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133827332 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.133705931 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132931091 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13572364 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135256373 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.133237233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135871265 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.132829572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.135468662 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.135913882 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135933707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.133433791 seconds)
  done (took 3.00917331 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134821061 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.135956085 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133391627 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.135977419 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.133752269 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.136544694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.135940728 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.133574297 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135830106 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.133014274 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132933127 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135974597 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.133445307 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133330402 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133087536 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.134462272 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.135258159 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1333703 seconds)
  done (took 2.475536884 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.132786225 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.132875192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.135990804 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.132205065 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.132765654 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.135884226 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133443399 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.136836623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.135817155 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.133322066 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.135768745 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135988519 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.134707528 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.133101177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135248031 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.133945641 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.136540121 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133079063 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136368793 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.133426023 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.13360949 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136493743 seconds)
  done (took 3.015249422 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13520615 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.13638095 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133236074 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.133303229 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13333065 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.136028635 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.134797582 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.132860032 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.135835806 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.136265033 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.132542162 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.134784911 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.133413542 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.13220595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.132058232 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133124369 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.135032518 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132412897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.135793733 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.132189297 seconds)
  done (took 2.735926088 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135651261 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137064698 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.135576597 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137729832 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137098299 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.137657055 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13755289 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.136403632 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137463562 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137354888 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.136416821 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.136949308 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135582958 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.137225752 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136027695 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137664839 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137058849 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136300175 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.136884069 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136888992 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137572068 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136784622 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13778565 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.137846883 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.137180523 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137842775 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136080404 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.138042438 seconds)
  done (took 3.891368806 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135895195 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.136623353 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.134060676 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.133913648 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.133830361 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.134352018 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.134592593 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.134097934 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.135496534 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.134037788 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.134971699 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.135596329 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.136041185 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.136752477 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.134793295 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.13550521 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135567458 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.133297682 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.133850839 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132286565 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.135660715 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134937633 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.135361921 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.132129216 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132601447 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.136090143 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133776607 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.133344314 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.136340163 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.133010237 seconds)
  done (took 4.095691222 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.15297407 seconds)
    (2/2) benchmarking "in"...
    done (took 0.153855905 seconds)
  done (took 0.361447858 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.131601428 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135544454 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.13712998 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.133323535 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.13354603 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13634908 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134720468 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133261722 seconds)
  done (took 1.130425082 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.133785701 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.136451729 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.135494227 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.136150821 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.136727687 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.13669131 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142581668 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.137213463 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.136821783 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.137860592 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.14245658 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.144093086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.139747355 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137490331 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.135628202 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.137624283 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.138297865 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.137976122 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.138135653 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.137691129 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.138535937 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.138285163 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.139635714 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.135291843 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.1378538 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.146623861 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.142022159 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.136461836 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.135273634 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.140127976 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.136134793 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.13451364 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.136797279 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.137513158 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.136047449 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.137144977 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144647794 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138593681 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.142294275 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.138430181 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.13604858 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.133551492 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.137919795 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.138031371 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137091282 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.137409768 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.135489764 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.133334714 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.13396853 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.138484223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.140778337 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137121393 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.133508734 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139727868 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.13886676 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143949432 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.139394802 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.139529158 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.145231251 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.146010199 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.151780009 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.146590444 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.137758928 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.139594185 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.146504407 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.158482955 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.144415884 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.137331125 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.134934403 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.137086265 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.143063126 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.152056837 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.14755273 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.138694802 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138340289 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.137380775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137507102 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137386022 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.144004941 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.142611649 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.138434253 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138782249 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146312244 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.157771216 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.137005777 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.138131679 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.137512651 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.13745224 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.138366003 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147575951 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.14091854 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.136648762 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.136773907 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.136711431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.138006803 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.138140886 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.136123868 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137351669 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.134223389 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.137441301 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.137758229 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.138405265 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.1453904 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.138157529 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.136710113 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.142488775 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.140028697 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136755439 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.144151543 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.138730481 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.137082669 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136576749 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.142653539 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.134935245 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.13980126 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.145092301 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.138998693 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.139224202 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.138213733 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.136040505 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146460192 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.161544819 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.137330427 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.136363617 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.140089574 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.148901701 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.138342995 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.139689385 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.13673503 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.135295064 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.134496997 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.138909727 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.137257942 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.137411006 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.137845953 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138064229 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.132524468 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.13684308 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.137525957 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.138109014 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.138168718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.137733495 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.136930865 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.138634761 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.138342054 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.138886821 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.143778301 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.138357706 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.137617347 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.138773543 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.135084816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.135700101 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.13871197 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.137828785 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.137054026 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.136758566 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.136435055 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.137676823 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.137365681 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.137350228 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.13561365 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.137326377 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140095614 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.137743949 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.140889631 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.13703709 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.134994392 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.137108309 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.135878278 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.137309982 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.13657243 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.134525543 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.139534122 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.146360064 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.13707703 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.137278083 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.140194581 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.138952799 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.137782367 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.137822441 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.140297297 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.145080753 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.139195251 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.144423634 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.140767742 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.137248952 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.136967092 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.137221017 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.1380676 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.138085033 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.140613557 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.144910196 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.149962011 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14639796 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.138465468 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.140097759 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.138718473 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.141140141 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.141905467 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.139960564 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.138714511 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.138830275 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.137886939 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.13906093 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.141498963 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.138620184 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.137701018 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.139974685 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.137985171 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.139240345 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.138172747 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.139231669 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.138773014 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.135578347 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.138069961 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.138543566 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.137275767 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.135771291 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.136952157 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.138453511 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.138463128 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.13951639 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.145286088 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.135471924 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.138663224 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139526959 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.139175782 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.137428516 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.136558901 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.139849869 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.13941812 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144814676 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.138088874 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.13818427 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.143020577 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.138323321 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.137134106 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.140407283 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.139636534 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.13536463 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.140439108 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.145535141 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.138095268 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.13937061 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.139026884 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.138677476 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.137539079 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.145040088 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.138479318 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.137878217 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.139011366 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.139785091 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.135907869 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.139924308 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.14025127 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.140564805 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140522891 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.139224898 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.138730991 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140221696 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.139612276 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.139625405 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.140359456 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141355752 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.145092072 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.143600409 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.139062259 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.140471429 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.138908929 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.142261479 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139037984 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.139390581 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.139027376 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.149308916 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.145510194 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.144808831 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141344905 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.139631373 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.143896879 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.140221472 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.142310634 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138302967 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.139089833 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.138526018 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.137907943 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.135937637 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.139514371 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.139124507 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.139379152 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.140634816 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.1419801 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.138714776 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.138109446 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.139588814 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.139982042 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.139048653 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.138275792 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.138749652 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.141278158 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.140238725 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.139477219 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.13894452 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145730846 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14128418 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.1401938 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.13863537 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.138787829 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.138422058 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.140034598 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.140556195 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.141636008 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.147184944 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.141555145 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.147547837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.139738194 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.147259287 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.14137515 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.141628659 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.146785555 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.137467622 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.137449144 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.139327807 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.139738894 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.145717168 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.142037446 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.139527126 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.142864363 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140265293 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.140443784 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.13910634 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.139962193 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.140396339 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.13975255 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.147483958 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.142707488 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.142442267 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14111184 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.138868708 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.139685959 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.139953414 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.138285987 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.142842746 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.140531606 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.140531267 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.139332938 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.139360623 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.139162631 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.139801245 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.139690884 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.136296879 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.139064163 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145413733 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.141822021 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.143258412 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.139655668 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.14669502 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.143262332 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146254635 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.142134784 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.139758351 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.141600496 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.139568175 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.140250109 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.139038655 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.14031318 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.139649579 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.140219924 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.142123032 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.139509233 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.141727561 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.140057112 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.140598239 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.138512213 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148016277 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.161300662 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.139700789 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142485944 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.136007872 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.140516979 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.144742342 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.140135902 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.138559877 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.141489855 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.149212964 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.146044508 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.139489207 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.140572064 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.140498545 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141078192 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.140378442 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.139306741 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.140641054 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.140111813 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.140458263 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.139969948 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14348059 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.140497692 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.139875516 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142306496 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.140396964 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.148651824 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.142502299 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.141354399 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141567733 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.139665763 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.139645513 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.140080696 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.141590167 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.140746364 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.139728262 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.140625544 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146599099 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.145157987 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.142236532 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.140606597 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.140732836 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.139853763 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.140372261 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.140106028 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.139163067 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.139611635 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.1404616 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.14024004 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.140009088 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.137871828 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.137495899 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.139825798 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.139696056 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.141787686 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.146266483 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140259443 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.136843794 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.139775113 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.139387712 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.13823715 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.140089041 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.147597131 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.14397403 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.14965365 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.147171983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.143934486 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.140436472 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.142381345 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.147406111 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.139068198 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.140313151 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.14060416 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.141577589 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.140281177 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.142763246 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.140528632 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.146921678 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.142028587 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139579595 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147199695 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.144142338 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.140971889 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.141169761 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.142995838 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.139680376 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.137079058 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.140302644 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.13879779 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146798602 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.144346502 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.141790187 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.142476737 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.139487774 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.140169133 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.145334857 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.140423176 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.140880688 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.138554265 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.140039004 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.141680154 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.140764296 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.137047244 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.141083022 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.139647474 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.142346172 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.146612956 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.1371633 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.141429209 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.141371107 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.141450906 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.141391507 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.14015671 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.13739118 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.137154877 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.139620223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.140575267 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.13946454 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.142409471 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.140561016 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.140571581 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.140566256 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.140751191 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.14358222 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.149540124 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.147113436 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.137504609 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.140869371 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.141867725 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.143766548 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141757801 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.141391995 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.141666125 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.142007885 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.141511842 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140800873 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.140591138 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.143010157 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156045716 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.143410507 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141039039 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.1410148 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144875474 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.142047171 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.137810962 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.14020643 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.14267723 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.144033492 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.147970002 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.141485619 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.146571233 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143601832 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.141132879 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.143327404 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.142221172 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.147309903 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.143754373 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.140865174 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.141567585 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.144857064 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.155552609 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.141037634 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.149102483 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168134194 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.14074517 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.142895562 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.142822503 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139923918 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.141771916 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143214189 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.141458477 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.139134259 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141019752 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.141662169 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.142164364 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144837675 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.141334636 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.140946312 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.140812156 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.140578025 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.141658463 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.137247819 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.141070719 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.140806707 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.141494404 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.141956111 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.142405173 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.140394399 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.152992025 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.150024758 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.141158515 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.14176789 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.138301378 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.144615879 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.143103723 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.149900977 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.148198089 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.141212138 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.142144906 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.142369032 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.142802612 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.13853865 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.141062888 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.140001901 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.139588311 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.136338238 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.15318164 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152040851 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.14541751 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.139833318 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.141149762 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.140980728 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142223052 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.140916608 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141472606 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.14371333 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.14060441 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.14494234 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.141197645 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.140266605 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.143040664 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.14746996 seconds)
  done (took 83.914093409 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137347413 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137681627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137623139 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.138238384 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137803337 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137563905 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138193093 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.138080167 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.137723736 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.137874298 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.138433319 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138084523 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138199261 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139727781 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138239821 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.138009066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13804036 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.139152268 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.138081817 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137635182 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137798457 seconds)
  done (took 2.957028853 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.139986321 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137376595 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.138116373 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.139771979 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138125485 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.141020458 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.137094102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140453557 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.140876585 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138365499 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.140935284 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140283557 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.13797416 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.137729118 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138016174 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141117302 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.140722654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.13817334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.140901199 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138201167 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141029416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.138163854 seconds)
  done (took 3.122180587 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.141429382 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.142094301 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.14007276 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.137726921 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.140103964 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.137737189 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.140679902 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.140204019 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.140432481 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.141031285 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.139053724 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.13958256 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.146731529 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.144481669 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.142445861 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.141534888 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.284596895 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.139821385 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.141114146 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.141268694 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.136630791 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.145943379 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.1380309 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.137205633 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.140180303 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.141945597 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.1411825 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.139513584 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.141658346 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.141323811 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.144985237 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.140916537 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.142143556 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.142697634 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.139883888 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.140998002 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.144694966 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.142432883 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.138875881 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.141085535 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.150471451 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.159986557 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.141137403 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.146797778 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.141530655 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.14172399 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.1429997 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.148177438 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.137371387 seconds)
  done (took 7.153532454 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.139870574 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.140434894 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.138482062 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140697011 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.141835765 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.140374142 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.14088633 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140994399 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.138106974 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.138834634 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.140886481 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.137753757 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.138388801 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.141371742 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.142248946 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.138528335 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.139006316 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.137818831 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.138085635 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.138457979 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.138158386 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.141283822 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.141506633 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.139016101 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.14068143 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.13663438 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.137301179 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.14085286 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.137755575 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.138485726 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.140815288 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.139509326 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.141466767 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.13885348 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.138819031 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.141188212 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.14121264 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.138845199 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140994526 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.138859427 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.14149326 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141083866 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.141286516 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.141456704 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.13842646 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.139270757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.138366012 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.138568834 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.138992521 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.141664851 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.142353566 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13885412 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.141517277 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.139068421 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.141148025 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.14143395 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.138813907 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.138846645 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.14106336 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.139108952 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.138493122 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.140893266 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.139173262 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.140394892 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.141515873 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.139941248 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.139588825 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.141365823 seconds)
  done (took 9.569139859 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141092315 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.142974548 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1431097 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143009748 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14271291 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.143289607 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.141641802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.143236263 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.142784658 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143397065 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142841102 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.142192877 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.142418641 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.142231066 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.142840136 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.142511779 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.143370793 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.143204587 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.143343558 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142642134 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.142425196 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.142572705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.143343754 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.142825086 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142810363 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.14323377 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.142139362 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142820751 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142216353 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.143348921 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142798944 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.142315001 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142323364 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145001959 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.143145239 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.143022943 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.14330136 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142686738 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.142907527 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.142308735 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.14325256 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142790974 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.143403578 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.143439137 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14314415 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.143498584 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.143370126 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.143691413 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.14210491 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.141315339 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.143027344 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.142220096 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143005396 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.143340808 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.143066834 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141683126 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141807081 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.143479732 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142945281 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.142598763 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.144460762 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141998992 seconds)
  done (took 8.916274208 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140868207 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.141862913 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.139096362 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.138062731 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.142068706 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.139150186 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.140940248 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.141832342 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.141093691 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.14083317 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140203528 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.138988617 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139855688 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141824735 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1381057 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.13957074 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.140421148 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.139532194 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142738789 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.139381693 seconds)
  done (took 2.864861986 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.137704686 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.141892107 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.13924012 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.138506607 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.141917984 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.139240958 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.141223815 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141598089 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138847584 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140485464 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.142439037 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1424118 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.139431323 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.13988982 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.141665383 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.139651627 seconds)
  done (took 2.304292012 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.138566314 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.142350893 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.143460205 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.143011096 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.139879378 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.139510232 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.141043665 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.139989172 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.139709984 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.143475336 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.141636112 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.142139187 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.141512341 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.143157703 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.139888925 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.142644994 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.139427271 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.138340875 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.142416623 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.142370983 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.140465437 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.138352886 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.141808969 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.142544806 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.14026084 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.139741691 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.138894165 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.139454805 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.138872725 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.141795384 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.140131574 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.140139876 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.139173118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.139173284 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.142687189 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.140045775 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.14045119 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.142355145 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.14223825 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.142737321 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.142073337 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.138575342 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.141840861 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.142770307 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.139279897 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.141676444 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.139725638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.140087823 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.138891387 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.138607585 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.143010659 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.143692095 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.143065726 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.143701117 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.141904775 seconds)
  done (took 7.814572398 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.141840067 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.142050886 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140307974 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.141319871 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.142377373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.140206409 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142800667 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.140215668 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140449689 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.142386798 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.141132562 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.142128954 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.140148195 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.14218508 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.141143797 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142869819 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.139640193 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.140198177 seconds)
  done (took 2.601780876 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.139203478 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.140819889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.143175496 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.13939595 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.139809917 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142602632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140527236 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.142184362 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142047135 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.140617928 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139518357 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.142569941 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141913706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.14220154 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139258719 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.13893851 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.141869143 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142509586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.140145162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.139470641 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142305085 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142119779 seconds)
  done (took 3.162056625 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.141130285 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.140237832 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.156631901 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.161351759 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.162651936 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.173199756 seconds)
  done (took 0.993475805 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139357128 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142325734 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138564915 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142663069 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142103202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139376708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140259667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139736951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142493629 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140292125 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138868251 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142440232 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142804989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139874667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143260963 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143155175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140123929 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140121384 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140067721 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142890781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140859165 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142503071 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139660979 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140101448 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140510278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140470203 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142065174 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140561093 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139674707 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142397845 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143322465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139919493 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142995056 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139720316 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142715348 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14308695 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140105179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142588058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143439733 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140260484 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.143062225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143323792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142882484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140916869 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143720158 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139718702 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141085234 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139095775 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140778592 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14423304 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142298683 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140953072 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14379153 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143035397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143763307 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143478783 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139981303 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141269085 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143533341 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140811592 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141399405 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142468399 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140850805 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140726042 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143066066 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140330675 seconds)
  done (took 9.397609462 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14029586 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140017433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140188918 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141509459 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139784951 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140677831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141183316 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141832251 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139916052 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139351215 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142082189 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140910052 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140255249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139910838 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140174687 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139963534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139998178 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141788167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1401428 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142543584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139185967 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14045146 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140751211 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140915495 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14086617 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142731151 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139916792 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139858917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139655991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13894606 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139694509 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14095602 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140874917 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.139549374 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140315701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139926471 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140489522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14029736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139808261 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143412963 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139654919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142955065 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140201316 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140163914 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140475241 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139331971 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140536026 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139460847 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14024675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139369383 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140068891 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140494871 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140520021 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140106713 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14092068 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139468614 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139938127 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140521547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13975305 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142247871 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140477895 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140453044 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143589884 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139879352 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140639524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140535905 seconds)
  done (took 9.334152008 seconds)
done (took 191.989076585 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.164322818 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 5.198618395 seconds)
  done (took 10.416086026 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.301666518 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.257127863 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.141450112 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.180576833 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.135450378 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.156581421 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.156377668 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.134609648 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.139761801 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.14010352 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.14039383 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.326104379 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.15075619 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.134970059 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.140734952 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.233672223 seconds)
  done (took 22.93476009 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.142658391 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.145296408 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.153930235 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.145552489 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.142082362 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.155153366 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.179032118 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.14680813 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.177230877 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.151993672 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.210002102 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.149171101 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.140947324 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.19100419 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.1511209 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.158010037 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.238346739 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.214840142 seconds)
  done (took 3.050738448 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.218894969 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.139752519 seconds)
  done (took 5.424841343 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.142626157 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.19353787 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.191421509 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 5.132990082 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 5.153286409 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.169467931 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 5.165689263 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 5.180264357 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 5.150168174 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 5.175128755 seconds)
  done (took 51.722635119 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.147261979 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.141576673 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.140777932 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.14088332 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.132759942 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.131358869 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140630742 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.134603402 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.792240136 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.170491963 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.147321485 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.147214567 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142907632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.142831265 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.14059787 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.167874113 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.276752298 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.141666561 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.140486064 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.148130431 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14448171 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.194165952 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.152923389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.142923154 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.172830018 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.79931835 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.143632887 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.14836764 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.269648517 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.140229922 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.141876593 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.142263422 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.145160605 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.527245456 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.425017006 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.140386134 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.150511249 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.151876957 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.142070702 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.281590233 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.143826501 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.150358424 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.008268619 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.405801604 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.261465618 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.186704246 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.51659586 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.151933093 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.143740669 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.172647535 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.142977887 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.144137477 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157130282 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.648904176 seconds)
  done (took 37.523253519 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.135404572 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.397064872 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.293213041 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.1371539 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.421781368 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.337836142 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.133200437 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.186009914 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.134891747 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.365482464 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.293997849 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.247297326 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.132262678 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.134230716 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.130886031 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.127559974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.295717516 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.207100769 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.131586758 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.130585531 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165661862 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.379510346 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.259469029 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 5.134005728 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.156495918 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.346217497 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.255942229 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.238954309 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.42481175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.132414892 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.19773054 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.131100899 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.130404733 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.128828506 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.289371913 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.227271829 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.218457404 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.130789598 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.130398624 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.131104717 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.807102695 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.334728323 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.228576615 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.273693726 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.378049712 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.335581733 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.919618831 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.131616646 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.869716131 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.295678568 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.364423654 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.368466368 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.253676524 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.131684409 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 4.637781613 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.12961622 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.131988733 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.365817989 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.35838403 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.232241677 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.130677404 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.130443292 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.126374111 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.379655806 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.130361673 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.224823864 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.131294246 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.126935833 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.22752339 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.233501721 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.36028076 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.343962697 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161904677 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.42999255 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.610500471 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.381648134 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.198106942 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.36295246 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.129615442 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.127895964 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.218699173 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.978831231 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.291111342 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.382062273 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.383990072 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166274152 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.852095768 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 5.12851779 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.361092789 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.353476504 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.438480751 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.37310622 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.281351548 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 3.257887375 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.130978416 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.129854999 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.395850215 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.266825238 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.130194103 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.494936728 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.365373897 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.700199068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162814687 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.479489884 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.261919374 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.130605623 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.773453696 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.132141462 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.358793103 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.172859272 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.130596519 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.130429907 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.347416364 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.204054564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.130886432 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 3.764743651 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.193633809 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.128271001 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.364723018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.129501211 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.396304685 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.129831053 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.371637597 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.472734897 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163732538 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.353247171 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.371226847 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.130563605 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.393495451 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.374216536 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.245810218 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.350337858 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 4.752165294 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.128729013 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.440780761 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.128912433 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.131027706 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.306855534 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.130433289 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.307461199 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.130379617 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.469183896 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152397162 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.286897595 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.130940008 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.385778864 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163783971 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.183683614 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.128376189 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.261971223 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.130444608 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.065753654 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.289117772 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.133129202 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.131804899 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 3.796982624 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.131443273 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.287988229 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.364291734 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151594504 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.205164739 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.800162359 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.130804172 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.22173571 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.153408106 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.474949534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.132407045 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.288380495 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.130010914 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 4.661236424 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.131790426 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.376178336 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.310148074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.133926257 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.131498126 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.039828018 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.131283231 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.131402299 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.294167698 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.070960481 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.130299264 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.336794522 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.130896265 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.259335068 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.131918415 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.213069279 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.489541563 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.127545561 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.131752379 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 5.132682439 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.13022269 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.131563377 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.391302666 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.157601107 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.654217059 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.272454981 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.40330409 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.456620316 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.384711042 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.173744765 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.13369273 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.373973608 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 5.128369377 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.193713315 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.129398617 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.155211702 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.370180744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.131049335 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.343436272 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.409307175 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.070761703 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181855891 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.130513529 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.130348855 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.00628193 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.284627276 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.219702693 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.128226716 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.131456647 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.250066983 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.254996215 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.34163215 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.133724985 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.362442522 seconds)
  done (took 512.267673417 seconds)
done (took 643.398310583 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.131788388 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.12772868 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.116708586 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.132282543 seconds)
  done (took 20.558452614 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.140534873 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.136855566 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139342679 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.139074522 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.140364842 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.136820408 seconds)
  done (took 0.887576949 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 4.164606027 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.12597833 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.131420991 seconds)
  done (took 14.47625694 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206289975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.513929478 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.246036484 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.550806507 seconds)
  done (took 1.572114673 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140013439 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140643818 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.138963266 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.14141792 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141473897 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.144820235 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141233603 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1417917 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141722897 seconds)
  done (took 1.326229024 seconds)
  (6/6) benchmarking "26942"...
  done (took 2.542713046 seconds)
done (took 41.418725767 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.136521859 seconds)
    (2/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.510248461 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.11662862 seconds)
    (4/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.312210178 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.263550013 seconds)
    (6/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.585820614 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.618148994 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.431229953 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.220484709 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.3038972 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.130177821 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.198753138 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.290476827 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.26614428 seconds)
    (15/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.224340483 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.43193148 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.175457649 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.157722199 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.473175155 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.155403116 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.744637694 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.084484795 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.4669026 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.432367861 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.34805043 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.512528724 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.766848219 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.264120314 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.131386561 seconds)
    (30/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.300898069 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.218382521 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.349047157 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.562794559 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.600506951 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.136616436 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.952967 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.240801159 seconds)
    (38/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.127618535 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.232465578 seconds)
    (40/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.040454477 seconds)
    (41/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.114471869 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.621309185 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.113142089 seconds)
    (44/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.336456512 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.420597185 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.223951204 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.152514686 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.149610953 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.322374034 seconds)
    (50/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.24927566 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.18204723 seconds)
    (52/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.285812479 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.473990246 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.116602563 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.322190293 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.514452446 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.411672986 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.716704207 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.395934638 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.13240185 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.267899499 seconds)
    (62/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.268921861 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.146745557 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.120329239 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.191890444 seconds)
    (66/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.328533364 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.191681072 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.698554982 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.424217858 seconds)
    (70/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.21346421 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.26380827 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.242563006 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.214624062 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.114712618 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.438699407 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.114664011 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.273865928 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.226343197 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.659520895 seconds)
    (80/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.312066151 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.611124643 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.131780353 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 5.849162139 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.790943497 seconds)
    (85/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.145900058 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.117241729 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.46809363 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.256393876 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.512499936 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.156010611 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.240274556 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.663364138 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.456288302 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.945069583 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.178035669 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.208866108 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.585130377 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.11535892 seconds)
    (99/309) benchmarking ("sort", Int64, false)...
    done (took 4.665092588 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.214136854 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.512566858 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.115688986 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.739279688 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.471646539 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.10716403 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.229931842 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.152372166 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.41206383 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.399819036 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.32184717 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.412594211 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.131542702 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.406970088 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.352601627 seconds)
    (115/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.662215312 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.456781409 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.936459242 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.131308614 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.228124372 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.133096546 seconds)
    (121/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.227057348 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.488756279 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.194229723 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.576043265 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.15209483 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.805544804 seconds)
    (127/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.461730397 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.133281125 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.422906464 seconds)
    (130/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.301976345 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.420408308 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.11893252 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.412594121 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.382710156 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.159052201 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.486738434 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.179250532 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.827395076 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.531053974 seconds)
    (140/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140315167 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.580838122 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.263198719 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.502357903 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.242221966 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.234408586 seconds)
    (146/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.27010301 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.291135067 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.35863357 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.156004391 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.693719211 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.334939091 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.785330558 seconds)
    (153/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.145884137 seconds)
    (154/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.671503902 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.471115867 seconds)
    (156/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.644000145 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.954547675 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.236745411 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.666560984 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.152374887 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.612007989 seconds)
    (162/309) benchmarking ("sort", Float32, false)...
    done (took 3.868403331 seconds)
    (163/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.391248016 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.136172517 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.166220483 seconds)
    (166/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.301034859 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.303219143 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.422077467 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.23755585 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.64061655 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.135642118 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.35341242 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.372887388 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.779896065 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.222875061 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.230813078 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.13058943 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 1.850006072 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.807501919 seconds)
    (180/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.253667236 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.156241632 seconds)
    (182/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.43131126 seconds)
    (183/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.369033808 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.152675291 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.815519063 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.159968685 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.03374943 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.154769341 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.162807634 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.129672595 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.14124687 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.130721234 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.376169601 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.207866087 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.383587285 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.264397872 seconds)
    (197/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.263912335 seconds)
    (198/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.409691166 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.286037913 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.297110197 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.310255151 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.134230577 seconds)
    (203/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.073787081 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.129989702 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.199250647 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.460313889 seconds)
    (207/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.242240562 seconds)
    (208/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.60518657 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.117166111 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.234856754 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.3683484 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.361578436 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.984203022 seconds)
    (214/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.271174599 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.149083482 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.401468207 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.459737304 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.508258746 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.152462422 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.373335309 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.273556057 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 1.211180573 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.116168509 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.171800741 seconds)
    (225/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.213272892 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.563228633 seconds)
    (227/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.158904489 seconds)
    (228/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.217215701 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.132615214 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.658597648 seconds)
    (231/309) benchmarking ("sort", Int8, false)...
    done (took 3.120213328 seconds)
    (232/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.344605777 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.301339519 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.091260808 seconds)
    (235/309) benchmarking ("sort", Float64, false)...
    done (took 3.876217412 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.134219394 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.166947541 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.377134088 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.25893079 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.393365693 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.206637277 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.115233949 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.153015169 seconds)
    (244/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.299900826 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.827123357 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.21836359 seconds)
    (247/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.131943688 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.129806044 seconds)
    (249/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.234324172 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.116688427 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 1.377420935 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.291867362 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 1.108495929 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.562020893 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.196262699 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.468293812 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.219303902 seconds)
    (258/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.299219699 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.457533964 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.131355909 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.158589493 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.593555479 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.160276737 seconds)
    (264/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.220234064 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.501559124 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.729789731 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.39529439 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.754795878 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.063420468 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.618519089 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 1.052512241 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.149076327 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.204124942 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 1.129179209 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.928226091 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.278531451 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.118147056 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.966778135 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.742670563 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.516206881 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.204096797 seconds)
    (282/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.597492494 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.217292949 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.15642023 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.213411358 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.271528533 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.745518434 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.583558791 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.160203331 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.234565835 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.15671592 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 1.087701532 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.870339544 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.504390025 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150270573 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.321261797 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.483789376 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.167714416 seconds)
    (299/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.514959311 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.467107894 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.231381253 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.806480739 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 1.040201763 seconds)
    (304/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.133201749 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.508395841 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.151355846 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.362605694 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 1.059116725 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.559338997 seconds)
  done (took 465.91434421 seconds)
done (took 466.001447009 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.192493744 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.158025236 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.140128515 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.164710116 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.252155576 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.169318148 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.15182663 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.143151677 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.188742374 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.190132999 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.13981243 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.168246613 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.143092659 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.141017395 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.140861818 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.154985463 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.449780167 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.166198697 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.156975949 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150064637 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.157956906 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.139046278 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.190687337 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.166893411 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.144259107 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.142712295 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.144158327 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.159643013 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.25247056 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.144717855 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.144320311 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.152221069 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.449750854 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.162710444 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.135754723 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.161783576 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.150843564 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.150830766 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.144791249 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.173474975 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.538292659 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.173750062 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.14153634 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.14223343 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.142015428 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146289134 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.142604206 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.14758653 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.155839755 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.155706871 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.536835257 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.188077309 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.143754833 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.142748157 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.152131427 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.142816355 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.145208118 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159509833 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.16259491 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.155811926 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.440067922 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.169912391 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.142923256 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.158598594 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.147828499 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.573254421 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.169690417 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.144941389 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.53981401 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.176976607 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.572484399 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.181538703 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.141395663 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.156002823 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.172626156 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.450487302 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.160044572 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.139969092 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.14908337 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.139675294 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151617363 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154358762 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.14677368 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.143127443 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.15600778 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.169346086 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.151943388 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.143080882 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.151012341 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.162229097 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.148850102 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.152663018 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.146186076 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.138018312 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.151367631 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.145673627 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.144867317 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.145029101 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.146419958 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.152848098 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.537065197 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189782993 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.137352476 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.139150451 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.140990132 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.155833209 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.538263214 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.174747264 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.162523233 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.189832672 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.143279614 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.438383897 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.168813389 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156876706 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.151099174 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.145511544 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.13679094 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.439130941 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.559998175 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.187847706 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.142948347 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.141159766 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.157887799 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.144267096 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.139192006 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.451654407 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.166388892 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.157594947 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.263425437 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.152444427 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.174461846 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.140846455 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.145613655 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.171721657 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.15864737 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.174139035 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.145630851 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.158032693 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.1583879 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.138798765 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.154323747 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.153008995 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.143447957 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.14789865 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.136932022 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.171163976 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.155264023 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.155519828 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.163473612 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.263018199 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.140132721 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.44036822 seconds)
done (took 29.777100896 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.207023127 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.135098302 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.238548598 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.138936621 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.221378313 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.224339099 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.135987583 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.136602221 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.136710508 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.576931199 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136386305 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.137729347 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.132466068 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.136790641 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.221939713 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.13902739 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13644695 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.47331269 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.139985202 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.211778461 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.13594703 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.136623552 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.138993162 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.513356636 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.140314094 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.131916416 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.210615062 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.138693748 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.477441819 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.137460452 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.131962005 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.477611351 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.229812585 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.159239771 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149026918 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.146281422 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.220803951 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.142837715 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.220895009 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.219358396 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.241290429 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.180262002 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.140098479 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.139060227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.14144742 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.141399208 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136938522 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.167610536 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.13550161 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137501682 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.473554549 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.150142901 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.1463368 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.136927084 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.136466093 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.161128944 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.136906485 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.140331738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.230182148 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140312458 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.202244828 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.512344704 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.51148603 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139081807 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.132227306 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.136956958 seconds)
  done (took 68.377494056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.205802828 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.212255784 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.206046995 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.141468925 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.190127877 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.206520071 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.142991877 seconds)
  done (took 1.361071649 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.144138288 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140064551 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188857312 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189773768 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139804198 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.289896873 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138867685 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.151771898 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137173813 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.191572512 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140111283 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139999904 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.146292759 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.133206199 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187062022 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.150655857 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.255399098 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.14154694 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140960389 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.291411724 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135902272 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.146993251 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.210540944 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.151160799 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140553632 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.146064818 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.722280305 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140694994 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137669946 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.139528856 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137028417 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180805466 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140211914 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.141921207 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136626521 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.255537104 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13957449 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137752286 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.14151924 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.134450077 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.139119707 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139430828 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.140090072 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.137750162 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.139533625 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16246964 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.138821348 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.13923357 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139686747 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139838238 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.189471124 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.139995266 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136722414 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.137258159 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.194688938 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146715933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.141194777 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.138482086 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139919721 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.136525627 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.291238535 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188640856 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140326462 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187547399 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139625518 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140158628 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.140318415 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139951995 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.234726942 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.139498035 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188489013 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.137062255 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.297917347 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.163188077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14040388 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.142820132 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14293787 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140018922 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.143779723 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.14556147 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.136440651 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.140315105 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.145931469 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137454654 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.136925705 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.251830905 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.246782659 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137851139 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.15216896 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.147209096 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.136550607 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.192263832 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.139538637 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.136894686 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.193535977 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.255171893 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.214200551 seconds)
  done (took 36.317329068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.14379599 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.148249347 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.141394259 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.157395371 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.140350868 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.139897324 seconds)
  done (took 0.926478006 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140422163 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.140756144 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.139017471 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.139837618 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.140849803 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.141412986 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139911858 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141325514 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143058432 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.139845795 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140594748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.142265255 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141210703 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.141237873 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142016727 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.140403931 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.141614271 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137909954 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.139037532 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141113485 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.288955885 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.141055059 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141267555 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141377034 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.14471269 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.140159795 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148832555 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13978621 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.140246196 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.147102075 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.143796268 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141981739 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.14147481 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.144949328 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144066275 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.141253943 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142685867 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141178539 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138759915 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.140498418 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.141764245 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140945368 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.140738712 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.141451825 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142293574 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.143837617 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144453459 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.149190215 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.141911979 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.142638099 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141629619 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.140694748 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.141820742 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.142127446 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.141737767 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144437766 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.1445779 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.142274442 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.141372355 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.1417449 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.140541035 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.141487077 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142715003 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.144265775 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148553503 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.14206241 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.141635158 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144045056 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141869585 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.140970789 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141814355 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.138603223 seconds)
  done (took 11.427803147 seconds)
done (took 118.483085683 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 5.357719014 seconds)
  done (took 5.409143097 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 5.333959553 seconds)
  done (took 5.433582201 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.437431794 seconds)
  done (took 6.49481068 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.141666857 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.14131622 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.134700784 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.135682377 seconds)
  done (took 20.643253931 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.308399408 seconds)
  done (took 5.365299141 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.153365091 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.133757191 seconds)
  done (took 10.365799066 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.28087862 seconds)
  done (took 5.338565106 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.225615575 seconds)
  done (took 5.300595479 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.144450055 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.164048013 seconds)
  done (took 10.420445022 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.119043587 seconds)
  done (took 5.175720569 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.782954032 seconds)
  done (took 7.997865256 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.145134694 seconds)
  done (took 5.31929446 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.141551673 seconds)
  done (took 5.199235638 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.305852084 seconds)
  done (took 6.362295852 seconds)
done (took 104.882642473 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.137093341 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.131518372 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.131402038 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.130466672 seconds)
  done (took 20.582001138 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.173051338 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.174612356 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.174894695 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.185002923 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.177183091 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.173829846 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.166320285 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.166408577 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.185124647 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.177125155 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.175658016 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.176065141 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.173802337 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.166299699 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.176228209 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.175563342 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.185546328 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.175621573 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.166404458 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.180011092 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.141261818 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.184739617 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.176859153 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.140992734 seconds)
  done (took 4.206946049 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.339676034 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.212088737 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.293701978 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.192511214 seconds)
  done (took 1.094962389 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.190893469 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.194142031 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.205653933 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.244101997 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.267362001 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.203100748 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.168769608 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.162480683 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.148870032 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.193975749 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.26848096 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.188263389 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.279007751 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.140082965 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.323235684 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.140427682 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.140809063 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.19257237 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.244789305 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.258323475 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.140647643 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.192418656 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.196232112 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.190847057 seconds)
  done (took 4.93242074 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.139162608 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.146648388 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.146215149 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140084581 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139316708 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.140468388 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.145646844 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141957747 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.160506673 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.141442398 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.138521617 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.139548712 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.139223714 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.140018692 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.139325126 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.153513369 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.153809724 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.14091075 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143467316 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.146799427 seconds)
  done (took 2.934014729 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.134603283 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.987402285 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.486070115 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.390739711 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.133645936 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.132446141 seconds)
  done (took 19.321910101 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.150743487 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.144558067 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.139715744 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.194795867 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.272065773 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.145648863 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.14267943 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.149798544 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.184368964 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.199302763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.15611193 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.163866868 seconds)
  done (took 2.101467232 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.135265931 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.147074607 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.134711136 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.162656592 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.149463862 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.145635558 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147653957 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.134171012 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.151583311 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.156868974 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145008843 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.15322363 seconds)
  done (took 21.823785279 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223877938 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.02466367 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.21831662 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952752542 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630968572 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.34396382 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.66445401 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.493896225 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.155451443 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.410141705 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.224636136 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.352709712 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.387267345 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078746408 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.187600902 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.62670298 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.456827739 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.369999253 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180505129 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901359338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2478399 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.444583619 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996853825 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.260652812 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.344775145 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.266573915 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.395358537 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.091653629 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273969792 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173408155 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145047923 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.134601522 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.408420981 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.526570734 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263225753 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143798638 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829704548 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.883707338 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.120162688 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.064347464 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.139493908 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.244191988 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142174946 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134701551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069000333 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.435361865 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.53505144 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.157851882 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.846595328 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.135033169 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145606329 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223486445 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138070953 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.950310856 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086924887 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4418874 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.132383144 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141287086 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.702852861 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251924402 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.540161668 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.130759069 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.330688573 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907877124 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.598506147 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.295375043 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.138556524 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138959351 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070632509 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906544235 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24965562 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3137805 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.154005364 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783778577 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.45267668 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319805713 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191956762 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.426703588 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.742276552 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.131295149 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364182796 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.087309407 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069636068 seconds)
    (84/481) benchmarking "5d"...
    done (took 1.996894717 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070365501 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.411601618 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209482173 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.782194245 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225176414 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.47279807 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165221584 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150887424 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144408342 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.359206653 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.700741985 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136122972 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 3.0067562 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400143869 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154564693 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.473190513 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089782249 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136912076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390613337 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.348180563 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.162781865 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.684168033 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316796828 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154501363 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.188781084 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.844862689 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206524187 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.415380577 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206673125 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246570265 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258179224 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.093843358 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.443313095 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.199109562 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.27541396 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.272598231 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.373472208 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.466752776 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.468459497 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199148892 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144337414 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.135731754 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953816421 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.751728001 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.402884743 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13630742 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.419547503 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20613257 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.137108188 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069609768 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.736813457 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281448737 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 3.218221074 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.359445279 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.8795148 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.470171611 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069516272 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281753367 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.248604055 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.356436324 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.79340006 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.227439312 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.394001331 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.412925857 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.218874143 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207336904 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155454254 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226297823 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156892891 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 3.357291099 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.45060479 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141248232 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139794522 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920068775 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.205035848 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139577982 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.142141173 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935451851 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.449587449 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.174701084 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143732657 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.051567182 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.149377666 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203537172 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143210005 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146801424 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.659724891 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902317452 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.171671648 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.795586558 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379295379 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145629798 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.894846947 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.312954855 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.218139033 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.440442526 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205893916 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.070126919 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.848507821 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.828035472 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136544443 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072226635 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.137686544 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146719911 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14661379 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.517415448 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.420716012 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.190662469 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993243458 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.241633401 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146300267 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.143112057 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136369795 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.655791337 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258874328 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.551038884 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205718772 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272855444 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.14972249 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072113987 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139713342 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141300986 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.136490716 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.093221007 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19118597 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.944581743 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.583229318 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.41197979 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831526651 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178449531 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05363055 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.259542912 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.155946374 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010035487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984124573 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.196378198 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15083243 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149298458 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916079765 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894738003 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.698851879 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.461571549 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.46460543 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.599649555 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 3.441238125 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.463021788 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.478818736 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391224459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.665428832 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197469152 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.48453406 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100342183 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230304236 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.803363916 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.498686537 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148256245 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.365024434 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.538518236 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 3.094139649 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270977486 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.346648855 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170859055 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.84214432 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122115851 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 3.339154558 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279755955 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.060746515 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.326651715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.475030413 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034645551 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.218336797 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.135127203 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.874076264 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274947464 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.866357655 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498126092 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.453173087 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.286760116 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.607942585 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165687164 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583262753 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.498513084 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.25759594 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.283402045 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091326697 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146815694 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147596456 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136115083 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.110993184 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 1.068560685 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.422082948 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14723284 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371987926 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.194165601 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.465721471 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.054197753 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141352098 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137099737 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.444831214 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766381857 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328239574 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 3.390667111 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.669567675 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142383855 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072075236 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0714508 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.829220856 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.137966956 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.114155778 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.364779511 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.343978981 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088917251 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.462003763 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.405925067 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.391515402 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151162881 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.418566954 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.423108976 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872910177 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189269306 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.238591415 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011788184 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.233033759 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.403058604 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.372671307 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936306726 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.388565769 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.21997203 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.019828137 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.135760094 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.369722164 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.406078923 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.228453231 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.361799044 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.87101186 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.147975913 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.468645002 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205649601 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.276227194 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.280450432 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.329169306 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145767588 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220358137 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147019374 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146800302 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147537182 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185626044 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.29454126 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.250226968 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.15163746 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226275833 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256510967 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.712889886 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144460365 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.42259031 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.517260644 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.48184721 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208310097 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136371464 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141798951 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071984244 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270558333 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583224857 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.410089809 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267692195 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.433460027 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162836549 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013584807 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.292306153 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404497149 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.410381611 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.032239045 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070404907 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.203189816 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 3.403086363 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149547764 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.347625048 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.373483378 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.481189132 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6273555 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.17358134 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.532421325 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.427205789 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505675583 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.137232015 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730938003 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.139562713 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.857499612 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.232810788 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236692072 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.392271024 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145624542 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.524777323 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18838125 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 5.334677755 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.654218268 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020181227 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.489337295 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.132082061 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222590042 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.421495436 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.549875387 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.464705096 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206493151 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147482473 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.87158137 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277123398 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 1.099034752 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.450963914 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.138896443 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350811671 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.849370809 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149396794 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.424243351 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.456331841 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.133799409 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.111475828 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199635829 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147228459 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.360742065 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.413181833 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.426797484 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144666481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.140640684 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.954296176 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.423930929 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205770894 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07120475 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.138289072 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241416544 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.396236368 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157651103 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.82803923 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.850373548 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.443363252 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.075411011 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157228358 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.444569636 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.549722769 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.487575984 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.672167224 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.372762667 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.714640803 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.887236647 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.465818673 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141303594 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.447804399 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.469407372 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.140024044 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.553241521 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20408187 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.419349014 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.466472591 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.147420089 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906970038 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.170795284 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.359117962 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734965253 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104706849 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144968103 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.197867932 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156905548 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270180241 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146491307 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.143944284 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931819477 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.914410778 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631447608 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140902177 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.340756176 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.996904466 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.566483131 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19975236 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282998895 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16135431 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.848917392 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.429583368 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.394021371 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.562324708 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.167798293 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.141781434 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137461292 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067817363 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.334952026 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.51908592 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.444878445 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 3.412878753 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.20348136 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143338087 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.355715213 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351552959 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.284653959 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267587488 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.429670204 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204094962 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.907855459 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820413248 seconds)
  done (took 851.955187922 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.144617531 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.14397258 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.146800023 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.154348991 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.167937183 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.21119287 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.142678709 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.185949026 seconds)
  done (took 41.355719859 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.136968455 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.337213952 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.150979779 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.139407288 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.158095326 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.143198934 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339348548 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.154330293 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.18065426 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.14895298 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.14030606 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.135026116 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.465586491 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.16423489 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.1390554 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.194974933 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.167347306 seconds)
  done (took 43.363453554 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.140400099 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 5.304232154 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 5.175167763 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.172333075 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.102996006 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.147241682 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.056432316 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.151805719 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.14157606 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.346176815 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.474675943 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.167333607 seconds)
  done (took 67.440318721 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146686129 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145905375 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146243948 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.144150577 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.145924341 seconds)
  done (took 0.794588507 seconds)
done (took 1081.995298928 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.497076449 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.357207059 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.362278379 seconds)
  done (took 0.778222001 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.286478871 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.338134754 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.455509256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.462169267 seconds)
  done (took 1.627321041 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.43324953 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.531153611 seconds)
  done (took 1.023225498 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.502184192 seconds)
  (6/14) benchmarking "18129"...
  done (took 5.153859874 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.533043819 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.138348611 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.137515415 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.138369476 seconds)
  done (took 15.478431357 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.142865386 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.146860905 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.144255659 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.146895061 seconds)
  done (took 0.639831924 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 5.122932897 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.881342501 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.1231374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.139207545 seconds)
  done (took 12.325352156 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.89088432 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.541985415 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.887116745 seconds)
  done (took 2.3799125 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.75988319 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.084530329 seconds)
  done (took 3.903340035 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.392536416 seconds)
  done (took 0.451412486 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.170934347 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.415086858 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.670780872 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.682885989 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.768263321 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.949033016 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.415057953 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.356406127 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.586105611 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.594860253 seconds)
  done (took 5.678157617 seconds)
done (took 51.029993986 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.489590819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.501286389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.340948508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.464973513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.358053008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.341970391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.345449045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.449136249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.961371004 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.95742416 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.503517333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.358186097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.290179824 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.506987609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.296538979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.378475346 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.357572968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.515415417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.159060883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.35865204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.349996026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.094061176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.346369722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.105290048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.356478497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.292058508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.686264638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.37500426 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.315247566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.694079972 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.289377838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.514236364 seconds)
  done (took 113.407794617 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.860654018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.136468407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.136120542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.135686656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 3.50904603 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.138124935 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.135247227 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.13647701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.108337096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.083045984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.136325702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 3.508852133 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.138239619 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.137515863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.137403907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.137482681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 3.293617592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.886465045 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.136171991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.138430826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.136773676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.360062396 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.136457628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.375622735 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 3.253118131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.137197214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.052243395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.137246932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.13554958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.06701953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.137874413 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.136694182 seconds)
  done (took 149.158684987 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.1102264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.136805536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.137758463 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.136334131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.137012037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.138276954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.139173909 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.136717821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.72504163 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.720657375 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.137973858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.136821438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.137085398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.137948281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.136669162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.135952917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.135702589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.132800726 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.136141529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.136818823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.138584312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.92222358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.137240008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.962093881 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.146971181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.154467842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.138007263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.159382951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.159590565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.159703318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.162269449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.137267877 seconds)
  done (took 163.323705834 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.343155688 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.148205372 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.146568953 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.087296186 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.149307409 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.147334677 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.086260487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.345282184 seconds)
  done (took 3.545254672 seconds)
done (took 429.497958156 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 1.594100335 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.449032264 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.329933182 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.169845149 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 1.401901677 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.207211961 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.166554536 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.226773622 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.893887079 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.239841142 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.841539972 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.181852022 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.937124074 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.184814726 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.29202187 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.218042168 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.706275181 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.795128021 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.342776789 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.222134973 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.350726207 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.121847916 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.236311419 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.925181498 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.96094208 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.165850781 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.331491365 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.716246114 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.172457645 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.328862184 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 1.892959474 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 1.55741078 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.17895503 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.159870274 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.2161134 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.196768634 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 1.507544588 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.177032496 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.28793265 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.929770715 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.220116893 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.78826678 seconds)
  done (took 28.880623578 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.135447665 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.134706152 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.134373038 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.135398076 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.139086736 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.135689176 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.134573428 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.134391222 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.136406911 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.134805505 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.134449618 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.135858072 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.134659282 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.136818964 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.134609093 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.136115606 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.135824544 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.138032846 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.13482083 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.134513284 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.135341701 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.135768127 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.149723067 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.135012442 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.136425015 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.13756637 seconds)
  done (took 3.620060708 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.147516388 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.29667012 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.399676632 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161863939 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148478275 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.151278764 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.166625928 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.150021203 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.150610863 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.151289124 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.240117136 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15131144 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.167431621 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.407375228 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.158164976 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.147173581 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.149000688 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147693282 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.304197634 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.161985918 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16648034 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.150653473 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.165525912 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.159626395 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.150335522 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.591548395 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15101398 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.614007143 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.153493722 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.237884174 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.189324706 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.1643828 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.568876066 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.41233707 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.195721952 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.152901079 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.146754009 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.242309097 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154629242 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147689879 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.167570975 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.151695821 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.40200106 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.636642688 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.158692188 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.147378564 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.62570011 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.248662377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.187634699 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156719856 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.406284721 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.161664188 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.148390874 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.147238737 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.184904894 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154849259 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146535861 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.471506424 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.155243849 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.164278003 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152299788 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.147517545 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.305448748 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.154356971 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.296680931 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.155144047 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.154515455 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147944124 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.40179418 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.159384981 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.646613514 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.157549374 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.148025567 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.238509255 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.300743336 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.649271803 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.158192995 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.310069255 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.581995844 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.170328676 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.152748283 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.604104049 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.172721551 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.152024743 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.150196081 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.148241052 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.147342101 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.191013522 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.162334286 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.564468991 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.648549575 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.484936787 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.168768899 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.161679258 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.148008313 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.470384269 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.151808009 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.147126059 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.394025982 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.651007229 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.15734517 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.155784467 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.631002447 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.158894506 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.165742459 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154608014 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.406829413 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.159273774 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.191386885 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.148536214 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.154296349 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.1503932 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.16514824 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.15357807 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.146996762 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.618446081 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.251595696 seconds)
  done (took 29.240343981 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.140507663 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.139887279 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.152140007 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.139099545 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.140700175 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145761642 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.14092437 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.140739402 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.145689552 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.13972677 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.140440198 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.139508646 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.142068888 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.147127344 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.264207718 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147875142 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 1.752991954 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.139999086 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.139663764 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.149112599 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 1.789250218 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.144205924 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.139811977 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.152267406 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.141505878 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.142140253 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.152423638 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.258146958 seconds)
  done (took 117.572986632 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.146018926 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.259337758 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.157986679 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.173497009 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151625956 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.144931142 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.169906213 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.156993033 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.150459076 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.145195654 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.145240667 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.204137762 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.154949599 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.242590374 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.174595287 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.172010422 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.243201765 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.152361348 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.145569294 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.146016472 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.173855982 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.138382568 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.203914534 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.265626811 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.157996524 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.258833509 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.144709619 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148357093 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.146266156 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.258078775 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.154890698 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.203777186 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.169973238 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.160927333 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.26068115 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.253123333 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.248301091 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.175112876 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.147677756 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.14426875 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.144584213 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.135281034 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.259707202 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.159165406 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148091707 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.248916486 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.159914455 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.147857968 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.155053453 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.145147932 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.158943018 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.161256439 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.205922507 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.269414871 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.173536292 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.171526286 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.169595854 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.433001055 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.164416381 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.243239988 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.13815859 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.259947538 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.162274701 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.133775426 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.147569023 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.151387481 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.173216367 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.173346907 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.244357256 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153412373 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.243239317 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.178889478 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.151533131 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.146123433 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.148463265 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.260528416 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.256142037 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.17913117 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.180353816 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.173100012 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.142437026 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.147085127 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.13612168 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.163635387 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.149892925 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.259834451 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.255685961 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153495647 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148211022 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.148650789 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.148159175 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.169860769 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.264592641 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.175448985 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.237096106 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.210479423 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.21199615 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15562913 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.158788388 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.147408443 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.206165954 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.156427306 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.156954934 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.483403247 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.222005556 seconds)
  done (took 19.636120794 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.599486087 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.230165062 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.20117387 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.471476284 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.563018306 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.991817284 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.195698417 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.192554953 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.214734544 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.374210983 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.263984801 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.213933018 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.17879931 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.164085675 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.191305908 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.21367957 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.200717319 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.51178188 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.310706149 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 1.30442795 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.198569483 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.476945858 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.515964897 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.61966603 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.228189223 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.533029738 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.878195778 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.360127247 seconds)
  done (took 11.465469858 seconds)
done (took 210.475904144 seconds)
SAVING RESULT...
DONE!
