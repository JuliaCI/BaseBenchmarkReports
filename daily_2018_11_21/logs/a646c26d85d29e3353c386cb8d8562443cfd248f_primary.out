cset: moving following pidspec: 32167
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.226665416 seconds)
loading group "string"... done (took 0.548264236 seconds)
loading group "linalg"... done (took 7.568618407 seconds)
loading group "parallel"... done (took 0.16774903 seconds)
loading group "find"... done (took 1.160539439 seconds)
loading group "tuple"... done (took 2.075683509 seconds)
loading group "dates"... done (took 1.311472095 seconds)
loading group "micro"... done (took 0.242303288 seconds)
loading group "io"... done (took 0.694432559 seconds)
loading group "scalar"... done (took 40.268239822 seconds)
loading group "sparse"... done (took 12.562857957 seconds)
loading group "broadcast"... done (took 1.121506348 seconds)
loading group "union"... done (took 13.335239662 seconds)
loading group "simd"... done (took 4.738691883 seconds)
loading group "random"... done (took 9.615287267 seconds)
loading group "problem"... done (took 2.125646428 seconds)
loading group "array"... done (took 22.423298081 seconds)
loading group "misc"... done (took 2.079931416 seconds)
loading group "sort"... done (took 3.431567851 seconds)
loading group "collection"... done (took 19.354635094 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575362028 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141803608 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148951732 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145972479 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187926474 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156152976 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156262436 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097100537 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.949097148 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173238985 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151403367 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518739791 seconds)
done (took 5.135392321 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.214145131 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093670311 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103097025 seconds)
  done (took 0.868614846 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07647 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143671549 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09390018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077416186 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094119982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07756132 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093641237 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079035756 seconds)
  done (took 1.336469422 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086522069 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096336732 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080508281 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095742644 seconds)
  done (took 1.036483222 seconds)
done (took 4.216057657 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734271029 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270000767 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203882202 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463202202 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194744266 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215179907 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680050601 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344361972 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250389687 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099712614 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142051943 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38158369 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137462694 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681306228 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.087983319 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122495783 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179887055 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447507584 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080949264 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109440211 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115146991 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1410147 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127950981 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091813881 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184933304 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080443787 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190826063 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107381311 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07965861 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286394128 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199510184 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687234061 seconds)
  done (took 10.833777995 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109109396 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131242658 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096537542 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136264313 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132810856 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098264968 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083268754 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095909846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120462414 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.172825227 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112357267 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135211929 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093633635 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082097736 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113851052 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243315948 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11969426 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102446456 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100041123 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102325066 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119812807 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111292971 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106697134 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091260202 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165480845 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220355207 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111596482 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124140126 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095459123 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.109683741 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142535313 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141815479 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094285291 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079161528 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169634263 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122890247 seconds)
  done (took 5.082051732 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.074129462 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187703142 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119682795 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167679746 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080087414 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141083041 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09410603 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11212144 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254119127 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186063773 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.173014754 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141566568 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098581057 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09619149 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080517269 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095715828 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.61889246 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162850315 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133509494 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096399581 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10374354 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09880975 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362288849 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086069404 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095248341 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079995204 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081500394 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163796218 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081132023 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.159005693 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101177211 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100329235 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131092004 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.189725845 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.154454521 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076368706 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126924864 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134835114 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094935054 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081632515 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174142404 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102915387 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079199172 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119243609 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132086206 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116908771 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098603531 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095164047 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203414689 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094548545 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09712745 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.925569858 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179385019 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.100769393 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094450454 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321019316 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098239016 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100402839 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076663634 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268952419 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.179616867 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097152927 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078775616 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095393998 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079856584 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396131723 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079501719 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.710201257 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082798416 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.1057705 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081193661 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095128459 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102528105 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086610846 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114431738 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078490744 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098037608 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078129875 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095832547 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080786101 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107724761 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100209981 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081077319 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163117027 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079755777 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114012697 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125459342 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08233622 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094832723 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128930259 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082144448 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096930062 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131709206 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08013913 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094059599 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107436274 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077360486 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097837438 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141915737 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081248881 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.146869762 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079397775 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123138546 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09804496 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112847057 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110736747 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097641162 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082696691 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094701698 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075684758 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163908188 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078628472 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096302852 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080093342 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108906288 seconds)
  done (took 22.286128714 seconds)
done (took 39.951666882 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315217788 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101157439 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102220671 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101129077 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099178591 seconds)
  done (took 1.468898746 seconds)
done (took 2.194652739 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284995775 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171218607 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094086774 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164893939 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093234253 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170695175 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158368022 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110558271 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199004457 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093040243 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16161782 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093342844 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076169313 seconds)
  done (took 2.62070099 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094696284 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114141098 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08178575 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110198727 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07519558 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110571928 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09248396 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116232057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10909463 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085990927 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093308913 seconds)
  done (took 1.805111604 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093760901 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113180246 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082212121 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110079021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076551947 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109984977 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092112888 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115223892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109393556 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085041083 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092896929 seconds)
  done (took 1.803192267 seconds)
done (took 6.943089322 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089737572 seconds)
  done (took 0.808490672 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.913075495 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.811682315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111332164 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148558375 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297223618 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189577525 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467458039 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123412509 seconds)
  done (took 10.987268154 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.143498145 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.080833962 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101079361 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084210566 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103743971 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083946989 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100007327 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100955112 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082123895 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100266416 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081340964 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097490882 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10051045 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082006148 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102222001 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08138856 seconds)
  done (took 2.309790044 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118958495 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116569886 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104038127 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106901084 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085579989 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104300864 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104533223 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087640493 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100695582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102180724 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0889113 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104165874 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102404861 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078153155 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104890662 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106776506 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084243815 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103980091 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104749234 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087767412 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106162798 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094327465 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085881586 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104574377 seconds)
  done (took 3.219878741 seconds)
done (took 18.050256812 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156798293 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107810993 seconds)
  done (took 0.992168328 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093236891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11175948 seconds)
  done (took 0.9340677 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095508649 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094666695 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120693913 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107731178 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078999528 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095782956 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117418125 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078944768 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095366384 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078630417 seconds)
  done (took 1.695795952 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081310865 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108128287 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100657697 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094025878 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103128679 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093747895 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086662194 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09786146 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107895941 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075361002 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101808115 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112220771 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083757656 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114273316 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103558598 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081282004 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101125956 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097881722 seconds)
  done (took 2.478848903 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077728264 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095950294 seconds)
  done (took 0.90748967 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080211224 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09300885 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079620425 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095918936 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092528621 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075749343 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093038557 seconds)
  done (took 1.343123111 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488011049 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135457193 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260045729 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100483652 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.11812729 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298945047 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097533176 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083647199 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101800528 seconds)
  done (took 2.456295244 seconds)
done (took 11.54083365 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092164783 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116315673 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110457951 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.45777799 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105803621 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09679936 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147091127 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.243683947 seconds)
done (took 2.110866292 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.141438143 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324048748 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112855931 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066386235 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094860862 seconds)
  done (took 1.341468015 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078678618 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099442825 seconds)
  done (took 0.920152644 seconds)
done (took 3.148442751 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079308226 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.127830545 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078742893 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095297764 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078594524 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094685136 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076588725 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09701742 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078950826 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095717515 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096031689 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077203192 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.095940904 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.078530755 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095235829 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077385211 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094138864 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079542918 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093453378 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076705727 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093500707 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078701825 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093315977 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077327721 seconds)
  done (took 2.885786762 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098081981 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096397725 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101613966 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08424902 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100230402 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08601809 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100959646 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097654372 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085127631 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099211754 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098926541 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082309887 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099095601 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082925785 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098416408 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100250531 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085015927 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097167735 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082061413 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100873915 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101042099 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079124167 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099750736 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101890307 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082754083 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099805659 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081534623 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097123893 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101326508 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08285461 seconds)
  done (took 3.550428652 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083418443 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093470553 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07728791 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101843991 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076651048 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096777624 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076911215 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095535305 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077733672 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094643588 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078309118 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093624267 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077369655 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09499385 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077954377 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097986999 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106450423 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077351197 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094784465 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077529279 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096581259 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076526761 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094208338 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07643641 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093932022 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077211922 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094097353 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077112342 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094872892 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076519136 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097700816 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080844962 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094687381 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083144463 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097773286 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076261286 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098276452 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077467771 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094918293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093214215 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076704983 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093888971 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076563004 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100200275 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076418515 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095711054 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077094527 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095682514 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078505849 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097269003 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076607064 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093889679 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079887073 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095070196 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080701613 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093524103 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09485305 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076472627 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095392062 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0767499 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094275025 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076818649 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097430293 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078318686 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109653565 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083598434 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094142456 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078679726 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.0953037 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079502333 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096354086 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108059715 seconds)
  done (took 7.0761826 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081678672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105238815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078705438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097115841 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075175958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094990716 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097745947 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077727627 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095906328 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083351752 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095337637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079111812 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095734503 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106534658 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078216482 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096535198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083501996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093076495 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077962786 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098163298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077754158 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098247213 seconds)
  done (took 2.723924928 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207020672 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104229615 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140051113 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105647588 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081772185 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105183685 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100961123 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085129683 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101434409 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082306221 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09854149 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101681366 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081868559 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099575253 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099343251 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083019274 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10157603 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083778259 seconds)
  done (took 2.621501349 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09235273 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097446018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102228143 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098395396 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098118402 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082317573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102693806 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106494163 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081656221 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097919525 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088529544 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099816221 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099588406 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080755542 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101029942 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081035851 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09965444 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080430378 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106375901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103290239 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102242548 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089414604 seconds)
  done (took 2.850849293 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095491188 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099902069 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117179156 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082769858 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093666336 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077883896 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104458493 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080336795 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105835522 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098829979 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079801708 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095711834 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085567469 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096339608 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102387545 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080440077 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100386321 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07994811 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099120556 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075596688 seconds)
  done (took 2.615271653 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101648184 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.208992581 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098289465 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089803867 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099567755 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081027517 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107549817 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098921626 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081225049 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123752546 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099019069 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081829856 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107941176 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105079943 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099228676 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090069176 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108315677 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10848053 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082567366 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099019249 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123835479 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082507808 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10726972 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099036999 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082422661 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099212414 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099479957 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088160395 seconds)
  done (took 3.613570907 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080454133 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098790392 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07765941 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095861131 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077277856 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096264584 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076824104 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094871495 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080345311 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094977621 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079993252 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097900934 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082953216 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098067929 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079889937 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097279648 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080634738 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095616627 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077887111 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095591393 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080161666 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097813149 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080627281 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095953488 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077693672 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098093302 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07832984 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096058112 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079640075 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094888142 seconds)
  done (took 3.399987496 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089704647 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105219296 seconds)
  done (took 0.955127335 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07866434 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113811224 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077822722 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10171195 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085285872 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09838181 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10655513 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08547646 seconds)
  done (took 1.509283293 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094694456 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109795194 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081820245 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110760717 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109018344 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095846858 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167977022 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099193133 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086472863 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09661065 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11234236 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079985991 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104707214 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080702397 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103891057 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086559328 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096486874 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104666751 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083146813 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097030682 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081433635 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108158062 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082939293 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095041662 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100151489 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088876168 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111323407 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082655478 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102019728 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10629223 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086480266 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092905518 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080764449 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099714201 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078908321 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107600415 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114940859 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084021697 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10805364 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082290971 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110280751 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093626958 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085435019 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104697871 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109253918 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0811277 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099681775 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075984459 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09636878 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08264196 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094625783 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081202487 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093569228 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088751745 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102193961 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109949224 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079722822 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100014662 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083631476 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102012309 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087051161 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100455657 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101157243 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080206189 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105948739 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085331977 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108293408 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076955227 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092927324 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097427271 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093269278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122148513 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087260056 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099773031 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100538487 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079046301 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102024629 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082672348 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105243806 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104581462 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081217416 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106041006 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089158834 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098571219 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083825249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107028177 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097329907 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083811837 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096849864 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11574524 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079556011 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096717465 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078409011 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110338605 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084147245 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098362664 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07854745 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105787327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093333394 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081514377 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100972707 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081465955 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110203582 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104745731 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087463261 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107736322 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088094583 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099910651 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102610423 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077948283 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100184381 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083469213 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106368142 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075523958 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101733003 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081998735 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099793037 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107726252 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.07933375 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099318781 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088201008 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104644484 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07990618 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096088269 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102009408 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081398788 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102892019 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089258009 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098156476 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076197504 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094359785 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102394788 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080949795 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103363383 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08628422 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102839525 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075338167 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097410221 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103786697 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089961524 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09994207 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081572867 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105402543 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100621756 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081065895 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10576889 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083327787 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099141866 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087826669 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100149917 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077215031 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102966285 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102177779 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079893924 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.1031516 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085335077 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102150701 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082201907 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099317084 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104930469 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081827448 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098454678 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081193862 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098000205 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091721887 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101676672 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094901662 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078467313 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10659271 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079032289 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099635405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08008238 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101457755 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099789728 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080150513 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098130763 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083123445 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111639517 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104634743 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083226624 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105874056 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093060329 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100365461 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083222061 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099966903 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101043858 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082381844 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109598766 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086380437 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105616546 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101843138 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078494282 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104877409 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088943998 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098958527 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079848242 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099843961 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08469883 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106247771 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103125408 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.081660331 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097589539 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081641701 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103639649 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102605664 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080574821 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098931407 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085638932 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099457646 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088599728 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100874968 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111219642 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084578051 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095294477 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084927775 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098143682 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105675054 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076800617 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096949668 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080299076 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10146737 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08092582 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102539592 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076269738 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106909918 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089156221 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099654723 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099529369 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081351982 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108077004 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082523243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103702007 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084917919 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106063287 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111472512 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081453967 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103708753 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092811493 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100047771 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075962825 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105516914 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098075401 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080955047 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098999582 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079838561 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103886086 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109244267 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088771688 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09420553 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083813993 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099061905 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080185567 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096174722 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086215831 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103309971 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100692914 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088810663 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101874047 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08273881 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105992109 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08235224 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.1014933 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101856426 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085329847 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100792459 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084152446 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099621796 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085741926 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099416616 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082216091 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101621611 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100395516 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081877241 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105968872 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081913103 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100191857 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085293884 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101197878 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082527279 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100349228 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099772599 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085365658 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100438934 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081518028 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103311364 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076728119 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108457585 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081961733 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10800959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100097088 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079524841 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105647041 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084582094 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105895871 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10139414 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083078693 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101448039 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081611886 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102987402 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088792685 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098416339 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110735658 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089559102 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100987335 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085085405 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100811861 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083280293 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100645307 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083191721 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101607821 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100131141 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082066849 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105346263 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084979916 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100705189 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084140593 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10153129 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081432166 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101606914 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094392669 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080615877 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09991426 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08211638 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111212515 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08253988 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10437444 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09929788 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082911612 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099720598 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078644214 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108436286 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109348528 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083793658 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108096774 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081914543 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102344411 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111906605 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075993581 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098305603 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079769344 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098695736 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089483245 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102569307 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092842088 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100408836 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081570865 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098588231 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101681093 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080274608 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094925705 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079660598 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104826022 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084958426 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100347423 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082622977 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104506265 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102345947 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100191899 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09984935 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082947258 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102746754 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079963595 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099737353 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080528773 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103198419 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101794196 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080248658 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098258014 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0824411 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101167671 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082831499 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101069941 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084137421 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107756061 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100090141 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085282638 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104959385 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076821799 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10485479 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081585283 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101000998 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081467537 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105558441 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104128628 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083966465 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11114105 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082894863 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102127966 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101801142 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080453909 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101271692 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081976604 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102880333 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081379711 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102520417 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090686099 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099355603 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104533759 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082081095 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102811053 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090346108 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102920814 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085435655 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109348209 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104388788 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084669746 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109964794 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086322934 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104347398 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102489334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084537559 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107822673 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081801591 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108167361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082323474 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102635501 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083381673 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100052704 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100736235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082132057 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100453576 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088557678 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103131549 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081543908 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100796106 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080587623 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102652333 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106034782 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090920922 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103948994 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085642337 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097396052 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080184886 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102884644 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080606923 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103882761 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104300099 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089571485 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104073688 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083297578 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100533137 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092095482 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108364412 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105180427 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080444305 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10565368 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084407261 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104575547 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083657532 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101903921 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103387525 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086365922 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103843675 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082421779 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109070532 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086343321 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104260102 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102832741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083863114 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102359032 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078870788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102208753 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085617174 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108325923 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085178391 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102323994 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112270181 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083452544 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102414505 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08666301 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101291644 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087451326 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097256001 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103069111 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084864021 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103565801 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078606382 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101563204 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08127389 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103963152 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081800182 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097219803 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112596466 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091764422 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105436999 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082329606 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100954384 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07838832 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097141182 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081652428 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105157535 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103365145 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093263772 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101354258 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082787032 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098495354 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083474786 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106002615 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105226085 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080128749 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097865615 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08264914 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105130691 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.087958106 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101082141 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082575669 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105506192 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103999711 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081608624 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105289181 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080393508 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105605026 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097303979 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10340798 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102991796 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09044311 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110252882 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083926454 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097508514 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084728151 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105255885 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102464071 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084551368 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104036802 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099017997 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105616376 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101440248 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082609976 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104460892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08231945 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110611782 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083920343 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103394785 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106324097 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085275045 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112287038 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085670023 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110314439 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105303031 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087049082 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101654198 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083969598 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100411889 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081956062 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103838508 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083923437 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107692208 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109949441 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082413651 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113962238 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111640324 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088218196 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099438259 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082699005 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102052987 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079391009 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104169372 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081669474 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101304652 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080696704 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10308741 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102455771 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08989629 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103617179 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085212659 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102380838 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077907772 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107324461 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085484066 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103950448 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079860307 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104009463 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103232999 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08816369 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105962523 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083492022 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104632236 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084823138 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102965605 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078525646 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109618025 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10189192 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086104306 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101973184 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083649841 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104296572 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086661444 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108429425 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103619687 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085573987 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115704635 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085900728 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101104378 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080571798 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109419694 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099971674 seconds)
  done (took 57.283847456 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145322578 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080022541 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098642561 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078038389 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112376518 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098794385 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079578076 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098326085 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079558555 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101154302 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078579378 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098298856 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10872083 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122357115 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092862886 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102877001 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077931662 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099656203 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097616744 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079507279 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107979862 seconds)
  done (took 2.849489723 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104049758 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11656311 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114252192 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118157089 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089300031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114398249 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11344035 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114701527 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098129898 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110073247 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117892878 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115092049 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090773032 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110350649 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110103807 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092632227 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117822017 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109468798 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115179083 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094255298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112743726 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114825088 seconds)
  done (took 3.206070091 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083257744 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10215803 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084977033 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09732636 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082591085 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097568004 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087441018 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10052181 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086193931 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101662842 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081811632 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102754536 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103266439 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077835459 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102573628 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080945002 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150756427 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106561064 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083460999 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104951406 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077794245 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105319793 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097946234 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079273432 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10109684 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087686184 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103688063 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082012124 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.1025259 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08170725 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103229614 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081090862 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104909709 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103064909 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082485076 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101271641 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083230848 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102712527 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078738785 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10038874 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08362518 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098916322 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08359482 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104402697 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081318412 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10126536 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084316207 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10305474 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09799179 seconds)
  done (took 5.432652701 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103490767 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160713651 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084963101 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14283061 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.11983897 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112488532 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086548962 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141574872 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101962008 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082381891 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121123363 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119408188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102529285 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08932836 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110505749 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102901304 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084951048 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103080402 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107397587 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082605415 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108150235 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08947013 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118092137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116672209 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107614003 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082677898 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102596346 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107855401 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095979078 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107955767 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108241065 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089780741 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120071677 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108556877 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082904169 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105852508 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120882768 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103664668 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086889756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100892821 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085764852 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108707388 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109989688 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10068723 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103928501 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107863241 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084179529 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100698875 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116769558 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085806043 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112499587 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119211507 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107949571 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084471991 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108211744 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118720198 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08410674 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102543537 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08753123 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116626761 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100797318 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086917609 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117811964 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105980767 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111651822 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097646163 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108474673 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107506843 seconds)
  done (took 8.063376467 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092961762 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110381976 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119060126 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1197723 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090165724 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110875026 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110027126 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090935825 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110401575 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115826704 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110121027 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13300486 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08602189 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11481465 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110485208 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091540741 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110655478 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110419069 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090758046 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110106702 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109911121 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119359799 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089642334 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11961751 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141870258 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105658357 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08983227 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110409318 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119510803 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109640593 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122255751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09020694 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110988398 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119757201 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122911158 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089872873 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102615828 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110342394 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090442718 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110550469 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105416513 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099359622 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111653545 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105363088 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091077894 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11132543 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119948684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12386893 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114405755 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095697167 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11069932 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119643397 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109505108 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091047155 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11914595 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146773836 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120126609 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120226509 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110233505 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099851282 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119778081 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128378908 seconds)
  done (took 7.622906404 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106201187 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114373981 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117678325 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099505934 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082024697 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107744658 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081453808 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102208546 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113502566 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09382044 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116807438 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108186337 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091072384 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116101105 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107722179 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110588901 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087681121 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109018109 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113340916 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108216581 seconds)
  done (took 2.915633175 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092366539 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124164336 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084291694 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111820214 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107712719 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090975859 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106557371 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106910799 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084710627 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106812679 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094610062 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116057886 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104406933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089952225 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116083202 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110491853 seconds)
  done (took 2.476254545 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09455672 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116915933 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120402266 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08414237 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103316696 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080493454 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105491723 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100238279 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080398405 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119980291 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083909344 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110319995 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10435362 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083211205 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100476441 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086927208 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100409733 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081416805 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105107342 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119156628 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094651204 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103230729 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104750437 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086141536 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104599874 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089316335 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105019866 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102092165 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.081678915 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104742793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084274064 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113327095 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100987764 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083084461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101658574 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081794303 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104175533 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084207572 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107700434 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10512629 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08320948 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103842647 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083794949 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105860793 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081061692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10519962 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099902394 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090438836 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.1030701 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083658385 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10427205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085911054 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106453445 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114902292 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087643645 seconds)
  done (took 6.194957317 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098007892 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108110184 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079705313 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102483004 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087208682 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107629533 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107686608 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086959015 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106153279 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082376383 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106435001 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088938112 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107122867 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108716921 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085810415 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108865733 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07992723 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106452227 seconds)
  done (took 2.597167627 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089998853 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104421434 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092153456 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105577656 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08414045 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108147491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079731935 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103903643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10309233 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084019379 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105101444 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08712949 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103440789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087335086 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104937515 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083581418 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107743216 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102936672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08399401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100390108 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087255324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103767625 seconds)
  done (took 2.948738282 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117161187 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125247704 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092095346 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230647508 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103036185 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131611311 seconds)
  done (took 1.637238712 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108207551 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12079392 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105656535 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105827416 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113960565 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085342763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106851769 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106746058 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116843492 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100828584 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107340458 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116082753 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117739304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095826986 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114036826 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113619883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106586022 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087086257 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105218894 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127503457 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087233417 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117169531 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107661452 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086027854 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108119089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116749364 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116524827 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120154994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086529568 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116916452 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113974709 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086583848 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117078864 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121245694 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108682307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096543288 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108399107 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128051268 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113170307 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096081019 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108754459 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114362781 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09630475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112590178 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116736488 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107856156 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092360672 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10814052 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106798277 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134440263 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093602124 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116544905 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11446233 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116682855 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096921952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154612977 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100618304 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11586623 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1143118 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121384933 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117666999 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092812393 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116683183 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122715415 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11445145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117428137 seconds)
  done (took 8.083502843 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100741143 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125216441 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10726931 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122624234 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09607001 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106923451 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107292133 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087179438 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107786531 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106403751 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151646259 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086633964 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117899336 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11655167 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086525444 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1084571 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108139126 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117473889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086020917 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134279551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107567882 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116859343 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117125333 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095528041 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122827544 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116100254 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107034709 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086871136 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107955664 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107698006 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092494477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107695552 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117492823 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085507392 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116952352 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10782918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086877701 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113906224 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107439208 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113430744 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097626495 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128157444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10831333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108054518 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101579642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108558575 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106866293 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086098701 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10789729 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107006596 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101170518 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121755999 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121388115 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117598958 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107136642 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08694948 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108247911 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106975558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087174422 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116960213 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116781522 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086304974 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155178208 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087300627 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108303323 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117583171 seconds)
  done (took 7.969767962 seconds)
done (took 153.82494262 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.217870723 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.227252057 seconds)
  done (took 1.292942866 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096476503 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135724884 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094952873 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16769248 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105521121 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118153136 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136981679 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097286321 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106415331 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084912094 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106206173 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086234336 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170524436 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105212298 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084893283 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10719114 seconds)
  done (took 2.652593875 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198778097 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253432681 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101844717 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105849223 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088859293 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109723672 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104035357 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090214911 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109697504 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085064883 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108433033 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085370594 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105419414 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08549997 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109684634 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087596803 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105641475 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086855473 seconds)
  done (took 2.87084525 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11210022 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145936726 seconds)
  done (took 1.111324302 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118529734 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179771501 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314384791 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155006084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10508234 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126678206 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155278634 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129458488 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197314396 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122784076 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121545668 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095711864 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140134345 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114371311 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093479892 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.1182577 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140249312 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092391229 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115181335 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116059237 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116544027 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105673391 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115345054 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092566535 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180263765 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119696584 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084115528 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107513721 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115776286 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093304694 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112874727 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123964262 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096816931 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17738281 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101218966 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174307876 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096376514 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111437833 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114421158 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090458188 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118229532 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118018442 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104328597 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117646167 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084214202 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118476697 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105276133 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084492288 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113836358 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096882447 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114343298 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112600902 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154193207 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118660873 seconds)
  done (took 7.491125938 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792241468 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156887737 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090057449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88678046 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137544173 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103251302 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780565768 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134831311 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233293661 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762724461 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134558811 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122515567 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229730227 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237019783 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955989763 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312121488 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674674006 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101744089 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150885864 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152521011 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118204692 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137016673 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129495485 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426824272 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094653308 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11231276 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094766716 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121594111 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157787987 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125340529 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11439442 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17824262 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24801582 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205252267 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115844505 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089466289 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110709556 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170482824 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268062308 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214926834 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.1801776 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087857035 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111024997 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098840275 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132065873 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107950954 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163059847 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173562436 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192396998 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092007263 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120363849 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119328482 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098395243 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186305321 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098132871 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312802355 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309270253 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110663547 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098738401 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127451693 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262857653 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122285978 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222960825 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11736137 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212423952 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110676966 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783751769 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189677411 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089703263 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122360208 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119469771 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093937367 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120521914 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167654397 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392073797 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123941513 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093567531 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110561788 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204678561 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125536876 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110373996 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161947441 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094158997 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121132704 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124715157 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122483574 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170219131 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227728393 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123539972 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11955938 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09308264 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125119443 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115644942 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212171286 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220513838 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161693853 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206688578 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122739934 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163553713 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188033661 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09830432 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193158801 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097751665 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124930596 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122034875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215930341 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14397214 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100751534 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115070308 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117485122 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147161659 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105177523 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118596482 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168778036 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478482948 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167350335 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108079035 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105415856 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120227741 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159287116 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118099328 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256804065 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099838576 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190684442 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097262795 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109190873 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11999036 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164973567 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121820363 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099424869 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123173297 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118561377 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233770942 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216528048 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099235717 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244040173 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18371836 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117849236 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172425757 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120139909 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16745126 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118783359 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099108414 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11710938 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795547875 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122607429 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098542989 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116021314 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187095883 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088752165 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124422781 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123365363 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086001843 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783195748 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126949759 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120038958 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10194551 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118258374 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119060521 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096275335 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115124704 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162457331 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230688736 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120111687 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09723409 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125617546 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158853125 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117346815 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124687314 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124662112 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103469866 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121820227 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114721203 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102913169 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191582997 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163307002 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219478925 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.56707642 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113167639 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124068494 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226773742 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090222026 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288054618 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118872581 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204077784 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18770011 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098331147 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30821289 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186446409 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18768249 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105511527 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193788289 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086948922 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118689485 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164687257 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11157074 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095733476 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183762445 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103438289 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123755784 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956690244 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088327418 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246095675 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086678569 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191277013 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094477491 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121060069 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297129618 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089178538 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128954614 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164100865 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115231501 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123741438 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.720339895 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125033947 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120859459 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09587394 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222564153 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16340314 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119842263 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119028048 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119877855 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163604883 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207015983 seconds)
  done (took 43.928362649 seconds)
done (took 60.196800541 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275687529 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217334617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263531916 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169273738 seconds)
  done (took 1.878356931 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170405548 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148131644 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120495906 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107709623 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149998572 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083881865 seconds)
  done (took 1.660161408 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358467825 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273516408 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240101178 seconds)
  done (took 1.753755253 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.316433317 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.24719322 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474621433 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323719559 seconds)
  done (took 2.341812857 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208754993 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131690599 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110773935 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10321645 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196735538 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247901657 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140492612 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201732121 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098815474 seconds)
  done (took 2.368704611 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195296781 seconds)
done (took 11.080851744 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.124160315 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.245919619 seconds)
    (3/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.255035825 seconds)
    (4/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.232506022 seconds)
    (5/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233891267 seconds)
    (6/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.211865647 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094549068 seconds)
    (8/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119150719 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.147570258 seconds)
    (10/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.2565945 seconds)
    (11/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.106811536 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114442241 seconds)
    (13/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.218784893 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115181935 seconds)
    (15/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091815593 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.156749411 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120966311 seconds)
    (18/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101474168 seconds)
    (19/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.196062847 seconds)
    (20/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.155386369 seconds)
    (21/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092841201 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111174301 seconds)
    (23/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.180120906 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155612295 seconds)
    (25/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.226917533 seconds)
    (26/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.17073635 seconds)
    (27/286) benchmarking ("sort", Int8, true)...
    done (took 0.218873915 seconds)
    (28/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.099368758 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138501367 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17199818 seconds)
    (31/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093516005 seconds)
    (32/286) benchmarking ("sort", BigInt, true)...
    done (took 0.227987533 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.221050104 seconds)
    (34/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.214991544 seconds)
    (35/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142977568 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.135282437 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093406905 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183908058 seconds)
    (39/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094692094 seconds)
    (40/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107642709 seconds)
    (41/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117814688 seconds)
    (42/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.152306513 seconds)
    (43/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113078809 seconds)
    (44/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228225447 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.203717237 seconds)
    (46/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065931398 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.13702884 seconds)
    (48/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066393117 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.149494941 seconds)
    (50/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140156614 seconds)
    (51/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.258607952 seconds)
    (52/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165480159 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085271731 seconds)
    (54/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123364156 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093655113 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129073775 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09328022 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.114227748 seconds)
    (59/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115272331 seconds)
    (60/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099559458 seconds)
    (61/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.162904981 seconds)
    (62/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18343734 seconds)
    (63/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.086637625 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135122526 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08738221 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.109569514 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193124096 seconds)
    (68/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.159740262 seconds)
    (69/286) benchmarking ("sort", Float64, false)...
    done (took 0.170568822 seconds)
    (70/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083681504 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108675203 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085530105 seconds)
    (73/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.201096966 seconds)
    (74/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109008015 seconds)
    (75/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099233223 seconds)
    (76/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146127334 seconds)
    (77/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108529344 seconds)
    (78/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097127514 seconds)
    (79/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11955238 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101860725 seconds)
    (81/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.202565906 seconds)
    (82/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110670627 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.217869298 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.1147199 seconds)
    (85/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117686655 seconds)
    (86/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135569489 seconds)
    (87/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066665139 seconds)
    (88/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077015601 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108166956 seconds)
    (90/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090588047 seconds)
    (91/286) benchmarking ("sort", Int64, false)...
    done (took 0.109329995 seconds)
    (92/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120504137 seconds)
    (93/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076270683 seconds)
    (94/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136407719 seconds)
    (95/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110630677 seconds)
    (96/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090815727 seconds)
    (97/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086592652 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107923765 seconds)
    (99/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097255946 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108546634 seconds)
    (101/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084847316 seconds)
    (102/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120137249 seconds)
    (103/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.151422157 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174310974 seconds)
    (105/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171307272 seconds)
    (106/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066165759 seconds)
    (107/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188286101 seconds)
    (108/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119975055 seconds)
    (109/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066860871 seconds)
    (110/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.147771657 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 0.229284873 seconds)
    (112/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091023151 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.136195691 seconds)
    (114/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095577991 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112896886 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117625125 seconds)
    (117/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.129158356 seconds)
    (118/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.149447073 seconds)
    (119/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.179738835 seconds)
    (120/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.11304367 seconds)
    (121/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.088720809 seconds)
    (122/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094221742 seconds)
    (123/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.153306073 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166462052 seconds)
    (125/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.152458165 seconds)
    (126/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101204867 seconds)
    (127/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092768274 seconds)
    (128/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11651067 seconds)
    (129/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.136499765 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.179380718 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118073696 seconds)
    (132/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093751841 seconds)
    (133/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112175394 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117049088 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092321389 seconds)
    (136/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13737528 seconds)
    (137/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150480245 seconds)
    (138/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110109236 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091329129 seconds)
    (140/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117206945 seconds)
    (141/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111722988 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091747831 seconds)
    (143/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076311039 seconds)
    (144/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109684103 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148101335 seconds)
    (146/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088568524 seconds)
    (147/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065812897 seconds)
    (148/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122546577 seconds)
    (149/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173301053 seconds)
    (150/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093020022 seconds)
    (151/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132640928 seconds)
    (152/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.119102937 seconds)
    (153/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10906423 seconds)
    (154/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067217277 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10999123 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067297932 seconds)
    (157/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108182347 seconds)
    (158/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094513851 seconds)
    (159/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090398906 seconds)
    (160/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066940177 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109702731 seconds)
    (162/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097025721 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.202797032 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140048461 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.0656327 seconds)
    (166/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066957241 seconds)
    (167/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117337335 seconds)
    (168/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06711864 seconds)
    (169/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120363836 seconds)
    (170/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.125820815 seconds)
    (171/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.177206401 seconds)
    (172/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111665236 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087459208 seconds)
    (174/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117989423 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086130871 seconds)
    (176/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180129028 seconds)
    (177/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0672391 seconds)
    (178/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172427046 seconds)
    (179/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.143641935 seconds)
    (180/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066531176 seconds)
    (181/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066901856 seconds)
    (182/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.09954277 seconds)
    (183/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.372363726 seconds)
    (184/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115797032 seconds)
    (185/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126234521 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.129591747 seconds)
    (187/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136851628 seconds)
    (188/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065928599 seconds)
    (189/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108838607 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092156942 seconds)
    (191/286) benchmarking ("sort", Float64, true)...
    done (took 0.226720628 seconds)
    (192/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174420958 seconds)
    (193/286) benchmarking ("sort", Int8, false)...
    done (took 0.186825305 seconds)
    (194/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066805841 seconds)
    (195/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118888296 seconds)
    (196/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067411734 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.098678103 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.140491326 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 0.218406625 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.105874528 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066667436 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108722839 seconds)
    (203/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09326634 seconds)
    (204/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.10012178 seconds)
    (205/286) benchmarking ("sort", Float32, false)...
    done (took 0.148351265 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.1191369 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094337716 seconds)
    (208/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120023556 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065994347 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109752607 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066350681 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089203542 seconds)
    (213/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091355512 seconds)
    (214/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06624158 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114292424 seconds)
    (216/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.06648572 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109237478 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095344027 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107955805 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092561452 seconds)
    (221/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.089332171 seconds)
    (222/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066564283 seconds)
    (223/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119904451 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066436164 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06741202 seconds)
    (226/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184117746 seconds)
    (227/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180226616 seconds)
    (228/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092156354 seconds)
    (229/286) benchmarking ("sort", BigInt, false)...
    done (took 0.242674983 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088785558 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138667871 seconds)
    (232/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139165132 seconds)
    (233/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091836469 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086826355 seconds)
    (235/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117058325 seconds)
    (236/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182343548 seconds)
    (237/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077549319 seconds)
    (238/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181289983 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.108724548 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109280232 seconds)
    (241/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077788989 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112904515 seconds)
    (243/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067021691 seconds)
    (244/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066547374 seconds)
    (245/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091724334 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092705045 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118861179 seconds)
    (248/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098718094 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109816792 seconds)
    (250/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117524286 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084665835 seconds)
    (252/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075679116 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109210046 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085211237 seconds)
    (255/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.100003071 seconds)
    (256/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066852792 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116639844 seconds)
    (258/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07648476 seconds)
    (259/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113074498 seconds)
    (260/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067071667 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085246753 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122693931 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135341513 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084504023 seconds)
    (265/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114359276 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09409889 seconds)
    (267/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.094116007 seconds)
    (268/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086784447 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110205658 seconds)
    (270/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094020089 seconds)
    (271/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089242473 seconds)
    (272/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067577522 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091086362 seconds)
    (274/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.1109933 seconds)
    (275/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086072377 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.090075236 seconds)
    (277/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092636716 seconds)
    (278/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099074539 seconds)
    (279/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066070312 seconds)
    (280/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082279818 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114750452 seconds)
    (282/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08788667 seconds)
    (283/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092783745 seconds)
    (284/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066106704 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067950005 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110187033 seconds)
  done (took 35.938044014 seconds)
done (took 36.828547612 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100438416 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147152388 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095385713 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135426997 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123434864 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091137311 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118083037 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097274439 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122878147 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124464062 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097596443 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093189439 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095884377 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119733672 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097976318 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138562725 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122963743 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093083213 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118071451 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085791002 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117998652 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086053202 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111390861 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069955394 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121236705 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093584919 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115359011 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11931292 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086772225 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110656739 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089128043 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117891524 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08543958 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123098525 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093194042 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118204333 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095911211 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119469449 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08708497 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110352764 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117552773 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085865354 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116821168 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09390917 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115796585 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091098641 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118189701 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09817678 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138201457 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114763836 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094142668 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119125997 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095804255 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116300961 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089338509 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117832548 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091113361 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137838025 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117431754 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091216132 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117455116 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094397832 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114997537 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094045771 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118422431 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120150205 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096783173 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115254324 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096273262 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114849317 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087015398 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121054319 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091131584 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.1096589 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095403037 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120804173 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085078248 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115372682 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093982881 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11447868 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110826764 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088559131 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11133889 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092553729 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111936137 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069006704 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089454421 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116208213 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086139978 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119754112 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116328624 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09337519 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111799468 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097789053 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109943017 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09159027 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110078839 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086380189 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111825487 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090948248 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109671311 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089203715 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119552116 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087776465 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115890117 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098468534 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110776502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116272623 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085411961 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109776515 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100635917 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119663414 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086241517 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115019454 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085696342 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118083233 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085236769 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109714535 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086411786 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109704513 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09153938 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109788536 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088382576 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117648308 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123993594 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085680234 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114211774 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089450347 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110646651 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09264992 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110427879 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086215352 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112611365 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077294526 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113056294 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085931902 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11789434 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089091162 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118808377 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088076507 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119999785 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090947156 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117035359 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092372141 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109995543 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073894058 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115225832 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089169384 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112147792 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086373569 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111823583 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086235818 seconds)
done (took 16.809448645 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086592359 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183065841 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150157742 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141321719 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105757185 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111495808 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121804826 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117369992 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112528953 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141779972 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110646578 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131651433 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147916238 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085364826 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111979014 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09100652 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112798437 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10215959 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145604361 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13271754 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162523732 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08608352 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147170177 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134127204 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119905832 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103991716 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111207551 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091293638 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115334765 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110872213 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130892106 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090178707 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111700391 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13313426 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104358048 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119051626 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086890486 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118115422 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087097922 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110937091 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140078929 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108713366 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116889254 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116817513 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090603956 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113237667 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088186718 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119681972 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097607503 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116010402 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126018533 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154485139 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089636482 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121050525 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085605177 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12177056 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120607874 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089210236 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111700326 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089146722 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11063569 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091295543 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126739696 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141579279 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091530143 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120765084 seconds)
  done (took 8.551314114 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103601409 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139140597 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104038949 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131036752 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111360783 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087360227 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113094242 seconds)
  done (took 1.735030348 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087899567 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136870301 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110308699 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137823787 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134258646 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108880629 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123322901 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087735784 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130883601 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114765461 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107750254 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151144847 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089603979 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120302262 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138349822 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087067352 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136439886 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087364628 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115988159 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136563247 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090910896 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134786789 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089694412 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112802237 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1020903 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113131935 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16164927 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09288032 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114617956 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092601683 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111701319 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165875426 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101788548 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124046167 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113058041 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103394585 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.144987333 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086677086 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128724017 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09265361 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126614332 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113701135 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.088695586 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111965709 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093206533 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123104848 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089488225 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113644116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091065163 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13295812 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088889339 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127025125 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088461992 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117405832 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115046835 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093506138 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122982722 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089032227 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133403387 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089907361 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130223223 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129780391 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102339588 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130168437 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09088154 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126270408 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10172689 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116232786 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089426229 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117009921 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130026856 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086862466 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114692235 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098620815 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115383204 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110990745 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137273064 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115662757 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098625307 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11379132 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089604538 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113729936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112018804 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117663897 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088635462 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120276751 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091192273 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111920857 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087160001 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116852119 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086093095 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114619705 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117800655 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08936514 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117766827 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105006951 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114589894 seconds)
  done (took 11.771126333 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089381246 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11447433 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09137913 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114635194 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090016765 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114781123 seconds)
  done (took 1.575417727 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11310014 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116742942 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103090175 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12044357 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154680279 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102912574 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128900373 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1228831 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106513647 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125924314 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.1294347 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104243314 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134169093 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120444131 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103204148 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119691358 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103006788 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123922831 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126453511 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096534088 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136385344 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121043784 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094992105 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131834714 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118139636 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094172619 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124739386 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102355786 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126616692 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122929047 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094953399 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117363694 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094676646 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122692208 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129714885 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095253864 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12012467 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118362733 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09904111 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117693481 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103941317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1212764 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125838681 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.092526679 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122620832 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120789689 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093264243 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124729299 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102864701 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119228597 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11883633 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094994527 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117875847 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093496488 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120808755 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122805292 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093317032 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128862914 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094651813 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121497444 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117557138 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09211046 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123149533 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116888369 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.1034901 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11828932 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094817833 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120756009 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121426698 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094531389 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119221663 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091607474 seconds)
  done (took 9.150718805 seconds)
done (took 33.72660244 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688308323 seconds)
  done (took 1.654505017 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.822206179 seconds)
  done (took 1.785915005 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.129700952 seconds)
  done (took 18.118010227 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.495849548 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.57945214 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.996453368 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17656578 seconds)
  done (took 3.212297657 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952268526 seconds)
  done (took 1.934114508 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282726292 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230530954 seconds)
  done (took 1.481995522 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765248149 seconds)
  done (took 1.742780085 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.348084793 seconds)
  done (took 2.309952306 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326093093 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183171619 seconds)
  done (took 1.481565496 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545204852 seconds)
  done (took 1.51641559 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.825566766 seconds)
  done (took 7.802200088 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264869391 seconds)
  done (took 1.249608438 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298136747 seconds)
  done (took 1.273445542 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.548282856 seconds)
  done (took 4.524283199 seconds)
done (took 51.060422071 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097694057 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126470383 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100602407 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.1231567 seconds)
  done (took 1.419117888 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099684746 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120212823 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099754624 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119752877 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126257605 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095250374 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123359257 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100221069 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120044329 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095695374 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121115467 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11929568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097559145 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122109454 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09260959 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123529482 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098663032 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120906757 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123430833 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096378992 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118296968 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096984583 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123465824 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093372739 seconds)
  done (took 3.626804249 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099404501 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118544403 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.094914658 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117310194 seconds)
  done (took 1.415341786 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099050247 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141287028 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138039492 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099045648 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141000349 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135489813 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091730271 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116590662 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093717261 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123998828 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089886741 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149165714 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135838929 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099437093 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126367409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112977667 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091213044 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135271386 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099183623 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125190606 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091609007 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124775089 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089375983 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138746074 seconds)
  done (took 3.769597235 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169272221 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126783184 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13853102 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09449371 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159224026 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139909135 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087783948 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140716805 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08730716 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131408111 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117350192 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133148846 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129334211 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087115368 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112742508 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087014504 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128065483 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12733764 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090669092 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127158278 seconds)
  done (took 3.403986662 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09652097 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116749746 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087780436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115944834 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098991101 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120611622 seconds)
  done (took 1.624493234 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090410921 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114166475 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089871367 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113462628 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09362905 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114502488 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08776444 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115115862 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089283312 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113641376 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088402161 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11545826 seconds)
  done (took 2.213310924 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498555931 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120544647 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120878942 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088059683 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120999897 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088586744 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12821556 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091744079 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140891848 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087801473 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115711895 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089566599 seconds)
  done (took 2.677888171 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232078856 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12513751 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28315244 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368726329 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154454912 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175525039 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279640939 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159892747 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223785663 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164759232 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203060802 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221008805 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151292767 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188170284 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138221449 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144660383 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202517563 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246427241 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154448331 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207786768 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226923234 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166119695 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180117193 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150921679 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138575563 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170647066 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120422697 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104158746 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234266321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175265939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214729479 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161398132 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146889099 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210290144 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252975859 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221320653 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284342293 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133795313 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.150588918 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16602331 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261565736 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137892211 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229588153 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127252667 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131239296 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217081836 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166013019 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175826564 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151883881 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138451485 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193564319 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237916528 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190352093 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138370128 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301581409 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147036974 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200207475 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192203786 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248886543 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198587072 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212611156 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094319832 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18596787 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217619835 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184789258 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172605932 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206620936 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146024796 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198371995 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186634996 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16265934 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219363505 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18315243 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139323399 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167613787 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171399861 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169909061 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254395664 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209367354 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094441871 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165575846 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147744359 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132235074 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192888451 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096706059 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239125888 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142060026 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162482573 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212118961 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158260512 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159730997 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201010811 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228132225 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147919666 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08266537 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154267331 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15511631 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189487731 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139464343 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157770289 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161287791 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129513612 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182145249 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123898605 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184069231 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117451143 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17300005 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180809635 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126372058 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159781847 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150050109 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124384867 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200891772 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197123914 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141152594 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132047392 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208381608 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177182606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150097799 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176809524 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227816214 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116956412 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148120042 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22726174 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215221484 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140204094 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226894516 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15508664 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107287839 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131926319 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181129116 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153869995 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161170183 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134166777 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181844287 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232725623 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097797851 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1380509 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191741235 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132111902 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132467302 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161920423 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14768126 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137834331 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124047109 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151586868 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20700003 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177829931 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153863763 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164392615 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151294385 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253395045 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141367873 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122847176 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147716914 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11949586 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191304633 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196472998 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130200546 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229248859 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170191218 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201662676 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167664899 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133634954 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17722476 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129594807 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092349378 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220471437 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166321735 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160407942 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194543559 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225722141 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178221742 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181609728 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198169649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172416236 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164628293 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15595235 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111580206 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159135998 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169472189 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122875533 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143097654 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132567195 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146225134 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114072131 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132863194 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221683763 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16938778 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188240335 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157594929 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149176783 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181054158 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127630334 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173745849 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17640433 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147561694 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196085892 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220086868 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184032068 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143427114 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198805488 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120855246 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124979483 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11316597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195108753 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106346416 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135195309 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162636864 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179879301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178071104 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202275515 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210105948 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197588805 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189640495 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094045298 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167579345 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183604042 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175795996 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191719424 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138988876 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.14969657 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178803014 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157667588 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253953204 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166290313 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175088684 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234211542 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150086019 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103708282 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150348843 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191469199 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152173036 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203326224 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119803149 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140095972 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160434754 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132399889 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158146046 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182319154 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161333704 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215089588 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149391022 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183835891 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126402501 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162768864 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158725854 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164113648 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081008281 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173596345 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230938201 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148143303 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167312993 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188010758 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130921891 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306033666 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240007151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194166707 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137649699 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1551588 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160735302 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16325373 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172488261 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178694176 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158108627 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186514842 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158545209 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135968867 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1395611 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121406228 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150750648 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13111014 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147145529 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177153164 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138204869 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184216782 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161650061 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159711448 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170703241 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150019062 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142913476 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149015256 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213756433 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18244704 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23781585 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150149818 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179004293 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23170763 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097708405 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131448072 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132308804 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177018839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107183352 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219435838 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186219883 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228633894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183640794 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19258055 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139160589 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118536921 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128399638 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199338397 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207071702 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150860172 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158662177 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231302305 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118571025 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131837259 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17702435 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292446248 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142131601 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22053386 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080260746 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279722008 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12472544 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103742822 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162700318 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235584309 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135939168 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187199252 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170132007 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170659739 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163694857 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14871372 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190553523 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241563165 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198559167 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178252885 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132453367 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155778724 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175612219 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21915127 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156570447 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11174066 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229971001 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195542162 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19426119 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140626623 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168421444 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16742882 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156587234 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215742821 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106260621 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234432899 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133982186 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192669925 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153853377 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144100745 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174818736 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.186959966 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138991576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213984365 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182422033 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133919789 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104102855 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166950161 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207082249 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155996066 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099117775 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207198554 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097026533 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220412638 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228092319 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134690996 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154929672 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14705779 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13385751 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12544751 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184189887 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112227617 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164242414 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199832627 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13496174 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190161172 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230050087 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169148923 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174062224 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144764009 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691367533 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131135931 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194172994 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158606809 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233820545 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149357667 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17198695 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157109789 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167101633 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194081706 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160356268 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231414477 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218709235 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17840046 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102941037 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184551567 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163099264 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114778244 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149242796 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166737893 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158437003 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153536406 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204788981 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170710264 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105566844 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140217528 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197666533 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159214133 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21053324 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178995918 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109684628 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199977573 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186589356 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133351567 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179020241 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237229714 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113050378 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150892604 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133473685 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155931659 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260780957 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09517044 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231117834 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183947018 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159178013 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168012051 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147081253 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219575454 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157130231 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185416068 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147157599 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158654084 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155310925 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136834602 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101175466 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155185018 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167343358 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149216066 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158296888 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164009129 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194332084 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094109446 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14338504 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313768009 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191427104 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242239889 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106824899 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136195754 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161921878 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15176699 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175743517 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17733599 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135505929 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136097953 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107119128 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15808503 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111502987 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154845689 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193057455 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192827829 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207071495 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13534807 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275416873 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1120094 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155052431 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114328623 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103264308 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1494631 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145867818 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156753065 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190928257 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262845081 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146946448 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.130960156 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148501116 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.09799522 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134713232 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16380294 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163264012 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176537201 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144222004 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079596204 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154666162 seconds)
  done (took 82.787299884 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161181778 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132113512 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146212248 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20140087 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176469453 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268442772 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208931958 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252695193 seconds)
  done (took 2.627192457 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092476345 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145155718 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155761358 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131537853 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090736123 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119378482 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343515048 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131385313 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115995425 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12030399 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172754593 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094231902 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548357097 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.08976412 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118548752 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10659675 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091900622 seconds)
  done (took 3.744613388 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.47215006 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.723361196 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.510178511 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096419621 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.148415196 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111067454 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.733521058 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196305653 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11355543 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485909665 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773777276 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158317987 seconds)
  done (took 18.604264578 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114683339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13571323 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122015979 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151776241 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139830527 seconds)
  done (took 1.752290618 seconds)
done (took 130.641366404 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103313382 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400170626 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070403314 seconds)
  done (took 1.587776981 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106593043 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136642112 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106822 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135185314 seconds)
  done (took 1.580852919 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096639172 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12584102 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10704166 seconds)
  done (took 1.420488771 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322608508 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189484476 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.167575053 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10555012 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128958247 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101961506 seconds)
  done (took 1.429215692 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095787731 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127237654 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096684243 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129388798 seconds)
  done (took 1.543164677 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09367369 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070121715 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100205282 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074671583 seconds)
  done (took 1.427989359 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112513382 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131113531 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10328426 seconds)
  done (took 1.437025111 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.127039478 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138768476 seconds)
  done (took 1.357335232 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105515699 seconds)
  done (took 1.199440656 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.116895322 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168408201 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187895437 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164231219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.23363496 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16473666 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14212678 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.112913678 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130406557 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143966377 seconds)
  done (took 2.66216167 seconds)
done (took 17.512476373 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102463223 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422451504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411353608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115487134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.739835802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379453508 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033034724 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145649235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164679153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092475518 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13869126 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67952929 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060450635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378004088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019619262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376027692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675133722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120528502 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119432629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093091755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018358576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091009876 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121841388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090864534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702865728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425172918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093639992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375351487 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09139184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125493902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381627057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121549677 seconds)
  done (took 16.994592827 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094143201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173104134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097515695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137188868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122514854 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09334555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124347108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092447757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178110603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121957116 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110579496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120333448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125950909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094977315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141257456 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091169801 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124337476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091859587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121237776 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120370048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110748803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119919685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093451238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120855678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093296054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134707533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093703568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120222271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120248233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098617816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126464009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093706531 seconds)
  done (took 4.797060871 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138847675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181776081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127777154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126496607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167982129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123475277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197984818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117014453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181304341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122974202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138113444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092052584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155901822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09326097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142539083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119693142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095849291 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121100713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090865489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12199492 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139207587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09195932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121989534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092386549 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122338915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107243103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123434255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11966229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092030278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124722351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099218748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123693691 seconds)
  done (took 5.120048455 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096897 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12591261 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108121263 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138042348 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094954307 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125981228 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096357826 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124165754 seconds)
  done (took 2.013487481 seconds)
done (took 30.020482627 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109777737 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126342766 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106986364 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134741833 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102105794 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131724885 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090617707 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13375819 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132864829 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101796093 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13658194 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092004956 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122428991 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09120236 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134835335 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097161461 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132190608 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101075167 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133592338 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131715859 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094470098 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133456606 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102315034 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133372999 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102766648 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133526912 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136549003 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098278567 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121909243 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094424899 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125305436 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103254645 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12384228 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104589727 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127016074 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095699932 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124109823 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093635825 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132528195 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132858905 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099308227 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131984538 seconds)
  done (took 5.97978782 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106286919 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139689656 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103610723 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080019431 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116479103 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079657664 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137921519 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07909391 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109950106 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106914831 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07327227 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106302407 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077439846 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10120668 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077106024 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074839111 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108774381 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075060007 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075513988 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105706385 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079916145 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072260896 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108818053 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078097723 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074740821 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109797722 seconds)
  done (took 3.563531843 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099333221 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134257008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112201982 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183616449 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160533673 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09877983 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131440001 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109685159 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137346219 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120601394 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095145116 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149912985 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109552782 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12964731 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090612808 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136945662 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13582255 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093934036 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127785019 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11238051 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137530671 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102331898 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140878259 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132218633 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091972229 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122355798 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096283255 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134241405 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0967195 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131337039 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095862538 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125603753 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121944292 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103416864 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125324687 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094651473 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141146607 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101992701 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130416243 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091723354 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129778842 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121262083 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113871758 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162561325 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090902032 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12969211 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09471095 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132412522 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120873512 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109969175 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131118857 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091787807 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125289506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090827308 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121250149 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105097508 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123696058 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094645437 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131446411 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126501333 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104381895 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125004463 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107742288 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121973322 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099703653 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121771146 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092626097 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120351371 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11355557 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123896148 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160693527 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09260704 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123024458 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101193716 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129493958 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127005468 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092457814 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136229385 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102286124 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124721468 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101871714 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124740686 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093989191 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140164799 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094218181 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123858781 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092632197 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12881456 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122952434 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.092291056 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135281218 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090668968 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124828497 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109541011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122632263 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092295349 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128397292 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126199718 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09149781 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136364092 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097017003 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122906164 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101791292 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122063873 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094663642 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131872137 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125803489 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091254777 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125544193 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098173261 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122265745 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09299436 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124649215 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093884616 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133006107 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098671813 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127619911 seconds)
  done (took 14.746194818 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227158337 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21392797 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204386594 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.291177469 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134346915 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114018705 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210691393 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154336415 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122709867 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158500136 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172468805 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180405706 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168234981 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181095116 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168865915 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091762522 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142392449 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162897651 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212869656 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256664405 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142820348 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099542155 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160343605 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158708271 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136603779 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132098524 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109258999 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134699441 seconds)
  done (took 5.761648905 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107633961 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155445817 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098542549 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144471571 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147853824 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091929574 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127212939 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09324708 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136002433 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134574553 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091916779 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128563624 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098990452 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131018085 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122267929 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102708281 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131449188 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093778697 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124964967 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095972422 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133083391 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100260955 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12630426 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120158889 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101874796 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121577722 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086188174 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141515965 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121102804 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113784594 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120090221 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101105277 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135824371 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093164924 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122511442 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094369264 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124606408 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093680846 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124068771 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090959157 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123012759 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077178599 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121885232 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106010413 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12857027 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079760444 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129411732 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128033456 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094562915 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120031568 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096140266 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125768797 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096285602 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130015526 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09526568 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124009595 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09606576 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115388228 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099552187 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124731384 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084525057 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120845892 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099013035 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117428483 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101624055 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12732835 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091404197 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125090802 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096910504 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129471636 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093834525 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129328258 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090336237 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125289023 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095772727 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128613837 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095306003 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122501001 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091523126 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123347569 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074442552 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12335793 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07366747 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.1264294 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090311337 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122128198 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094271718 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128897085 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13671194 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094479958 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130984218 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093127398 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122096712 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095442071 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113458981 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095780323 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140056167 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141254515 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093295447 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121599485 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107825569 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125615722 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092035168 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106001435 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101398667 seconds)
  done (took 12.896563231 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12558765 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153362995 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09499864 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141151721 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156864541 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157553098 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10043135 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130199745 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095504693 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142466839 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093047507 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132236603 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092940741 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137189973 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155944977 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103595126 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125266564 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107101318 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127559294 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168862926 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111054793 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142316742 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110903966 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123937762 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098865208 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140498706 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160652133 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106365144 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136553284 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141753528 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107325463 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160747471 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112116675 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128517579 seconds)
  done (took 5.462088537 seconds)
done (took 49.50903419 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.214409196 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422689089 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198257189 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.14301531 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.245245364 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.19982107 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.228813146 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196578286 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.750448698 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.2001921 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.450909619 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.904945087 seconds)
done (took 60.290553318 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.29183381 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.332445046 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46473764 seconds)
  done (took 3.921562994 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.560995947 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.154618791 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458270905 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.197550735 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198228906 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490299388 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.857430942 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.592036234 seconds)
  done (took 28.077395472 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.206333555 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.284968625 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.224891701 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.207481673 seconds)
  done (took 6.051253885 seconds)
done (took 48.034158615 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.220075878 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.249023418 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.203444833 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178814463 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31403572 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.229476581 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.587078172 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.214076021 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.21811761 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179973379 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231450089 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.198677188 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.201735558 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.583475413 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.208515111 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.214417951 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.261757499 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.693202724 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.609387971 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21414488 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213244863 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.218616641 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.203534222 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202122695 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.249389256 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.198071449 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.212951683 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.224294006 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.889744261 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.208599422 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.220308242 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.715596639 seconds)
  done (took 190.893375722 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19993716 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.180578059 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.297557079 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.259999077 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.81712589 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404861108 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.361028648 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.885319624 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218483145 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224989642 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.445510026 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203917657 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.516755665 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242756256 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.228362362 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.306395709 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.530431089 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541301221 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.247541879 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.380736925 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.216439104 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.598404127 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.518259829 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.431085418 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.241297087 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.285589529 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.212124862 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.22058877 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396708206 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.455140952 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217379591 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.237888094 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840987875 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061596981 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.220402325 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.242141978 seconds)
  done (took 151.020948855 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.249449288 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20062755 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20343346 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201835318 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235718675 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201006895 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.799163553 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782775024 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.703224636 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.608789338 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.649164633 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.524976527 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205867849 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298401722 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215251757 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204194001 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218529601 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.246160328 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205924837 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203566763 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802580322 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220448457 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.431231431 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.384463989 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220024049 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237090459 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593807811 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204142408 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235800931 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537399271 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254417633 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203863262 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.627433365 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.272771252 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202966996 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203396267 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31760729 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205149689 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237272791 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205135321 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486238135 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203665403 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204848509 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207674689 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905934629 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.206999572 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.803859156 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207148584 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.165533835 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205924917 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204720364 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.594446712 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.926029315 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224851929 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204455695 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206966972 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205223663 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205385959 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238195771 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.589970906 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303095006 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.223101136 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208364763 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23901999 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205873724 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.26423446 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20683638 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.192688193 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.284603782 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.426790942 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806412569 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210352677 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305967939 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32786533 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206255028 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204735346 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205694572 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205297813 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318624786 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206162145 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.63458444 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385279769 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223689384 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.669701031 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307186344 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206670462 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630436086 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209984374 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207458489 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.977794564 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304712353 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.206622592 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206936774 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206698614 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207552325 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.640330107 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20824643 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787930729 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.488702387 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211577916 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.659040489 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211742525 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.659886295 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.779255313 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.923568328 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.210549527 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320496074 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386358675 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.226313277 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208441605 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.667187154 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.212997463 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.267135286 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.207419447 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608709164 seconds)
  done (took 366.86209754 seconds)
done (took 711.152890528 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.809818925 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.806505319 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.917540559 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.79899653 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.767566984 seconds)
  done (took 10.236954332 seconds)
done (took 11.372772677 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400227857 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398062152 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270083109 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.401452292 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237650689 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418951557 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379375236 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228559359 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.311772513 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291655041 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310850786 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265193482 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236737871 seconds)
  done (took 18.287647374 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533828643 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.526682038 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272497119 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536101521 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249693469 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.534190849 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419438195 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430695465 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433060975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243620808 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222530198 seconds)
  done (took 16.53947236 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543404163 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.5359328 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276795416 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540081459 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250535622 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540112986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.424368867 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430669952 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.45282697 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243668003 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221947996 seconds)
  done (took 16.59774548 seconds)
done (took 52.561027572 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.219518175 seconds)
  done (took 2.356841186 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.25533786 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418019077 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239560436 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.2262327 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22025641 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221498737 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227258815 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220645717 seconds)
  done (took 11.166672165 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220704336 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216198149 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.216576245 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21884494 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21949618 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219602696 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218620678 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220166192 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217605659 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216231732 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217303397 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216960136 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219773118 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216493288 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2202177 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216559945 seconds)
  done (took 20.629822035 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220132942 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.216750871 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218242715 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217359436 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218199837 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217537976 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218886021 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217626957 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217305702 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218061317 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218263864 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21716637 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219723807 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218279057 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219166698 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219786844 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218264397 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219477915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223631134 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218212141 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21938645 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21835151 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219106951 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219871684 seconds)
  done (took 30.389453891 seconds)
done (took 65.680149917 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.407196452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.031560991 seconds)
  done (took 9.578507192 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.222064319 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222025644 seconds)
  done (took 3.589180439 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221734458 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222113224 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220855381 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221679902 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221613737 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221630828 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222033792 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221666772 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222956292 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.222252451 seconds)
  done (took 13.359436527 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222726596 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221419445 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219867039 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.221988644 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222931357 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219470804 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22225548 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222288555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223031071 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.221535109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223174597 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219738172 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.22295707 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220384401 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222061025 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221399882 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221487865 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.221859372 seconds)
  done (took 23.132843193 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.222739543 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.223213748 seconds)
  done (took 3.587588527 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.221346363 seconds)
    (2/7) benchmarking "second"...
    done (took 1.219505654 seconds)
    (3/7) benchmarking "month"...
    done (took 1.221606712 seconds)
    (4/7) benchmarking "year"...
    done (took 1.221295473 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221499588 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.22197344 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222282973 seconds)
  done (took 9.691790798 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.225679701 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395157868 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.472436633 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.842590736 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.225689299 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227644972 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.064298376 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.228280743 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.229932084 seconds)
  done (took 14.054180618 seconds)
done (took 78.135473261 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.25389037 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.236832422 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.425210182 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.229835068 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.235736923 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.51973843 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.273272786 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.348840628 seconds)
done (took 37.668608774 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.237072504 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202037622 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.025167215 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.198410916 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.284283204 seconds)
  done (took 18.855589584 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.297632458 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560062821 seconds)
  done (took 5.002245231 seconds)
done (took 31.238760518 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226288598 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223576004 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22640953 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.224140443 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226200603 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.224383229 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223744793 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225442803 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225600791 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22639545 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226952963 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224907841 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.22768693 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.226960752 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227288239 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224894702 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22457282 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226684335 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.224914459 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225046821 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225700695 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229385656 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225170269 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224537924 seconds)
  done (took 30.562279014 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227541325 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224973341 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.227486538 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.226804321 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.2239243 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229017241 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226884955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.225097975 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227859395 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228097014 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224706016 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225439264 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.227761224 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224866297 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227747364 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.225619636 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229247789 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226142558 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228390694 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225911636 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227499026 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226021054 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226808855 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228491729 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226627144 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225792066 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229155098 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.228107147 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22767068 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22518354 seconds)
  done (took 37.95326901 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234283782 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236996225 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22943262 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228638844 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.228994281 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228326252 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.229080275 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228921616 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.228184276 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228976483 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229133187 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230414045 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228970293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230293542 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.229121267 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.229449297 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230198541 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.229671128 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231174828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.230021298 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231109338 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229966446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.230422396 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.230309076 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.230056031 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.230587154 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.22981996 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229821804 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.2314506 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231163771 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230642978 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230563745 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.23082763 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.231225172 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231173515 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.230413133 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23530559 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238991579 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231013318 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230224446 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.230385941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231454218 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.231039404 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23162823 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.230601787 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230212568 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.231374356 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.23079102 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230005738 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.231178339 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230225656 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231042014 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232038896 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230765645 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232713844 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.23119552 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.232197137 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230917367 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232588523 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.23145741 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.231645983 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232880716 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.232524223 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231493463 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232562653 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231561706 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232225147 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23237428 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231373589 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233093294 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.232095889 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.233581023 seconds)
  done (took 89.785890425 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233686078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231693685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229107537 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230562099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230796757 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233911157 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231552957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233855612 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230421932 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2340633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233149018 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231663017 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230596991 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234317918 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234587153 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231181785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234662404 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232466233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235557529 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236235506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234617076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232966558 seconds)
  done (took 28.272891328 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23580964 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238545927 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232686219 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23641759 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232481711 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235841295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236109396 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238742581 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23587498 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231657197 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232658196 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236724898 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234225358 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232884028 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233952876 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234216851 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235310144 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235171264 seconds)
  done (took 23.383070599 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232636123 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235437977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236369701 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234024398 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234391552 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237259098 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233634067 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237374075 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236006106 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233022382 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236360606 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236522822 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237698964 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234037466 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236846577 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23412318 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237553588 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23465706 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237683838 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234499634 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234168328 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237161017 seconds)
  done (took 28.337138802 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237157208 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236690479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234023312 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234505043 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236589903 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23741394 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238456694 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236476097 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238522604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238550246 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236181593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.237969638 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.236955666 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235775689 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235677973 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235299361 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239039224 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238118651 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237938951 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235965676 seconds)
  done (took 25.89349117 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239469657 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239430516 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240323058 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239748672 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239664794 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239552289 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24110698 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238950449 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241636652 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24040842 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240429289 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239734306 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240303636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240263073 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240011669 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240303407 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240855854 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241038539 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241613632 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240419799 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241572961 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239868526 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24070033 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240670627 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240885964 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240682045 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240389396 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240576867 seconds)
  done (took 35.888882149 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240309427 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240342353 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238050211 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239345111 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.239066066 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23957135 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.239594089 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.237764265 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241079555 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238385242 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.24287205 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240314541 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241160929 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240120064 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241636606 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241909922 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241047614 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239253945 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238507989 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238566173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240828981 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240023101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241576386 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239061049 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238494527 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.24183294 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239173127 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23844339 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241702124 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238561225 seconds)
  done (took 38.358165671 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25946172 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260084699 seconds)
  done (took 3.678652975 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.240111421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243969171 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.2433728 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241168013 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239754454 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244109181 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244582306 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2406642 seconds)
  done (took 11.097853896 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241635968 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243944356 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243659076 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.242386009 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.242916814 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.243291425 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249701136 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.264448585 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244575632 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245670963 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251219727 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.25099128 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.244974412 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244573602 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244012116 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245072085 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242885966 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244286859 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243991652 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245748365 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245284417 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247431099 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246746479 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240255779 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245988267 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.253724906 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.268867019 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.24500992 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244143298 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24838213 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243844059 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242690023 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244952679 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245170589 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.252427838 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24508085 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254680165 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265587786 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252184953 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267585404 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247281131 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243837517 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.2466645 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246550258 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24722239 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.246387097 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.248722369 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244715503 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.246540867 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249386739 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.252837453 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246270995 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243848947 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249169885 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.247216787 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25170745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268360297 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249287628 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255298058 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256184205 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279729425 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274844911 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248506041 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247703439 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259068279 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270332474 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254303153 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.266364776 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.245639381 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.247476157 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.253100692 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280997533 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.27567564 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24788059 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247897743 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.248465819 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248524476 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248959488 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254413895 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269906291 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248018722 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248431931 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259092656 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272534368 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248856828 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249184154 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248408297 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249528361 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251148356 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260142158 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.269030187 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250362713 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249229009 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248616148 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.25207986 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250660403 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249733959 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25138606 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.247237675 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250709317 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251157522 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252490546 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258678315 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250632828 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250846755 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255915189 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272897033 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250841886 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.256150243 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.251098746 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250208307 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252622727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257375248 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248474422 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252833259 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260437617 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.251600267 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252174436 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249332759 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251945745 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261885892 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276576237 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252110861 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.251853331 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.256266458 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263824722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252227579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.253183478 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25183708 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249062625 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.249774971 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253280306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251931244 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.252136512 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25229286 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252970361 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249910482 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253198097 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252002275 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25326111 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.254056445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.252451507 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.253828682 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.255910815 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251881291 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.254772277 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258952757 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273793427 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253571745 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253966658 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.25064849 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253541312 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254355194 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.254773625 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25354549 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254041654 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.253295768 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254344572 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254872175 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.254539075 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255191191 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254086996 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258587036 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.254570779 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.257620373 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.254307941 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252499587 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255243509 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255060374 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254455906 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255024949 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.253269003 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259162295 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262416098 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255834866 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255939555 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.258515189 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255598436 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254816232 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256501571 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.2591254 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263563603 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.255332355 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262096147 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277879397 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256526067 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.256561715 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.25614628 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255514805 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256826872 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259720661 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263358846 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268580855 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283928319 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.258473517 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260569612 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257803144 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.261258094 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.258727106 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256475099 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.258193683 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258048723 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255785503 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25783221 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259688123 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.257016897 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256379834 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.257593388 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.258285832 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.257878718 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257487114 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259127149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259180039 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255260568 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259258399 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256248738 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258383509 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.256068848 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.258217169 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258073254 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259339897 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.259593955 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.264407484 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256053448 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260312725 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259827479 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.259339826 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.258381507 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259439559 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259914227 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257290248 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265809258 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.280880119 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260092463 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264619695 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280017081 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258341287 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262204403 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.260473119 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257903415 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262164146 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.266996039 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259572715 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.260144977 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259196109 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259319913 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260625751 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.265665885 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279650147 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.260660069 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260442132 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262505696 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259100713 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262133375 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260476717 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260864878 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262755008 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261980342 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.261647575 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262631852 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260892906 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.261783112 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260920596 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264521224 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.270837248 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265964792 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262319438 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262882447 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.263700112 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267467232 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261224439 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.2625599 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.262702333 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273841242 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.290417996 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26909843 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.284777697 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26396405 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267119984 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.287183702 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266744175 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26341783 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262803665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.262957153 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.262799006 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260640608 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263674314 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.263293465 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264160683 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.263807881 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267643957 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.264036114 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263637327 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263657639 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264637952 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264613848 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263108777 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264276998 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.265055944 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266002627 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.263453835 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264918578 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270198863 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286120879 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26561599 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264356754 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.264933375 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264452647 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.266373347 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264848182 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.268401294 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272610088 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.268327401 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274745953 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.267647946 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276023185 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.265147181 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.269511334 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.274588486 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.263782057 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265284664 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.266416861 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.267310231 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273101858 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.288458001 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.268320834 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26999383 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267218739 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.267118094 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.266471084 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.265895051 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266793111 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.266962077 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27397397 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.288290341 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269319085 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268475994 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.264688666 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.267299782 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.267514242 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266132081 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270124218 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265939656 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266984937 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26844924 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.266273184 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.268704875 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.268272788 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.267513984 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.264586258 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.269652471 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27206924 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.291235406 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272087968 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267829387 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273589784 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289593323 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273059352 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.289942399 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267808847 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26773755 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.268962415 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269220955 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26842696 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268931869 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.269074312 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.270097875 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272193649 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268532534 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269373834 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.269077196 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.267989945 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267625324 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279046097 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29236763 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.270684881 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274134863 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.266716758 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.271362156 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273184459 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.269821751 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.266958044 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272052814 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279729246 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277672973 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269901236 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.270005826 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271601439 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270242932 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.270765256 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.269266631 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.269376055 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270499241 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.269831045 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.269689248 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272594124 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270835707 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.270849313 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270907805 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271700189 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279496245 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291659953 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.272580306 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270394764 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272362988 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271930238 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272320035 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271398027 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271101067 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272494734 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272475563 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278753839 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.279536782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273158647 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.270567199 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271690166 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270977338 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.272313441 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272822012 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271793207 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270794462 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273063083 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271759758 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.273337692 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.272346637 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.274045582 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.273385275 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273532729 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275862444 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279659711 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271893069 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269648493 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.272067281 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27376063 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272034086 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27393291 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.278326904 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298921252 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.283946415 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.282786945 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.278046442 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.271943739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276273861 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280420513 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.272281905 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273903011 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.273582964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273289571 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275643447 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.275452741 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274444539 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.278347024 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.295702352 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.273806218 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280081084 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295207356 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272830564 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27600242 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278231827 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.272523993 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.272610171 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.275129505 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273571376 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279682326 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297689464 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273875386 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275369432 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.274111245 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276436225 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279348135 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27601668 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275162621 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.272129066 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276584052 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274290233 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275835442 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271598411 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273381122 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.275003631 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278113246 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282371144 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27437768 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277146096 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.275464336 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275805414 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27537073 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276658749 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274436102 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274476058 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274470245 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276054717 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275400385 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.277003043 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275750743 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278074503 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278553955 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276413437 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280036484 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286456073 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284923722 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.275149354 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.274574187 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276593154 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278049027 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277686292 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.278064862 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277216323 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277724775 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27897476 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27679252 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277784701 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281283457 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29287136 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299389528 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277393224 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278248776 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281164964 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.2778612 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276264716 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.277761134 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.278450705 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.280150022 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285809529 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.27898168 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283252615 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300007804 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.280443402 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.283323689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.282451526 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28661652 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281228789 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278836359 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278490528 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282505093 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295227125 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278629436 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288975933 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307767228 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.301264742 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.279686956 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278544614 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279148089 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.278847792 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.280243793 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278731054 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28130866 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280694538 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.278944294 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.280377629 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28497804 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.28100599 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281766927 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.281004975 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279360576 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.281181431 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277716767 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.279714916 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280308947 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280856049 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280208172 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.281126166 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.281870193 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29371668 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309453526 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.280676516 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28063964 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278080787 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283462705 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.284353131 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292509558 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289324312 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282193836 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.281594627 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282816258 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281514742 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.280177258 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281624845 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280389589 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282332252 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280629692 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293526749 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310609164 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285205144 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280779891 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282458615 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282111379 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281723132 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282533672 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283032462 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283351441 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.285882847 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286824917 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283006402 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.282539347 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.286363464 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.290145773 seconds)
  done (took 756.078778333 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282202514 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28095147 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282856758 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283389626 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280142907 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280350539 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280611078 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280981351 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281775928 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28180162 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281596129 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281847166 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281544087 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28280861 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280033069 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282158212 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28095336 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281710981 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282277417 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281047233 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281920714 seconds)
  done (took 28.113070369 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.28458086 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281712335 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282176335 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285563016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28322953 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284927576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282045016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284919797 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284209977 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282219883 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284458129 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286122143 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282878288 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283691791 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283260517 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285536089 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285343001 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283804298 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285620335 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283376645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286839744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283533503 seconds)
  done (took 29.450226481 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284437966 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285860465 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.283890389 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.283024235 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286330947 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.284299931 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286816543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.287330412 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.286224434 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.285726076 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285506218 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28766605 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293507164 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292368649 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.289092188 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.288164163 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.431421462 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.286290066 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288061045 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.287905624 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.284118131 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289907715 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.308095926 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.285990002 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28531061 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287083926 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288471947 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.287811128 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287123288 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.287849414 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.292277606 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.288069459 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287255489 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.289931918 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.286741152 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.288805142 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292049395 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.287657976 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.285923145 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.289365933 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298684239 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.310009214 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.287956549 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293734233 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.311889477 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288763594 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292418945 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296261354 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.286677986 seconds)
  done (took 64.532304218 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290583989 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.288254873 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286563793 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290285926 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.289880157 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289476504 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288945303 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290153651 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.286785182 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.285666145 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28979903 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.28652306 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286757206 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289442577 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.291144285 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286632225 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28703378 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288163398 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.286819836 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28705955 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.288736583 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289479988 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.291496311 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.288039535 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291957424 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287653224 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288622775 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.290981832 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288792757 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288092341 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291414067 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292134171 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.291557261 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287837416 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289285173 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.292170617 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.290769703 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.289814066 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291198618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.288965284 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.291611112 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291923961 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291299631 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291483368 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290177045 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.289033884 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288985903 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28941479 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.290277536 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292739647 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291321976 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290223842 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292165818 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290108113 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293761663 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292105757 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289709877 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289644237 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292061982 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289623931 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290156603 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291959604 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290175884 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.291943207 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.292297573 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291046143 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290317418 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293557578 seconds)
  done (took 88.920208443 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293352928 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291349773 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293700121 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292963018 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292587114 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291968564 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29205551 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292652106 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29203422 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291999236 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292648274 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292619085 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.29370108 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292737189 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292127995 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293698405 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294067507 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293600447 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293052934 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293614342 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.292015503 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292777856 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293087189 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293203508 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294663452 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.29413749 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293601456 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293937327 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294666039 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292388733 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294945303 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294520736 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293956005 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295036889 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293978305 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.294277645 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29358834 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293871404 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294155456 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294985757 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294542577 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295544385 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294758841 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295039481 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29577345 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295773242 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294136751 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.294708359 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295843465 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295775318 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.295539461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294444683 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295085287 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296687284 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.295152923 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.294826628 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295924051 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296230861 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295685735 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296218232 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29650926 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.296380626 seconds)
  done (took 81.445244753 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297124947 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297779464 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.293719284 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295135785 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298188247 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295686123 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297060208 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297708166 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297853924 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.298560808 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297310126 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295467896 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295695697 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297429067 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295208887 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295451909 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295663531 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294990762 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297450831 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294084093 seconds)
  done (took 27.13853544 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295858111 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299052846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.295145933 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294761025 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298792719 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296025632 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.298109456 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29988843 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296440254 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299992413 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297470259 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29981949 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295443974 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295813408 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298466715 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297437453 seconds)
  done (took 21.969733923 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.298964204 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300540819 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.300369259 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299740646 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.298649 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.298290367 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299333253 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29856439 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.297906123 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.29807791 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297209068 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297659418 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296471788 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295822215 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295584528 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298059792 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295693104 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295179976 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295185929 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.297153075 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294381835 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294938835 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297741531 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296348102 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294948057 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.29565884 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294190452 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294714424 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294902536 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298048369 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294380293 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296690983 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294705923 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29335762 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296397127 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294625877 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298112845 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296373145 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.2978294 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296942163 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.29731964 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295322901 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29639819 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297205592 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.294951084 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.299084063 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294527323 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294410107 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.294338596 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293480928 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297006564 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296112183 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29646905 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296662976 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297066667 seconds)
  done (took 72.525259434 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297530619 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29832475 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293888368 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297609617 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297570367 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294125559 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297378652 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297089361 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295083012 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297412794 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295846798 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301344764 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296226517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29789974 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296768023 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29948101 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295087333 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294428304 seconds)
  done (took 24.553067218 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295274287 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295300599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298731383 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.296663888 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296795377 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299954387 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296444852 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.298291385 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298771396 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297115797 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296001675 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298973106 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29925258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299952434 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296243675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297113559 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.299869038 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298641833 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297874964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296700266 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30070757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300819189 seconds)
  done (took 29.767740171 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.298608998 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297983423 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.299647613 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314564418 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31930751 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.322635705 seconds)
  done (took 9.065322364 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306904608 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299302666 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299363851 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301988877 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301169424 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298535968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297596373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297734647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301540917 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298922307 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29801246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301060401 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299195478 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299144753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301172368 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300694094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299548486 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298792569 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300587107 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301327413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298973785 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301447738 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299101305 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29871271 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296988699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29980008 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300335522 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29917982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301937755 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302320745 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301453496 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298550644 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30206666 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300734557 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301923237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300586564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298453291 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302961452 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300784179 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299258895 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302011124 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301819733 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30161871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298262607 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301561432 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299096791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299278142 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299980916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300272202 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302710978 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30327214 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29870149 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303618829 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303187589 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302954549 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303559994 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300432949 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302507198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301428502 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299871816 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299954365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303105647 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300363587 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301988259 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303268899 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301554987 seconds)
  done (took 87.083643811 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300096143 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300581153 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301041341 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301061169 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30102548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301214674 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30132304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301033809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30222094 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302287042 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303970716 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301030212 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302215971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301926389 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300568825 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300677797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302736188 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302676555 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303196024 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305487387 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301807218 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302120537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303680534 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301678507 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304324452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305688319 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303106668 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303402022 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301904439 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303556395 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302358222 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302972381 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303368651 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302444114 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303707553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304516744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304008752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301939335 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304402477 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306177342 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303625325 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306099085 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30326988 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302997887 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303266306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302404137 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30335658 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30287971 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302577184 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303666478 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303932472 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303473465 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303676092 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302923267 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304577756 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303226246 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303054827 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302587369 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303223364 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30582928 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303869985 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303462453 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307069685 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304771692 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303100909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30439101 seconds)
  done (took 87.21975059 seconds)
done (took 1762.219332731 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.309230157 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.334426575 seconds)
  done (took 13.86435017 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466489523 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420704514 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303591033 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.348035732 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303619525 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.307024013 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.302753893 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.301950594 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.302466307 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302136232 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303964885 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493681594 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.358524747 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301987638 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.302400501 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396709419 seconds)
  done (took 42.735357924 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331344649 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310274317 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424590269 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.329029442 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331151974 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.500115742 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.364084463 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.313761465 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.489837839 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.357283348 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.922795669 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.330999169 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306779828 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.458329607 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.3256875 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500574425 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.572129574 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.9324099 seconds)
  done (took 30.319784795 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785047889 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.327794903 seconds)
  done (took 9.331238473 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328366413 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308779857 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309377465 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306316345 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.314090103 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302647671 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306244142 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.301641464 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.226605562 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.446217017 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31248288 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315809616 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329717227 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309181229 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.30630199 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343805673 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464289364 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.308061539 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305045941 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.312555454 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.308046519 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.430384348 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35296601 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.310649364 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.440063775 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.186257343 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315398653 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315489292 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.443984327 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306576025 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306319937 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.306825422 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.308576068 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.927679154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.79499958 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.323682893 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349491717 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316735292 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.305836182 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.498388907 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311527243 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314732779 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.300410787 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.781421827 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.451998434 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433338708 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.645457934 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330783162 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308271766 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370368842 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31354295 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30868035 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.334948194 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.088783464 seconds)
  done (took 110.821883259 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.349669172 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.694491076 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469423104 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.325635694 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.138150375 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.095261255 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320193595 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600335329 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.334757948 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297719022 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.607559093 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.828115614 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327230993 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.305881552 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.818782798 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378010452 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298863869 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.182415348 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32352806 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.299234052 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797515746 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30478869 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.319544876 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.437326546 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337511112 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771812732 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.836378866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.807177937 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319141323 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.298238735 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7690986 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325086301 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.318201976 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.298388262 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562005186 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.654101482 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64049977 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.314247234 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.307648771 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298416119 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.32136355 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.737561748 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.647875136 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313849674 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.2966223 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760550161 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31290227 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.299735966 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302485931 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503519951 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.981742863 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296373255 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.753696645 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300542199 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.573804432 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.361325622 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.336830047 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782719518 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31637617 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.471820768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369923682 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297581069 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296597673 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302021669 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300567194 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647189103 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.661853407 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300247264 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.638648573 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781520184 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.320280651 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.828953552 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.215944962 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.312168953 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.357297189 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.308449372 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.004182289 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789979483 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325393974 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.298478649 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.623807194 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318936838 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.57593848 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316400093 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297152449 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813094667 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.307635679 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.301404583 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.311020864 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.303548914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.047366162 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304678994 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.584640296 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.329859422 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299326513 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.300587517 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.321961962 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299451512 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.297804588 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.305948542 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.824005341 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.322226733 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.282445488 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322690451 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299237644 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.322609913 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.299345136 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.298321963 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524922328 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.750047706 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.322057239 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299629136 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.305678447 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.308851993 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.424587441 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.306494888 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.600617619 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318727153 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299415446 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.306538355 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.996072398 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326398029 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300218446 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.304237556 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.213077432 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.510095272 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320769664 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.317169538 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301492517 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.318361098 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.597852659 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322918711 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.376293501 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.301056469 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002524691 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338611391 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.318769 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.63793707 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315042504 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.23984333 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322242823 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30228171 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588691149 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.569024849 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.632840807 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31912941 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.303324766 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.992836316 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.325740088 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448803259 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324228467 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288878028 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500289087 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.513142572 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303201565 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.905548915 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.303826016 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521736065 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.306052895 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.601346821 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794919567 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.32204838 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30904039 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.007004685 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.002345605 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.050016455 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.306392332 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.575860695 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.277343879 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.781153332 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.303752334 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.301902225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.883887584 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305836586 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310227456 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.304406595 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.30234384 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375545781 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475489159 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.889142853 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.308040831 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74952756 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367833056 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310122662 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309822012 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.306965241 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.650920754 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.345276179 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305901845 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.339376486 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.306639635 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.304557593 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.771670406 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.253444729 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.310456566 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458758956 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.937336127 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.32446023 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.305214533 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.919338825 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.52632092 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845343385 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.359771394 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.610070726 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.324316165 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.343542341 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.029448933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.387949785 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.813908362 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324769681 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.308014637 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902194376 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.322936961 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.365807986 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.30713141 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.308316423 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.844069669 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.324192549 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.312854553 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.539718369 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325443278 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560903601 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.308843552 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.323976777 seconds)
  done (took 1105.086074795 seconds)
done (took 1313.377646662 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.307135816 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.30920113 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290505853 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.30937617 seconds)
  done (took 26.442381297 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.317212999 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312186666 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313537423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31403811 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315909302 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313415741 seconds)
  done (took 9.113111087 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.33246583 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31379016 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311438748 seconds)
  done (took 19.184684411 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.518234829 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.606648917 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.67136048 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.532835197 seconds)
  done (took 10.558679348 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314494043 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.315871856 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.314424763 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.3175387 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320006826 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322477343 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.317627885 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.319279124 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.320011713 seconds)
  done (took 13.088464173 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.321454373 seconds)
done (took 80.933380144 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372470237 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.660007292 seconds)
    (3/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.885301354 seconds)
    (4/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.172286783 seconds)
    (5/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.294344521 seconds)
    (6/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.309036286 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.413240358 seconds)
    (8/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.347520565 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.246839492 seconds)
    (10/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.848159228 seconds)
    (11/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.408950346 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.558165692 seconds)
    (13/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.305953863 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.565999595 seconds)
    (15/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.078194786 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.52850924 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.349649873 seconds)
    (18/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.416925356 seconds)
    (19/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.916500021 seconds)
    (20/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.316179622 seconds)
    (21/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344245148 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.396041419 seconds)
    (23/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.290835702 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.548404868 seconds)
    (25/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.18573238 seconds)
    (26/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.322809793 seconds)
    (27/286) benchmarking ("sort", Int8, true)...
    done (took 6.316703181 seconds)
    (28/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.452508274 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.68075925 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.430471621 seconds)
    (31/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.336664713 seconds)
    (32/286) benchmarking ("sort", BigInt, true)...
    done (took 6.311300393 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.30975474 seconds)
    (34/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.290514326 seconds)
    (35/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.11897888 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.720838201 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.457153296 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.291269114 seconds)
    (39/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.354982151 seconds)
    (40/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.428684459 seconds)
    (41/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.317090213 seconds)
    (42/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.298358281 seconds)
    (43/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.428506434 seconds)
    (44/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.312895115 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.307267972 seconds)
    (46/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.293010631 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.189255563 seconds)
    (48/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.300191257 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.96301823 seconds)
    (50/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.271428002 seconds)
    (51/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.104022527 seconds)
    (52/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.348272058 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.168564946 seconds)
    (54/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.536168728 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.423512196 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.723817084 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.565579279 seconds)
    (58/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.338234772 seconds)
    (59/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.339035184 seconds)
    (60/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.312049478 seconds)
    (61/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.517846438 seconds)
    (62/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.29376949 seconds)
    (63/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.11218578 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348297588 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369864202 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.1298816 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.321016718 seconds)
    (68/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.780717396 seconds)
    (69/286) benchmarking ("sort", Float64, false)...
    done (took 5.625379134 seconds)
    (70/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.900810176 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.724453377 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.743620009 seconds)
    (73/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.311628807 seconds)
    (74/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.569836676 seconds)
    (75/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.356442196 seconds)
    (76/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.529889231 seconds)
    (77/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.326609942 seconds)
    (78/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428699746 seconds)
    (79/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400476378 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.762758012 seconds)
    (81/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.877107062 seconds)
    (82/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.416377442 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.294619972 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.326452179 seconds)
    (85/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.345742969 seconds)
    (86/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.398476734 seconds)
    (87/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.29408966 seconds)
    (88/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.768732399 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.801879561 seconds)
    (90/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.437207187 seconds)
    (91/286) benchmarking ("sort", Int64, false)...
    done (took 5.498463225 seconds)
    (92/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.453656709 seconds)
    (93/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.525733646 seconds)
    (94/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.725962209 seconds)
    (95/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.336655183 seconds)
    (96/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.83898638 seconds)
    (97/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.320697534 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.979321694 seconds)
    (99/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.325066144 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.236296385 seconds)
    (101/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297080994 seconds)
    (102/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.329469896 seconds)
    (103/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.295938077 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.562233863 seconds)
    (105/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.096552924 seconds)
    (106/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.360043175 seconds)
    (107/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.441179017 seconds)
    (108/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.339971205 seconds)
    (109/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.908693791 seconds)
    (110/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.302726122 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 6.322948588 seconds)
    (112/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.380500925 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.917168752 seconds)
    (114/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.337576916 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.319658406 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.554407815 seconds)
    (117/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.691072314 seconds)
    (118/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.668948009 seconds)
    (119/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.296753053 seconds)
    (120/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.172792178 seconds)
    (121/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.151661991 seconds)
    (122/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.362814862 seconds)
    (123/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.597006308 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.295265827 seconds)
    (125/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.757403546 seconds)
    (126/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.116230643 seconds)
    (127/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.139116683 seconds)
    (128/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.343476151 seconds)
    (129/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.295457282 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.830818783 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359295263 seconds)
    (132/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.341702196 seconds)
    (133/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.461978461 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.575016127 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.054966813 seconds)
    (136/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.164743011 seconds)
    (137/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.320275423 seconds)
    (138/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.367220045 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.072485068 seconds)
    (140/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.579366152 seconds)
    (141/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.381648377 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333629433 seconds)
    (143/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.598403431 seconds)
    (144/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.364664301 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.487368163 seconds)
    (146/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42285866 seconds)
    (147/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.112239715 seconds)
    (148/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.029795142 seconds)
    (149/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.301912325 seconds)
    (150/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.444333187 seconds)
    (151/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.845980022 seconds)
    (152/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.942526283 seconds)
    (153/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.161027492 seconds)
    (154/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.298573219 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.276254814 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.608253448 seconds)
    (157/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.11508329 seconds)
    (158/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.345831723 seconds)
    (159/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.298416995 seconds)
    (160/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.285117487 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.327060712 seconds)
    (162/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.325899809 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.399004653 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.841066331 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.523237316 seconds)
    (166/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.299914588 seconds)
    (167/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344356223 seconds)
    (168/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.928018534 seconds)
    (169/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345222218 seconds)
    (170/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.737026978 seconds)
    (171/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.3067756 seconds)
    (172/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.334673002 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.32660196 seconds)
    (174/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.339632632 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.236106663 seconds)
    (176/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.299662072 seconds)
    (177/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.898276155 seconds)
    (178/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301490268 seconds)
    (179/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.963021249 seconds)
    (180/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.318566439 seconds)
    (181/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.304493811 seconds)
    (182/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.741363501 seconds)
    (183/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.725372559 seconds)
    (184/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.703862466 seconds)
    (185/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.741814321 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.108296903 seconds)
    (187/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.347985414 seconds)
    (188/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.03291619 seconds)
    (189/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.727352885 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.346798705 seconds)
    (191/286) benchmarking ("sort", Float64, true)...
    done (took 6.320490405 seconds)
    (192/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.717027136 seconds)
    (193/286) benchmarking ("sort", Int8, false)...
    done (took 4.34498167 seconds)
    (194/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.306461559 seconds)
    (195/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.363392372 seconds)
    (196/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.907170053 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.682473878 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.300871826 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 5.424933291 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317526609 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.309248969 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.382803026 seconds)
    (203/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426325621 seconds)
    (204/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.728163475 seconds)
    (205/286) benchmarking ("sort", Float32, false)...
    done (took 5.329960552 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.993519049 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.534507136 seconds)
    (208/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.3216396 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.304524452 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.973004422 seconds)
    (211/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.529033585 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.718670308 seconds)
    (213/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.406250464 seconds)
    (214/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.92965385 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.342438961 seconds)
    (216/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.502208375 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.340921009 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.413345174 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.363481305 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.348772041 seconds)
    (221/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.397512576 seconds)
    (222/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.520161246 seconds)
    (223/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.425028143 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.302160235 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.076640028 seconds)
    (226/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.316362289 seconds)
    (227/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.443850804 seconds)
    (228/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.428764492 seconds)
    (229/286) benchmarking ("sort", BigInt, false)...
    done (took 6.321070584 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.402445823 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.330432854 seconds)
    (232/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.323607384 seconds)
    (233/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.327149204 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.673748917 seconds)
    (235/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.435958081 seconds)
    (236/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.339051931 seconds)
    (237/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.305612712 seconds)
    (238/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.443802833 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.753942284 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.530084438 seconds)
    (241/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.330392376 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.347649845 seconds)
    (243/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.311477684 seconds)
    (244/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.355852519 seconds)
    (245/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.324276699 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.370975595 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.710118016 seconds)
    (248/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.027881485 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.352744778 seconds)
    (250/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.338593411 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.404118106 seconds)
    (252/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.719071532 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.965232515 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.878791697 seconds)
    (255/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.583272516 seconds)
    (256/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.686124124 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.433358746 seconds)
    (258/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.603279299 seconds)
    (259/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.408175949 seconds)
    (260/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.529580707 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.42429796 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.673396767 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.361748689 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.444889482 seconds)
    (265/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.345855401 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.179648148 seconds)
    (267/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.305005113 seconds)
    (268/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.34517784 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.729955176 seconds)
    (270/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.367509009 seconds)
    (271/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.306435345 seconds)
    (272/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.614444079 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.384794321 seconds)
    (274/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.431379395 seconds)
    (275/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.061605124 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.304121972 seconds)
    (277/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.351453679 seconds)
    (278/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.056803526 seconds)
    (279/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.324845761 seconds)
    (280/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.338644515 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350385429 seconds)
    (282/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.358565969 seconds)
    (283/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.325327006 seconds)
    (284/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.255808679 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.308026217 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.1004027 seconds)
  done (took 934.453667552 seconds)
done (took 935.681143462 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.362624739 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357336853 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.339701659 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.361138083 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.451991455 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.362569882 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.349257309 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.342473957 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386498004 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.388152131 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.338536989 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.361370126 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343137219 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.340857227 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.339955609 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358686418 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.390446454 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346881071 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.358117779 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.349192547 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.358928327 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.340617144 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.391144573 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.363534065 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.34353797 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.345865188 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.345425477 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361010154 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.453840947 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.34452506 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.3436765 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.352477184 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.386207672 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.345947055 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.33563089 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.362786437 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.35338087 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.351093648 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.345118243 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.374240561 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.770708876 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359371483 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.343795974 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.342874346 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.342314517 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.347826469 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343162624 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.350271772 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357616005 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35899276 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.752030557 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.374669368 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.346706772 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.343713513 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353612132 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343849642 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.34501469 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361862149 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.361499897 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361079692 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.351945059 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.347401374 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.344530068 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36197283 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.349804556 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.787293304 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355610536 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.349316104 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.767273604 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.365627586 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.787046015 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.368668527 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.345097325 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.358331632 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.376284163 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.367478388 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.339069891 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342517844 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353017348 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.343311115 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.35533089 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359603215 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350266543 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.34349779 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360347071 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.368032106 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.354043511 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.344961182 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353904652 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.365638365 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.352803292 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356919378 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.349325353 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.342069901 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356203546 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.34875113 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.349405962 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.348739621 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.350674035 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.356386365 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.76603757 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382313233 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.343751689 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.343502981 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.34474149 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.360229627 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.765260162 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.363928107 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.367398972 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.393377515 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.347299167 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.356148558 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.34886247 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366448588 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.356565343 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.350349823 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.342952055 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.360685366 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.754652978 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379859357 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.348997725 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.346208602 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365920493 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.346638833 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345454422 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.373932074 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.348215093 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362681839 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468534176 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.358062469 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.379041121 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.344739842 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.350777132 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369921934 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366094584 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.378710778 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.35050534 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364952788 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.365018926 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345464042 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.358971848 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.359138315 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.349349729 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.353177996 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344040326 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.372021633 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362956777 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362948662 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.369118399 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.468889312 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.345397128 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.36319734 seconds)
done (took 227.052633497 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405768342 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.337386587 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.424870489 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.344355119 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.442450765 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.443070946 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.339917478 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.340829023 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340960966 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.716945372 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341976281 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.342196799 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.343117273 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.340826895 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.425322774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345670886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.341349447 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.681998427 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.34364608 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412494368 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.34080326 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343388611 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.343546935 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.724876563 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.338677307 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.346143457 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.415294612 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.345127549 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.690055437 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.336702769 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.342015667 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.689450153 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434761007 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.363236488 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356021338 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.354396301 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.444099214 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363773744 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.424844606 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425752878 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.428337657 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.383110065 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.346755952 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343549179 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.347465017 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346141537 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.345063782 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373626578 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.340714984 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.345046982 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.684337982 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.355449204 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.345296467 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.345431871 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342751997 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.375464463 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345172348 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346770065 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.436680945 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348363093 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.40810772 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.726745943 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.721220571 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.345975491 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.341445821 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.345959181 seconds)
  done (took 149.149200759 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412317486 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.417872151 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.459327965 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371008676 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.399252352 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.464138749 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371812883 seconds)
  done (took 11.153371696 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.353429316 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349452651 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397862807 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397215171 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.348736595 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.493346164 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348354249 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.358433058 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.346960843 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.40198452 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349595957 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347612536 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354741971 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.346992841 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395333425 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35916689 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462013782 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.348689253 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.348530391 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.50069257 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347334615 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.356213291 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.400095331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.359695931 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.350855687 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.354514564 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.918901868 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348186927 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34617644 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.348229249 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34657672 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.385836984 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350289047 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.346029046 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348091445 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463423889 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.349829317 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347585564 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.349760896 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.346109559 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.348921549 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351466268 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.349918198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.347365159 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.350774991 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.371772842 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.349099264 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35060274 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.350561856 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349959035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.400211898 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35187001 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.348060976 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.34774221 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.40577616 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357565687 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.351958915 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348870467 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351344354 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348181495 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.502277473 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398132925 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.351329795 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397551986 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351646093 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351416996 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350365137 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.351840617 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403823141 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.352921395 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399091038 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.349996869 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.505915618 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374903216 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354061031 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.353905888 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.35472513 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351315189 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.351689118 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359045407 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349565507 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353468106 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357126113 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351602128 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350884289 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.455197125 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4591973 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.350911563 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.366527977 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360396313 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.351288502 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.406244715 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354685483 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.350786525 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405624433 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.466342742 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.406020513 seconds)
  done (took 154.827280512 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358381102 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.361702022 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.356410635 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.37066014 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355957955 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.352747154 seconds)
  done (took 9.419795365 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.356867995 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.356596002 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.355612217 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.354621837 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.354566447 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356453337 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35515874 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355757383 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359003847 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.354605815 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.354706133 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.355408045 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357392556 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.356108715 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.357184228 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.356398 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.355927429 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353019447 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357651559 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35531142 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451475878 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.355311896 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35631145 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.357586297 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.359984455 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.355661235 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364974049 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.357450075 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.356359473 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36120449 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374509197 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.357079004 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.35747511 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362838779 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.362184101 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.35771866 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360422987 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.357432871 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355453948 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357996364 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359265544 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356828215 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35832718 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35856258 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360140614 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.361212371 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.363013602 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367656818 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358911899 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.359202998 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.36009576 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358119622 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.358765442 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361008639 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.36033309 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379940745 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363862773 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.359376139 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.358571609 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.359896803 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360918975 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360032859 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361543758 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363843189 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367028834 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.360674261 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360610551 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362721209 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359168029 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360579256 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361194115 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358565879 seconds)
  done (took 100.224301893 seconds)
done (took 426.026182728 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.738096292 seconds)
  done (took 8.007407351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.465300038 seconds)
  done (took 7.735517953 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.80142759 seconds)
  done (took 22.07637276 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.357884855 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.414559544 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.362026723 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.363369941 seconds)
  done (took 26.766468456 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.583345836 seconds)
  done (took 7.851882244 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.358443139 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.365973869 seconds)
  done (took 13.994560376 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.96332044 seconds)
  done (took 8.231517109 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.063976966 seconds)
  done (took 8.339306797 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.380429528 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.371343402 seconds)
  done (took 14.288700895 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.344474206 seconds)
  done (took 7.614181945 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.425889505 seconds)
  done (took 8.695350284 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.360408506 seconds)
  done (took 7.629573951 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.416916595 seconds)
  done (took 7.685402439 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.327623714 seconds)
  done (took 9.597086226 seconds)
done (took 159.782090293 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.353133914 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.354580004 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.352900119 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.353046427 seconds)
  done (took 26.682518702 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394503521 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.395037502 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397675738 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40523754 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398985717 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.394582351 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388164196 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387389623 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405364503 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.398951982 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396852776 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.397335678 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.393847961 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388240298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.396484391 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396918946 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406831493 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397341393 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386927331 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399534971 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363030389 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40647538 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.398996182 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.362985012 seconds)
  done (took 34.727145698 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.883567577 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.433692357 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.515543143 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.413801823 seconds)
  done (took 7.51805393 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.414061662 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.415740071 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.426943913 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.465921057 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.490863947 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426645694 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390710486 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.384394163 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37056763 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.416074442 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.492001096 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.433033477 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.499861161 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.362717067 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549855437 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362393336 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.362806349 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.415334497 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.46760336 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.494885364 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364001421 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.415298832 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.418368626 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.432517305 seconds)
  done (took 35.543301148 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363539097 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.381697638 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.363375541 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362594783 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371001884 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.363477638 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363564765 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365321312 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.363075983 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.371208666 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362345874 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376942366 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.364326059 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.363810256 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.371170197 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.368550664 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.370657262 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.363796079 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364724119 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370936319 seconds)
  done (took 28.617935323 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.359366056 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.213565131 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.708676531 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612545216 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.357845926 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.363869605 seconds)
  done (took 27.888770322 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.434898551 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.586931439 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365324525 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.718335649 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.809826407 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.382664364 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.364992534 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.606868139 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.923097393 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.909117364 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427551251 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.432062771 seconds)
  done (took 20.235983851 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.368504781 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.364808076 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.376079564 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.382301116 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420300556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.384502622 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.373438078 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.36032247 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.427042339 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.440786361 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385877544 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.422198815 seconds)
  done (took 37.981679472 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448617829 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403921273 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.295278643 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454385846 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.079145846 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573265943 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.44681095 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.793202796 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.370152728 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634483662 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361187221 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469551372 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616739217 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366447588 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366125365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.339155453 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604872118 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847597661 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36255228 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.400674841 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390896954 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374319277 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.412265376 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.395644943 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575529168 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501744226 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.622999858 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141406386 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657255842 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381219942 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374028222 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362216914 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637165989 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039700628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483447961 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375246782 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36285419 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.926264837 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.350031755 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.309979364 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288165505 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369212603 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374293965 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363040183 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2971871 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365255302 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802631141 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.373581135 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.074891725 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364779529 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375940159 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458342353 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368165033 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939175237 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420831099 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.389187957 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.361671489 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457061387 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95326074 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.817157096 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372684284 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.32277042 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363768905 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.400158027 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007568041 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.487230862 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.368561475 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368563796 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298393442 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.389709928 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384776648 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511806395 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.388227121 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015534946 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086748134 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392106795 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316140819 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897698984 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367563612 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.307581671 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593665105 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141611668 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303648959 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.311203093 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299159362 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061939464 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379227301 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.747624693 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393711864 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.818231101 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382226179 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383946563 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390552353 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590237748 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.244550442 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365397681 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.303058623 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515560417 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388887286 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797977562 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306077396 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.37147403 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62208371 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.578281102 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37188796 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.346770398 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592798641 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382356604 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.383929761 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375103215 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382279177 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.956842508 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401444396 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813987186 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387326147 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.146484672 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107892207 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373314162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.488605655 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.367868901 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620962574 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.116667638 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271518207 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435395786 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37783039 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367924186 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.421794963 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.965684459 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.707628987 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.364395047 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378263411 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.384633988 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.368798231 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317601772 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.366198282 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37807197 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.146749703 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591203661 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381101681 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650848191 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302904681 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516219793 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37819248 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592522788 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.560742544 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.384965773 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630322967 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378940687 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382836335 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386906792 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387749918 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471238031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391984837 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.382684718 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632197505 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373764116 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374708164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.442550534 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152109386 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371025479 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.376332337 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3710997 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967362043 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368191913 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373399949 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25817273 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.385082272 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438909685 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376363408 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381143754 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.184401683 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401354167 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.375739129 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.373223281 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603354649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38040503 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.347101075 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455374064 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.569201376 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974584241 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406545352 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.305468347 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083566176 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.064942633 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372043448 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.552280299 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37230695 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382862217 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38271936 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371850932 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983951651 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3954005 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.347473364 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.380792808 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382730777 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.378908061 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373185996 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.167906063 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861345379 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382038065 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.39139765 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516233871 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.385925956 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306051091 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.88955846 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381117854 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372090689 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.150856863 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407068777 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.351669703 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855866775 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63405404 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376877245 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385997816 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.456157759 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.413117223 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.374001175 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335964594 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410722337 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.398481115 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381213131 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385478998 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.448190262 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.739710884 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94018618 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120512497 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950625164 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332154828 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.393186559 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.263246624 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.807947416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314472734 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.031719119 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563368693 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.83144723 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324877254 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576626394 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.576765895 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159982632 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391908663 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603688251 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310223265 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.356546842 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409994298 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587126005 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41252966 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.379590105 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312032284 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.655503001 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611841593 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366534522 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462172543 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810517087 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364440145 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175701782 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.379370945 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.702588947 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571736778 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.925250402 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.763563257 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378282582 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381293875 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855539586 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381236214 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90345697 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008649349 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413151688 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.581798661 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32146331 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.388735479 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389278648 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.375320702 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.688725845 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.37932447 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638284177 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389330171 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312173252 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391103565 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935825685 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.252092816 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382102491 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379023712 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113940472 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382515254 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692679674 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.392262943 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.164987511 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401704153 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314265669 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312014047 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.071028313 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388121692 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354250658 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885000149 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.402241895 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382642178 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389257988 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230752814 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633017434 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.392429638 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979184888 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625437114 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382386898 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419593897 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.479980668 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384456784 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.364917414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275503309 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615342928 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449616675 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603646326 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.343420929 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.284032626 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.420237875 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591885997 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277084141 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389408966 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6444603 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.111237957 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.391713775 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105669027 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430261639 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395122914 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397860485 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38504497 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399878028 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46967287 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391060934 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.391772909 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.392981802 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5533627 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397137985 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388685621 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.395629045 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475371364 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.873406206 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.170512256 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.164012855 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985063963 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153841291 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.004683081 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418714922 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381873096 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383737967 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31621018 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534598676 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909945387 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657102181 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512053647 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.387495387 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406909417 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391605412 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399181441 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600304394 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656730929 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.356764104 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38863924 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173636232 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.264380825 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394440221 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.595190132 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881934956 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942430468 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492432566 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38542238 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.820799897 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663274811 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.474635466 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382665491 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976584043 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.404718097 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.731522521 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.412979442 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398320601 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538830627 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394585668 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058971365 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.42051368 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.543601777 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.157941971 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.489528932 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644868809 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.841095205 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396304217 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990390277 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127784032 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652180889 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454902208 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395790922 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.489461564 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536161017 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.394850711 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.272894385 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386388637 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228489896 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.095996426 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396008278 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987195709 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669361108 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.383243247 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.39282127 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414354118 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394930516 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609739356 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086182903 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613677897 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396725805 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394726089 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.377328082 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987778448 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419411547 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3201087 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.390176479 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640155107 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644603605 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408479317 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.840224216 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.097549555 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931846696 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.357976708 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408695089 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400789342 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109361998 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993022374 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.203238615 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900794259 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048611778 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387430467 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66484513 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.391610117 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387375857 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669314885 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.391779535 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38683631 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424535214 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.992515342 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18321073 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.414212464 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.534846492 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.327284729 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.612141416 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428018463 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326080082 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389390374 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.565991706 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391694289 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519300347 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400056315 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.396010902 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400279355 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.148028713 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664194619 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.395907905 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.386351124 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.384924753 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401275609 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487331208 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626009029 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395269537 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.064575707 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740094242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644530529 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401590541 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.374823654 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.39231284 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389403825 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109036509 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399750717 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405180779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947567348 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.403688741 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.404669207 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395384528 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.60797826 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60300644 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395203169 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40142768 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405435925 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40964323 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.295026598 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.158602356 seconds)
  done (took 1662.17254754 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.416055901 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.436725571 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.428662558 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.443258571 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441624802 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.482999305 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.418364604 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492564831 seconds)
  done (took 52.864611022 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.398509528 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.554094428 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.426755931 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.398978805 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.40427556 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.400289555 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.861030785 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.412091444 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.416764465 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.400442674 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.397609094 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.394476498 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.064708832 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.405729516 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.400441379 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.385556092 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.399339881 seconds)
  done (took 66.431531028 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.390533508 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.013746157 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.494313763 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.397043 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.500956776 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.415854963 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.349188939 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.434099366 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.395421617 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.391415352 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.062865518 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.429752624 seconds)
  done (took 85.580446259 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409032192 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409185826 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.410247721 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.40949371 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411014832 seconds)
  done (took 8.354555847 seconds)
done (took 2095.867868213 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.4018817 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.101864381 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.052981409 seconds)
  done (took 5.460615121 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.542579683 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.591286533 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.713453643 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.716890617 seconds)
  done (took 7.872895614 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.676025761 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.768935199 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.583568767 seconds)
  done (took 6.337148368 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.681139 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.416146871 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.398716245 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.398940512 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.399236225 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.400497442 seconds)
  done (took 20.50810009 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402180277 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404160045 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400212426 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.403234377 seconds)
  done (took 6.919387553 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.378504253 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.105729481 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.378487802 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.397085147 seconds)
  done (took 18.569829358 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.147008779 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.159155201 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.14474506 seconds)
  done (took 7.761832354 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.427634099 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.425577537 seconds)
  done (took 4.163997707 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.700454037 seconds)
  done (took 3.009622201 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.415204499 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.452811584 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.435645289 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.34508429 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.835289738 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.805283585 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.045153078 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.632905654 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.327879091 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.633048498 seconds)
  done (took 31.237897436 seconds)
done (took 129.045375408 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.22249339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.644470304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.60092103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.197034133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.708211724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.599413167 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.608790259 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.159504272 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.702382285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.689679663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.196346895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.719187825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.764812041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.645375929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.765594621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399433016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.630186084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.270665219 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.881646693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.116745595 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.608798852 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.832683171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.029868839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.852757973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.631255454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.551814075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.427189546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.397891506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.049997962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.440355438 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.551200407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.28640405 seconds)
  done (took 194.494916687 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.404786906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.398345588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.417796214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.399213963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.417696384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.406113059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.399862889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.417064696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.400627852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424580178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.403875517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.398501947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.401151712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.400547369 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.414782635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.400082042 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.413179069 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404196635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40030692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.399837501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.419498844 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423192852 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410961287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400690842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.404980975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.415497133 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.407404677 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.413715075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413553833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401170381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.407242498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407691826 seconds)
  done (took 206.361897986 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.402389403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.400855125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418747969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.400724956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425738311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.403235425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.403243015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.406959521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414337002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411050824 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.402047968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.418929893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.414324583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.408831192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402161949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.418352875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.402431594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427163229 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.420196625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407567564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.404697234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402708472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402583113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418553862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.406536634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.405173621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409332694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40279539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.402526623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.403397456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.409705615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406591366 seconds)
  done (took 206.398572892 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.599015304 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.41097309 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.412706408 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.344828716 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.413411148 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411593131 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406450062 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.608276527 seconds)
  done (took 14.923168306 seconds)
done (took 623.488848907 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.708070223 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.421523139 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.614278022 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436259879 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.193392221 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.451737092 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433627245 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.601421173 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.334613142 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.613506207 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.672410116 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445657497 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.82273975 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.4341411 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.696318854 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.535603067 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.34803963 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.462404977 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.749438262 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.96237688 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.697540919 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.939595473 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.627552141 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.33754388 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.853731962 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.924887781 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.15985191 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.34517116 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452465546 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.755681016 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.092445894 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.441472784 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.499270998 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.498434366 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.555868078 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.532623538 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.385553108 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489634074 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.640790903 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.685179407 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.961828083 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.152112996 seconds)
  done (took 95.283103189 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.397320044 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.398626751 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.396242903 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.397735762 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.397846644 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.396720626 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.395863491 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.395750904 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.397923695 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.399183376 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.396985686 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.398277833 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.395749624 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.398518169 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.396682681 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.397179806 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.396857228 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.398928636 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.395931745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.39751656 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.398585805 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.396840609 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.397285222 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.39776969 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.397124433 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.396973047 seconds)
  done (took 37.649893286 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.415865265 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.669710597 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.83029346 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.421701181 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.41652622 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.420159383 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.495781354 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.421790085 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.419971004 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.419459102 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.572238745 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.422345231 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451882722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.861526888 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.421509882 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.418639581 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.418534027 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.417034299 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.678892285 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427028603 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.516557983 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.4246867 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496599912 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431191406 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.439782727 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418475921 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.422395155 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.987950537 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.436741839 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.572668027 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.222174434 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.499728868 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.969029738 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.865096726 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.222766145 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.425848632 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.420485491 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.577604563 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426053948 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.419808863 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.499247612 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.426592055 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.841586654 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.109638808 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.442046375 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.422359864 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.007011759 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.593853059 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.669555318 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.430847491 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.86429854 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422300162 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.421767677 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.421714946 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.666570409 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.430355733 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.419829721 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.033245628 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.443382903 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.497608636 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.430314203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.420108609 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.68335009 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424123448 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.673713829 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.423995768 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.429323728 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.440794592 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.844576294 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.423000041 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.128217053 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.443867248 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.424065636 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.577599826 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.676986738 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.041143644 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443882231 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.689829573 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.979893087 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.516181805 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.42854455 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.982510378 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.521720152 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.426723638 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426094392 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.426085699 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.422741506 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.473644525 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.499384747 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056890573 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.148234053 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.067624798 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.524993245 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438245272 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.425096557 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.03437271 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.44331759 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.424969784 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.842139358 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.130788783 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.441982968 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.432358773 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.134645913 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.446745021 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.504476581 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.428977828 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.859858989 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.429353186 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.47579365 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.425776227 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432302077 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.447937527 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.502527909 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.431727227 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.424208515 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.106430175 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.607752306 seconds)
  done (took 187.397411087 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.417580048 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.417566044 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.426074951 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.418605632 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.416576561 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.426370326 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.418558032 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.418233327 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425160691 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.418458982 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418276911 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.419389691 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.419771573 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.425870412 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449577693 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.425528903 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.028816814 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.419857872 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.432449776 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.417587801 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.214985739 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.423956873 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.42487294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.418704839 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.419303298 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.419168648 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.420361406 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.42191075 seconds)
  done (took 154.554315818 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.426281931 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.989174121 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444797742 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.558573867 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452958731 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.425438152 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.556634725 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.489182312 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.451768698 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.426119735 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.42526803 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.727053946 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429423692 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.942831512 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.618997828 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.581053118 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.956610474 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.44693476 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425958206 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.425649921 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.561453416 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.436821624 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.734152407 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.994200193 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.447018071 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.002355363 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.415412785 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.42958783 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.426708196 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.005494563 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.446721538 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.740186023 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.510341218 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.492627765 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027802076 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.975825683 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.976013244 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.582100516 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432309611 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.428279725 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.42806572 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.412893406 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992628527 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446703775 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.429561139 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.982945826 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.448353323 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.43074256 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435155448 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.427971412 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.487299731 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510113157 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.756000346 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.000283352 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.522482068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.444694485 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.56257215 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.800333567 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.431930441 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.954984594 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.41690264 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.014659264 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.453728455 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414123701 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.430995081 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435540931 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.579682054 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.568631188 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.958867229 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.448682807 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.957378482 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.60517446 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433480148 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.430287809 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.433253717 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014095774 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.9808512 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.6041697 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.570474866 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.631179532 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421292553 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.428805372 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.417778192 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.508755077 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433885528 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.013725493 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.966791968 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450615012 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434206425 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432710467 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.432631476 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.609392054 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.035751367 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.529298438 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.940371188 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.76157041 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.749653179 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.437631404 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.491022843 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.451952917 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.746647071 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.439159046 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.491105516 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.8627372 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.746972534 seconds)
  done (took 170.121640434 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.682950293 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.686514685 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.525829323 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.582005806 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.052499737 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.002342335 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.725813937 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.578463043 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.547573981 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.698789997 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.610220469 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.526021937 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.647783252 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528052131 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.177262962 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.520064204 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547247582 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.586557525 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.597409633 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.476192322 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.125060645 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.725104926 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.63512112 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.38047767 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.531777533 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.203638342 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.008975536 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.982819294 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.621017692 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.83223796 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.971535894 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.583412498 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.4226719 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.138786828 seconds)
  done (took 68.798842621 seconds)
done (took 715.12208709 seconds)
SAVING RESULT...
DONE!
