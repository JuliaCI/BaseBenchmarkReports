cset: moving following pidspec: 11590
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353221576 seconds)
loading group "string"... done (took 0.486321308 seconds)
loading group "linalg"... done (took 7.869389093 seconds)
loading group "parallel"... done (took 0.177144088 seconds)
loading group "find"... done (took 1.195757232 seconds)
loading group "tuple"... done (took 2.177927727 seconds)
loading group "dates"... done (took 1.365244468 seconds)
loading group "micro"... done (took 0.252764198 seconds)
loading group "io"... done (took 0.690720985 seconds)
loading group "scalar"... done (took 41.745708942 seconds)
loading group "sparse"... done (took 12.815379984 seconds)
loading group "broadcast"... done (took 1.195228237 seconds)
loading group "union"... done (took 14.198844786 seconds)
loading group "simd"... done (took 4.886810163 seconds)
loading group "random"... done (took 9.847746009 seconds)
loading group "problem"... done (took 2.022475381 seconds)
loading group "array"... done (took 22.82124377 seconds)
loading group "misc"... done (took 1.465296962 seconds)
loading group "sort"... done (took 3.653178382 seconds)
loading group "collection"... done (took 19.751388641 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539925541 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123122631 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146458883 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.152979396 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200742338 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139625256 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15788471 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093553671 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.961797887 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18671634 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142138127 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.490498712 seconds)
done (took 5.075052306 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.266910818 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081804838 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094324347 seconds)
  done (took 0.868122004 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.089480861 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143836304 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09078385 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074584588 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090021573 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074862373 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073644544 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090073898 seconds)
  done (took 1.319199841 seconds)
done (took 3.237374458 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730751428 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.289324327 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20279253 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50672102 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176594509 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209645156 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.743556093 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.362289787 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.246418391 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101635151 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130097358 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396696676 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114748293 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.729683965 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086642275 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123782904 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175486215 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.465406479 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090829652 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091168184 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113950657 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152778573 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111366853 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084233624 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.178989259 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.077746037 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186025651 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105824307 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075857239 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.284462318 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199349271 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.751396986 seconds)
  done (took 11.014551537 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114439753 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136316606 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094372347 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137098325 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136266334 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079267514 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099452118 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076962823 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122770192 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178326883 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130664578 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139881885 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07477056 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078229533 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115806 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244306044 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103581308 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119042811 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096220881 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087897592 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.134186503 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093745074 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106597319 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088909918 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166513793 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216623532 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110114247 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124329048 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094164491 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093708138 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140638447 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155940972 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075488185 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09244677 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175395212 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105597488 seconds)
  done (took 5.040721968 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188444677 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100636305 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18598034 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.142353178 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140713956 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166954383 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094975328 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260315591 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.128324295 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177979835 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125446046 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112874529 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076595977 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09872363 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075772078 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.741830458 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166483469 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114960827 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117861359 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098894443 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086123989 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.732085739 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082701886 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091544376 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079748394 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086258949 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156818994 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080123249 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.207197662 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099535334 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098034383 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114059947 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205706673 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126919322 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107996134 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1354481 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09613399 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074999424 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176914354 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08196703 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095073372 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103832822 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133302266 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13540362 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091088451 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078098766 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.211520826 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091379319 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091735166 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.020547422 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17931495 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091431486 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075442912 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.339833034 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114413507 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076030798 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09328271 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291474774 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112855886 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097399616 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077413065 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096884122 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079266714 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.744980282 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093185921 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.349417806 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078592399 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085789435 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095436069 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093573536 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084705922 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100237342 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10545922 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112659035 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.074163497 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094613709 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078629591 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075773007 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094722623 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076720573 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113792902 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099122478 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077544824 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157650175 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076236323 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097036708 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125864738 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097155399 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076701414 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127137178 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079427452 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.093316177 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132973727 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078492933 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113069793 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074764872 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094193395 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138112021 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077518987 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192609448 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079076089 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124693309 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08207863 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126074092 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106512069 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078697388 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099974363 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074923977 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.092166847 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145051293 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090992169 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077476257 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094479611 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089370072 seconds)
  done (took 23.783470887 seconds)
done (took 40.520862878 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.351150113 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106022947 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107351275 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10684383 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105143776 seconds)
  done (took 1.530782061 seconds)
done (took 2.260614311 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.275389107 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172335203 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073270482 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18774053 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073451065 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176626081 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159606771 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10960555 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.184983168 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091416112 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163781942 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07317612 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091241799 seconds)
  done (took 2.588190973 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093331161 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113336822 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079537586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090924738 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09088911 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090658007 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109328043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097084763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108196616 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081128618 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091273259 seconds)
  done (took 1.774006531 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09202852 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11245257 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081015481 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091944833 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092429058 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091423104 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109700175 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098702678 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111082077 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083772435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092776157 seconds)
  done (took 1.785380068 seconds)
done (took 6.869311599 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092402895 seconds)
  done (took 0.816095275 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.032806708 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.339414662 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117223816 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165115778 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330695272 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213494083 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607992216 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134867917 seconds)
  done (took 15.867877728 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111426145 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096893676 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094638187 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098681686 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080858548 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09647992 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078889605 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095931525 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078443407 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098020454 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08111908 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096530176 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077183907 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096533533 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080911074 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077737872 seconds)
  done (took 2.228503317 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115006026 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114286099 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10259673 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086600093 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100481609 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081967158 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101545482 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100339034 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08190156 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099101051 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086705701 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102363553 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084494899 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097904438 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084049734 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103566049 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081396954 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101191256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085476817 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101504213 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103180553 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.081845579 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10144707 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.085246576 seconds)
  done (took 3.12061158 seconds)
done (took 22.762846316 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150517557 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082141088 seconds)
  done (took 0.964491543 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098431234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116391965 seconds)
  done (took 0.954118494 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103913948 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095614394 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132516606 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095461588 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096145364 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07865754 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127363177 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096831303 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078553057 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096393098 seconds)
  done (took 1.741173308 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083004625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099563396 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086899107 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116637456 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089481836 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097891924 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084270512 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099439591 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085231462 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094214845 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088575586 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111423274 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102975909 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097197044 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100366389 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101304474 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08900053 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10052029 seconds)
  done (took 2.46663909 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079499635 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080655844 seconds)
  done (took 0.902190957 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081306 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093940212 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081092194 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097763371 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077433009 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094070994 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077377346 seconds)
  done (took 1.347074204 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492793796 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140585188 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.270384484 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08232248 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119604694 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.314107655 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.094838667 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082192651 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100453501 seconds)
  done (took 2.499359906 seconds)
done (took 11.614247092 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089352217 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115627049 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110825403 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469320661 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.114788833 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076314296 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.157663461 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.259516492 seconds)
done (took 2.138809078 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145490569 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341579333 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12153404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086395312 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07952728 seconds)
  done (took 1.375785122 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076865287 seconds)
    (2/2) benchmarking "read"...
    done (took 0.079969542 seconds)
  done (took 0.907176447 seconds)
done (took 3.177211786 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07712738 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07682461 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109338452 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.092501443 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076954674 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073844799 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093532243 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076922092 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094912258 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076980132 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.076953208 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.093607834 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.074309922 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.09414945 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076802337 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091158534 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075023251 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076327401 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091283623 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074372702 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091138341 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077086683 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075283115 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091091118 seconds)
  done (took 2.807213185 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106602153 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094643163 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082790904 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100723873 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081618063 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.1007936 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08256537 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094196499 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082388324 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096197153 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09817802 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081796332 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095837151 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082075878 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097094975 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081757378 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099979313 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077580261 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097417209 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081278721 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101056288 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077781649 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098611001 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08258543 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098498975 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081534464 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096884315 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078110248 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09934574 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097836187 seconds)
  done (took 3.480956771 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082246198 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074910387 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092988844 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081040538 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092307545 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079258616 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091537458 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075223206 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075310956 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091782847 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076615656 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09262932 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07484023 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093603657 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076478449 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078145034 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106323635 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075676598 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091730431 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.075274415 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095815903 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.074605442 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07726004 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091913493 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.074710577 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091998505 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07522597 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091995614 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075775918 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075117277 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094465107 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.077506085 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092502728 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080838615 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095745641 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07469863 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.191631908 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09172714 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.074922661 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091500427 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074906122 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07459921 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091589385 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081431352 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095848511 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076802586 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093171197 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077010955 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075537082 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094964607 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074136172 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091713241 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076499934 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093537484 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078653094 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091977191 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.075384668 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074775569 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092826253 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.074653148 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09278916 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074981108 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094505469 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.075752868 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091782051 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099149356 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074229672 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094333599 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079825877 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095062545 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.076951406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107024417 seconds)
  done (took 6.937703457 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079886616 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103302594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07798524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076913104 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090749442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07522811 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095836494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075217386 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094829188 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094557225 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093093808 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077355856 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09488136 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078818406 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093500381 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077944951 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10380228 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073988168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09519988 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078751008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09417468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078881895 seconds)
  done (took 2.662040343 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211652458 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102987383 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139334844 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093118823 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114654041 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110645778 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0822561 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102012534 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082316256 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104028029 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087483488 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102124694 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115267764 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086949631 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106493765 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088829833 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103030197 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106651865 seconds)
  done (took 2.701405758 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091965911 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096497373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100820132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096868719 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078581017 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098938149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084906887 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112701023 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082643232 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098870922 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090866477 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101295349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082864231 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098563426 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083387161 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098589661 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.083397043 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097083098 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089414463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101900467 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102433996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088760242 seconds)
  done (took 2.822101061 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094739654 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098238588 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098728248 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0996846 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076598773 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097273544 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085377252 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095655449 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087291592 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098251331 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078575356 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099583351 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087306931 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098813289 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.086088706 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099182499 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08237734 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099671022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08281498 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097530831 seconds)
  done (took 2.608827608 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118494391 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110869402 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092769689 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121108943 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092690957 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110659456 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121595424 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093114773 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111840643 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106501383 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111487359 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110527062 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104955248 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118142221 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093864662 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121996751 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122838024 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103978559 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111323983 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09312623 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124513195 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110510258 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103581411 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111208842 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09349116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113191133 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095136248 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118612466 seconds)
  done (took 3.805732117 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077874942 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077679227 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093718756 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075089105 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094498156 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075021577 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075977748 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094360656 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077797429 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093837909 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078076575 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09727151 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079595385 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079588141 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099018489 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079839887 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098457785 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07774212 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080380668 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096010414 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079755745 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099124697 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08000594 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096439778 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07757197 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081117759 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096168758 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077559558 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098587318 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077373514 seconds)
  done (took 3.33454306 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088302676 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104803901 seconds)
  done (took 0.964329787 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075937159 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112751096 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075242984 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081957068 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101792554 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078860017 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105258882 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102378166 seconds)
  done (took 1.502584425 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096580348 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115679379 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083241442 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108346186 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096715243 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117255316 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160185448 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085138654 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085355874 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095433685 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095157459 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095963246 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084547177 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097638261 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084220896 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103987184 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080556941 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107718419 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085549574 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099263724 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084594227 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108317733 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080562928 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094107967 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080964955 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108177621 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088740644 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098839853 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082153948 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10674899 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084650392 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.072601112 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101255547 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084238051 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097554212 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096190028 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110301404 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082295631 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.105696972 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084574581 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106416312 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077584892 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102765451 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084950449 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107881184 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084673313 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103000887 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077093683 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094470627 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081491794 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09588337 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078910626 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07351536 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104792929 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083307918 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111203258 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081366007 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098248373 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08169361 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099717285 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088767746 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101347061 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084148891 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.104854636 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089026526 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104685112 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089270648 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098434815 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.074661595 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082619578 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109518261 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124177759 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090509545 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106047985 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086998385 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.10111913 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084771912 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10713241 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089972011 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10961334 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085837069 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107657401 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089292701 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099906353 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084215015 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088503009 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103765366 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084411578 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097820615 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097364499 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103381417 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082397068 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097824702 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091173287 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104010976 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084805972 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097783291 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090293563 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075888711 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105452496 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087744685 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101133974 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091315436 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106681794 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087550283 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108720353 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091966255 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100893555 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084552555 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097116011 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087353967 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103772344 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089074671 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09409992 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083940171 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08241375 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10335943 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106301001 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082917823 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086470378 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108972059 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089101695 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103407378 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078202263 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104441261 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085901751 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110547307 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08915921 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104240146 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079911766 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099573251 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086619722 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105616677 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086895448 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107239451 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085086892 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075480125 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102620175 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086940911 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10966356 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081839512 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101745261 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086921304 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102219103 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084977033 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107380009 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083701179 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100111107 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087023028 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103544394 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080831686 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110000978 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084781076 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084203497 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104425515 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091158817 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103692028 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086911514 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104518218 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087221658 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107006596 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080830716 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100759704 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084628647 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112105825 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0841299 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080565427 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096992503 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088384949 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097602537 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085138283 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099544875 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083810459 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103880481 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080772585 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102179623 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0801222 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113805545 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092695891 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103747862 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085393148 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108294623 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08293508 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099827475 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083294606 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086072283 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103511669 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086880113 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103955545 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085229993 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100698526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076424197 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104219755 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087210497 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097167602 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0806048 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096860658 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083723741 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107086422 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083732991 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103303088 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082133462 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079819328 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108388064 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083793947 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104703053 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.079583148 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105428359 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080298076 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105862184 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086482994 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112766441 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086872973 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099689622 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091081555 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103882397 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088885771 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100751528 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080120512 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081119662 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108000049 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085174402 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104940423 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077102377 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110706408 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091494446 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101666547 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08254067 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106620332 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09196471 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10345427 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085695071 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086915115 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108280037 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116197462 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081154263 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08583259 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111055336 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083838886 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092837211 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08644522 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101506786 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080580459 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104527159 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084445848 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105919596 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090095713 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106877971 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07630551 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104453668 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084967017 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080955179 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100997322 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089557536 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105807668 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084424708 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111802176 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088611743 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10775686 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086775603 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106162414 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088078644 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108644759 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086037179 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108147755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085191123 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101617581 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084933512 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08128455 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.10337693 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08403465 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106764548 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082594063 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108227109 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086168538 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102521096 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08815271 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107679162 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083558775 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102982254 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081901722 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086580838 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104675114 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08235152 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10470761 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080731532 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110705593 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086974637 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111770115 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08318174 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099145017 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087408658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105375412 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089136439 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088303169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108720239 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085467955 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106426508 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086308744 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112421494 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080313498 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112280285 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089719456 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103581781 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085914879 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102420447 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084983462 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101355301 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085524325 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108374867 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082769458 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086967717 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10775431 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085777652 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102891011 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084913517 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108430695 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082974498 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109270049 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077501893 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101552475 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082752939 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087720849 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110553011 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087828462 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106018847 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084983027 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108589898 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086308753 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099714332 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091256689 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110575397 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088409299 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112031262 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082648431 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104066677 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093450468 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097294603 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084510636 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08399596 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100768951 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091447704 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108047456 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100979381 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103231261 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083140079 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100060611 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088834864 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105714508 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076814889 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084334297 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105704763 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085196866 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105829813 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087654574 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106102773 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089462467 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110957131 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086060502 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105243884 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088168455 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10027473 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081860863 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082057553 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106491564 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088297269 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100293203 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080071923 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107791887 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085119843 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103837601 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08756596 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084239803 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110455434 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087117405 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106274576 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092670737 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09765491 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08635774 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.107026391 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08722587 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10316108 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0880728 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106610036 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08880741 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111117393 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087346846 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103745049 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087837244 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104336232 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087047973 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085639267 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107234771 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081270541 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107125255 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089202142 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101480646 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082544041 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100017384 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080566829 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104598689 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085808215 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.101694445 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089138423 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102703681 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082214293 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087738291 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104203385 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083829511 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105952217 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082095148 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106547282 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079685692 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108703112 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.080453811 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105896021 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081861577 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.096716257 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085101372 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103325205 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084487975 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.085186593 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104964829 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079944294 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099248813 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082043124 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10397092 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092596597 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110194 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085974948 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104645295 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.08118982 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099761433 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090457138 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081312029 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106050047 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08587429 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110680344 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086551431 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104234373 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08608769 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112185154 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090040938 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106272116 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078251109 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105174777 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085637639 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102648473 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082123841 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100317796 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086256429 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.1070831 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083762469 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080114547 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110270935 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087139202 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106611083 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08346483 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100367044 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080505689 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098803058 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087148371 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102263655 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089382881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10544981 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088483906 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113379109 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083622104 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10365549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093011442 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107264664 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091404185 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081720182 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105650123 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089501147 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110451567 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082128966 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103416509 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081672732 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107333189 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083742737 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102221473 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095267806 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111985495 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08621525 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106672281 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087320265 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082489674 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102896912 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083078976 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10999398 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085893276 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114919309 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083643775 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103379656 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082321961 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108469419 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087982803 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087501683 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102207274 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080539508 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101702937 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086532934 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110122633 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086049161 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105515302 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085459739 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102625932 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081886652 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108919681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077955834 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.085506741 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111701904 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085943098 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101143471 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086774604 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110159291 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086250151 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098905302 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085701087 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103111173 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08162212 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105988349 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08687856 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115719162 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083958694 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10016484 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084354646 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103049116 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080814332 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108003124 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088006561 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105785708 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086360264 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102003944 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087194258 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083336748 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106935952 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08310611 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103183361 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083346334 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101040969 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08287087 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099917918 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086868651 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106151241 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085877237 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107378335 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080180728 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111091757 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.08982559 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105319371 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077922127 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080156611 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100555262 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080810593 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10654789 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079118284 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103288095 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083551965 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083801321 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101584788 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086611319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102573374 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086434612 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10415335 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075362946 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102384982 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083642925 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10147271 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077776592 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08592387 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107236082 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086851386 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109467124 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081092874 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104730724 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082166468 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101615415 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079427506 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107641607 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083375485 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103892949 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080657447 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085143251 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107040551 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084733007 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106518739 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087283482 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103286761 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090915806 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107702969 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07917502 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098062924 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.087287616 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102762624 seconds)
  done (took 57.041644925 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148027761 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086619037 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076324945 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095983589 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121822643 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081524256 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09643305 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081166299 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1002143 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090250629 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095850295 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076483306 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116899987 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125429676 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121301469 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091165239 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095719615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081430081 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096295682 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081607266 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11754863 seconds)
  done (took 2.898169078 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103435086 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115458945 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112932769 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098418539 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108068094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114364585 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092516107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114617134 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11929434 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088817602 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117764932 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115076723 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089183782 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108495695 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08907082 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11124834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117680219 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08680614 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114983275 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113245259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091219216 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113241907 seconds)
  done (took 3.155279964 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089325101 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.083698559 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106056445 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075782611 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104823475 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075632412 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109821713 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078728506 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109421198 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.079875653 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.079076295 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.099458611 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084858525 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.096304097 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.080761783 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.099205259 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151984625 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089334405 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106219092 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086311955 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099058967 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.082845156 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.078346601 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.099693699 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.079947266 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114260128 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0861815 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.105223358 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084524383 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.100103679 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08506527 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.078510084 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.101736649 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.081653321 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.099571467 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080016323 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105194824 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085081202 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077721667 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102029155 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.082054162 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099953969 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085721374 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103023267 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081641872 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.098827061 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082240226 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084101497 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096603219 seconds)
  done (took 5.349086341 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114593974 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133283745 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104869217 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145829902 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119574168 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094004209 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107049141 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144258917 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079330952 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104817754 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.100905802 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119044022 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106542132 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090933741 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105508393 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084287699 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106860174 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080349471 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109882437 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081198096 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111218339 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107531756 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099155663 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116054392 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110032407 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083357095 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101737896 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.089818622 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116428329 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110474181 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091134541 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111885906 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11882662 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083615255 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10065755 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087615513 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12070554 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085976024 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108130576 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.07925253 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108320556 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089633293 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108772342 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122039396 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084828269 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107611296 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084525959 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098760934 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117457266 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088113324 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114579963 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118795597 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090698019 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105637417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091556708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12077815 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085122186 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104258505 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088026461 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116760291 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099141683 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089208218 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117900093 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086541286 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11408797 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118785281 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.086649276 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110358113 seconds)
  done (took 8.00105532 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114990628 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110451314 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099833719 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121375895 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110268103 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089647182 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109953347 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089540842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110303935 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116701445 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09073474 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.15736019 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107260207 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095477091 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11020332 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090332314 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110271725 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089751847 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110740322 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088825481 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110906524 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121583127 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090263275 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120294905 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122891696 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087673476 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110196091 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089131586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121210505 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109650677 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12289748 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090683878 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11021783 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099442346 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122962992 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110321736 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084097647 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11142187 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089971848 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110119537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086930384 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120113074 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109681434 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087055067 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111498145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09100278 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122225481 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123694529 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094456552 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117155529 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11037602 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100037963 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11055285 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110945592 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100298528 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12805399 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121591501 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120247088 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090657155 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120761411 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121606837 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.10735665 seconds)
  done (took 7.498889247 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11333292 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117793199 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123553924 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07661115 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10066424 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089469345 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100219924 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07982815 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116744382 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096186039 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118784297 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110070195 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093044412 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119033125 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110293266 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092912398 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110487381 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110103149 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095169057 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110167782 seconds)
  done (took 2.922134538 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091131107 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122524774 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082557012 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110292047 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085074697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110112556 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.083936781 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105935285 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082405747 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105292578 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093973871 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116252152 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102649237 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090359032 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114877606 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088993446 seconds)
  done (took 2.422445777 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09441837 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123935392 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122586134 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082411857 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.100641744 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.078971638 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084097687 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099351679 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077792794 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119035441 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082066532 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109901226 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084137258 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101693782 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.078821603 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108709519 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077606126 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.101332753 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084904565 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122179686 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.092500189 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104212427 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08498188 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105699029 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102512165 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088194268 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.103190398 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079580518 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101342502 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.084949983 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103366336 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090268089 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098748186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.081027784 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100490708 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.079646601 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.083825683 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106476123 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109412487 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08500745 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07972904 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102577996 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084220157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104160491 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077685275 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106866697 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.078080206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10915514 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080322939 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103143952 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084911174 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105255048 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.083438749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115078932 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.086451311 seconds)
  done (took 6.062120735 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09723828 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107159959 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07767363 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079868049 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1066568 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083317081 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107722113 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085445399 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105423616 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079459449 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10478325 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086387868 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105124476 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085583596 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105232514 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086037763 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09791131 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083921029 seconds)
  done (took 2.529977768 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088126865 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081436246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111938385 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081680829 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103806879 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084513932 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099110912 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.080949877 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101756054 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082587855 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103204772 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.085538161 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1009379 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085215082 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081607006 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104104595 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084712248 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101133675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081720627 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099324661 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085041809 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101443244 seconds)
  done (took 2.875835869 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119518688 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123733323 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090135214 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.21279293 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.12422374 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.107791681 seconds)
  done (took 1.622383238 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106978689 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13982862 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082702595 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106737296 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09424068 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108349214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086141556 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10803842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119931529 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121065228 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087696826 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11991965 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097971858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119341001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115950323 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093991529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10808024 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108029988 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084129079 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127677055 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087139574 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120059196 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108027901 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086829762 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108772346 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097093383 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119579241 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122186645 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086325084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120253402 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115944365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087003569 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120402811 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122033494 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085279929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119842042 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107497984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107155854 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117659352 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118649066 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084869075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115377502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098959515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115359617 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120044606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088081067 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114794159 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107686309 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087472934 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136085869 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116467008 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09840836 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116360675 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119704593 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098783836 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135224434 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122173613 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118458487 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115301869 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10044358 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118761771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116288071 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098092518 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122120476 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115473311 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119512111 seconds)
  done (took 8.046326835 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12155133 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105911091 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086992961 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121647275 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118518854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087349793 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109077926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107888331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087777633 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105719658 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15375526 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087389998 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118883726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118321217 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087258357 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108983055 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0870042 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119252228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083926475 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135680727 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107863382 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119186089 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097722779 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118580557 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121494786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11538147 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088010571 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107700669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087443053 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108812541 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09440417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10890504 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119155893 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083772791 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11905972 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087560781 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109078212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114469154 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087482412 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116854874 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117977146 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108018402 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108948174 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087230921 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122442099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109500026 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086504488 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105774915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08697321 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105706576 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122005265 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10164243 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12155796 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119263241 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108808912 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08765973 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109249393 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087708693 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108657155 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095161234 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118740662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108955088 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135921723 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088092432 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108667894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097597606 seconds)
  done (took 7.876633155 seconds)
done (took 152.679791384 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098969533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137939488 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096501853 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166451854 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083106749 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143450792 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115667448 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119082105 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083141511 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.082543734 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104505374 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08532736 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169461526 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082680106 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104619641 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085414042 seconds)
  done (took 2.609307468 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181222918 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.295975939 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100736319 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103588103 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087472526 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104825017 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081092975 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089697316 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.106671778 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.082363272 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103853976 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083530513 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10328988 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083519695 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.105478371 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08362609 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.082423992 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.104821846 seconds)
  done (took 2.846328997 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111988778 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152598624 seconds)
  done (took 1.122573005 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118487716 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176112126 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273748196 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153850663 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.135413848 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097895155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15516694 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125414637 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205302486 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128528223 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126797435 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090522083 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13836429 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092956037 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113509839 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088978885 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140356608 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112178258 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09155301 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113135504 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116446509 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104666619 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09399579 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11151351 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188306192 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127007141 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.082609038 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.081533068 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112841206 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113176863 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.089798887 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118404376 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103854915 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.170175441 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095749865 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.150010897 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.112192367 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089517286 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113308306 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088545047 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115695621 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114301832 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.098349148 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.111123603 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.082730963 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.111091339 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085229604 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081427384 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112867129 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.090427254 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112358178 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.110553192 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148865943 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091834163 seconds)
  done (took 7.265719477 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.824116973 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150966905 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088136713 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.920496687 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137114575 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100647427 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.812716061 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135545109 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237187302 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.803173073 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128598851 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120191895 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206706545 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.251775541 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934326794 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31271313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694719883 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123863877 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.37196485 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148615066 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093641041 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135476195 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128334137 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.403401416 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.111438931 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087072335 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114791718 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118085935 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15859088 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087703172 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111619398 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174647646 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243236473 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202105745 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088451579 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108166444 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086796663 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16396369 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271875828 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215378629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.151485586 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105935198 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08612418 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11965263 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128248556 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084924092 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159733292 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169000786 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190107851 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091046477 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117686363 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095002852 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118522547 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159357425 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084889315 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316056092 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316007151 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108466368 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095471984 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124616705 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245744833 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108868907 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222124785 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113129383 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211768144 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08634271 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832239565 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162569378 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108464306 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094161876 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11555839 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091739121 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119969832 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162839999 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386400839 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099487812 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11278669 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086112933 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225083367 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087807963 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108287821 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161543408 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088864055 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116508943 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100251973 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120050036 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167113421 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.225954778 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120818893 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116632377 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090698159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121032735 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088898429 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213029667 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216834501 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156210137 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213108614 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120006761 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15960282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160552892 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118645166 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166261591 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116178824 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100658585 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120217296 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216766798 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.139214395 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088623984 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111854108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09399096 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142750015 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089714682 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116512845 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165326672 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478595519 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161440034 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084047954 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113029072 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096212344 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15905875 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115310734 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240714476 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118691121 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163752168 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11595194 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083841037 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116927387 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160708219 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119865393 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09547487 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120402539 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094477701 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.249847095 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196910625 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121284906 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218065419 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178100271 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116399374 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169069978 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117459378 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16573002 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096005175 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118753424 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088358735 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816352985 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12050236 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094335808 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113981943 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182039397 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087647145 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08728661 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109419906 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084192676 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823366604 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08886367 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107589548 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08796349 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115599325 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093630739 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116224832 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090885069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180925702 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206665382 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120516146 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115098511 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087441883 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158755224 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111487287 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08781893 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10916408 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088426573 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117736983 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09058168 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109930392 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168946956 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155671043 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220796724 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573389804 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109349251 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088474873 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227640527 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087151847 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288696993 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11695488 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201602144 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184294094 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084841521 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316363074 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164792773 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.182429492 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090071751 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167526403 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107054803 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092774257 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180152329 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087699585 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115238015 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156158824 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100458976 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122043836 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959268837 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087631733 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227596463 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106526025 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165636134 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.08831737 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119522539 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292875064 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087810531 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126233372 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159915722 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112833414 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088905267 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.707156463 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110632643 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096117125 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116702682 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222226307 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162629085 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116216557 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094542062 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118608425 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159385755 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210556788 seconds)
  done (took 43.038053731 seconds)
done (took 57.740002495 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284750587 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215494134 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268703294 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167709237 seconds)
  done (took 1.900499473 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179404332 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122843118 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.144999634 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104511492 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.129633517 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.105174791 seconds)
  done (took 1.671918095 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.375274311 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279855056 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244312932 seconds)
  done (took 1.792077456 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248977405 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.268164719 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327325284 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.401168731 seconds)
  done (took 2.232240852 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206036471 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.124460063 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.098174067 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.138336672 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.144224405 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210033993 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141441179 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153429225 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106601579 seconds)
  done (took 2.257940054 seconds)
done (took 10.748150999 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.250498151 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.259065828 seconds)
    (3/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.164446811 seconds)
    (4/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093848755 seconds)
    (5/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.237284756 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.183448201 seconds)
    (7/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.133174628 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103008253 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.191682157 seconds)
    (10/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118604008 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09720272 seconds)
    (12/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.226931356 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114272381 seconds)
    (14/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091132612 seconds)
    (15/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.126332731 seconds)
    (16/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.23216077 seconds)
    (17/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.212455463 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.198370081 seconds)
    (19/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.160458082 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137458233 seconds)
    (21/286) benchmarking ("sort", Float32, false)...
    done (took 0.179865581 seconds)
    (22/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15277179 seconds)
    (23/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.22519826 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134656052 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.233494809 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.233495897 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093717411 seconds)
    (28/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.097452089 seconds)
    (29/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.152324949 seconds)
    (30/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119934665 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100022096 seconds)
    (32/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.191517382 seconds)
    (33/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121136694 seconds)
    (34/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163359885 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.222208923 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.223096134 seconds)
    (37/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.128204462 seconds)
    (38/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139741789 seconds)
    (39/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.242043501 seconds)
    (40/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.253383679 seconds)
    (41/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.249265342 seconds)
    (42/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093047523 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.089931552 seconds)
    (44/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11442999 seconds)
    (45/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.166238366 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.107431936 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134886183 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090579068 seconds)
    (49/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.159540889 seconds)
    (50/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.229275012 seconds)
    (51/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.22940282 seconds)
    (52/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095563802 seconds)
    (53/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.1758603 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09307875 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106548383 seconds)
    (56/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.153257374 seconds)
    (57/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16402982 seconds)
    (58/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.209245822 seconds)
    (59/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.172946217 seconds)
    (60/286) benchmarking ("sort", BigInt, false)...
    done (took 0.227994341 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.212445356 seconds)
    (62/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098564878 seconds)
    (63/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12043454 seconds)
    (64/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.189084019 seconds)
    (65/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092244428 seconds)
    (66/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082155258 seconds)
    (67/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120521117 seconds)
    (68/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079959022 seconds)
    (69/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.178696048 seconds)
    (70/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182297822 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.19823166 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098831462 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.106972537 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089100716 seconds)
    (75/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.070328029 seconds)
    (76/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.107330907 seconds)
    (77/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092112705 seconds)
    (78/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13387459 seconds)
    (79/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084296831 seconds)
    (80/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.112536402 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.13237544 seconds)
    (82/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.150749406 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.135343317 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110007045 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106316897 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15197308 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106317936 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.13516738 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109652042 seconds)
    (90/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.161041027 seconds)
    (91/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098592186 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.097248638 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.161583409 seconds)
    (94/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.112302393 seconds)
    (95/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098739406 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106751307 seconds)
    (97/286) benchmarking ("sort", Float64, false)...
    done (took 0.153294189 seconds)
    (98/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.097695542 seconds)
    (99/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.182491662 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091961128 seconds)
    (101/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.178637238 seconds)
    (102/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070836504 seconds)
    (103/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095931246 seconds)
    (104/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072655432 seconds)
    (105/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091157527 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127038729 seconds)
    (107/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099368273 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.109125838 seconds)
    (109/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071545499 seconds)
    (110/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.120249377 seconds)
    (111/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073490499 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138249656 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.189318765 seconds)
    (114/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070885223 seconds)
    (115/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.085250791 seconds)
    (116/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128779769 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.197188061 seconds)
    (118/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.085673889 seconds)
    (119/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.120043063 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07110942 seconds)
    (121/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.084974873 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.187098003 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117965687 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091497568 seconds)
    (125/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096546311 seconds)
    (126/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08792436 seconds)
    (127/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.119831006 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.113239117 seconds)
    (129/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172063707 seconds)
    (130/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123537825 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089534438 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11545965 seconds)
    (133/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071105303 seconds)
    (134/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.162295064 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.083060096 seconds)
    (136/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.070325572 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.099939928 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.091639642 seconds)
    (139/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133728073 seconds)
    (140/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074131307 seconds)
    (141/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097677548 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08946253 seconds)
    (143/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.18570433 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083335323 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115580442 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110103525 seconds)
    (147/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13413014 seconds)
    (148/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083692527 seconds)
    (149/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.098515635 seconds)
    (150/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.12742034 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119983368 seconds)
    (152/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071428734 seconds)
    (153/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.159827674 seconds)
    (154/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173237191 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089561305 seconds)
    (156/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.082780745 seconds)
    (157/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.106283867 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074014203 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108091902 seconds)
    (160/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.112637825 seconds)
    (161/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.158440352 seconds)
    (162/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08804437 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.10833944 seconds)
    (164/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087158598 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107645193 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09647692 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083831164 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107942165 seconds)
    (169/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074398072 seconds)
    (170/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.094899883 seconds)
    (171/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.0832698 seconds)
    (172/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.071959201 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.099013337 seconds)
    (174/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096030094 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.113470196 seconds)
    (176/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091407813 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.1181856 seconds)
    (178/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091637095 seconds)
    (179/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09420698 seconds)
    (180/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.105846278 seconds)
    (181/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131797947 seconds)
    (182/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.094822076 seconds)
    (183/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.179762869 seconds)
    (184/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.07391232 seconds)
    (185/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.079922277 seconds)
    (186/286) benchmarking ("sort", Int8, true)...
    done (took 0.230247918 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.231742282 seconds)
    (188/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117802513 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.082563536 seconds)
    (190/286) benchmarking ("sort", BigInt, true)...
    done (took 0.245459314 seconds)
    (191/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.097672333 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083136542 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.084376321 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11060601 seconds)
    (195/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072507776 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107335445 seconds)
    (197/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.089505983 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.092977148 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.115561278 seconds)
    (200/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.084769192 seconds)
    (201/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.095123584 seconds)
    (202/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08261886 seconds)
    (203/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0859031 seconds)
    (204/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.094572732 seconds)
    (205/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071212126 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109523539 seconds)
    (207/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086956108 seconds)
    (208/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.071480614 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108923987 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.082686303 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094722255 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.084283181 seconds)
    (213/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073878105 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.10593994 seconds)
    (215/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.085687751 seconds)
    (216/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11505265 seconds)
    (217/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096317932 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.192603645 seconds)
    (219/286) benchmarking ("sort", Int8, false)...
    done (took 0.196754624 seconds)
    (220/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072315081 seconds)
    (221/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.112155101 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.190418497 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085392327 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126416591 seconds)
    (225/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.071312477 seconds)
    (226/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.093580733 seconds)
    (227/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.110509415 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.073530988 seconds)
    (229/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11056746 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111123499 seconds)
    (231/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122197392 seconds)
    (232/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.088255705 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.176399602 seconds)
    (234/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076594793 seconds)
    (235/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13349254 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13496347 seconds)
    (237/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.085529789 seconds)
    (238/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086621061 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10774392 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.085498851 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108796632 seconds)
    (242/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.083145199 seconds)
    (243/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.086492245 seconds)
    (244/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.109430776 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090032229 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.171440212 seconds)
    (247/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.071290443 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11887852 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081990781 seconds)
    (250/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109099441 seconds)
    (251/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07256414 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07400678 seconds)
    (253/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09749851 seconds)
    (254/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.113834099 seconds)
    (255/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.097132882 seconds)
    (256/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0843454 seconds)
    (257/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.104423087 seconds)
    (258/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.071002608 seconds)
    (259/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.090525596 seconds)
    (260/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.095987931 seconds)
    (261/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152943255 seconds)
    (262/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107687475 seconds)
    (263/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085063808 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.107722254 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.091837831 seconds)
    (266/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.096243514 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08290033 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081944176 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.115853522 seconds)
    (270/286) benchmarking ("sort", Float32, true)...
    done (took 0.241256776 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092082373 seconds)
    (272/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.11083585 seconds)
    (273/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09079131 seconds)
    (274/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071470699 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.107192732 seconds)
    (276/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.072105206 seconds)
    (277/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096044349 seconds)
    (278/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073237713 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081860593 seconds)
    (280/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107802511 seconds)
    (281/286) benchmarking ("sort", Float64, true)...
    done (took 0.241012518 seconds)
    (282/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110960487 seconds)
    (283/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.163784019 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083856235 seconds)
    (285/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.096954776 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.083554661 seconds)
  done (took 36.022831359 seconds)
done (took 36.921267285 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096792012 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150696269 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09496826 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138071652 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097318259 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123308107 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092169639 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.121035901 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097577578 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123819943 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095268029 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.098472252 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095187872 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119397563 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094209952 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140592518 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096300391 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090844209 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.112367897 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.082727895 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.111603588 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.083815021 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.109573096 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073152542 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095433592 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116024386 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089801195 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11973551 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.084442222 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10931803 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083326431 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115966131 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083694306 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097059408 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.11608407 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087310037 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119730045 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093886526 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.10979081 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084186034 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116418694 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086179554 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091381358 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116021661 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.085179392 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.107032678 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087273085 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122484213 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116467104 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113349251 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092068554 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119349978 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093565351 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115024029 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.082689136 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087047769 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.107951784 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115768147 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111871864 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089036957 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116656076 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092139124 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.107323315 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.08714899 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112599639 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094568671 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095656999 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107633073 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094585337 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114143217 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083835806 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112699828 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083173161 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084124837 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.11829152 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.095268962 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107190273 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.085251101 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115723781 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.089794799 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107570078 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086579274 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.085965756 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110159186 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086180477 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097851655 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083350751 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090278163 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108023892 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087672093 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115105442 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091053075 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110687739 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.095444032 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08298385 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.107581346 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.084596963 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108190584 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.086173304 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.08355961 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10830429 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087216225 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117524471 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085516494 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.109937854 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096651566 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108690052 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090291977 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.083667007 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.108198003 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099857724 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118616366 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08412346 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114150677 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083067214 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.085598413 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107651866 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084211341 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.107695894 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083733943 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.086023469 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.108517185 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086780077 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.110660996 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097901334 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.109357901 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.082877097 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08760264 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109591942 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09027864 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109334486 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084118583 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.110746943 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082543605 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086363126 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108737186 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085461749 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111874975 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.088036809 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109820949 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.088154015 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088676858 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110538403 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.084065578 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107615092 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077777519 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090022819 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111460444 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.085439282 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.108587621 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.085578025 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107891747 seconds)
done (took 16.115004179 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084340704 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183472629 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145918798 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.119048655 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130721073 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.084660795 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120795246 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142383952 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.085570603 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142403177 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107575545 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129796139 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149878094 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.082962174 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.084391717 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113075684 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.086217013 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125703316 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146927434 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.105536697 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14462049 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.082835993 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140708139 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133924805 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093834098 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136780206 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.085027768 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.088085073 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113293854 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101100218 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130725789 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087902541 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109667216 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.106325394 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1271882 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092880215 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.109034085 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091736256 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109497704 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.084203246 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133855958 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106535075 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115626055 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090685656 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112781377 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092964864 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11062936 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094064708 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120150116 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.088912159 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125265347 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113734982 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113265095 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.101479149 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.108189079 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095563618 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125640824 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092582767 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109729911 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093227794 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108486218 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.088081271 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12566693 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.108713013 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113241151 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100750849 seconds)
  done (took 8.274995891 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102349546 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140647957 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10350313 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.127913803 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.084875028 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.110325075 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085296223 seconds)
  done (took 1.715282566 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085206838 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111475005 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.156716311 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137025148 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109818343 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.137094327 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089977603 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.110296581 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104748521 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112250216 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110499032 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152033625 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086540119 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119551667 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114512661 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.111061224 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113309391 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110774071 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088807646 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138542333 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088748865 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130274042 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.087377329 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.110875561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103631557 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.085694647 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162363296 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115394045 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083520518 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11340971 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084104504 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151364236 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103541954 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119632468 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085547309 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130917599 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.103868217 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109662655 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.102179809 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.117075779 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.104061826 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085489528 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112267106 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083832967 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116010146 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099215522 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.115253131 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.086860006 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.088453644 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13555063 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.086372259 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129022809 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085459244 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115721399 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.087757608 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115134252 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.095606713 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112217844 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109954395 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083117269 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131389438 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131242846 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103919159 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131293019 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087828773 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129285156 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103423605 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.088522763 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113461316 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.089867306 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131685757 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.084538816 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113895409 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100173151 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113311819 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113513694 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137948197 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087339474 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122825091 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086173157 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08595024 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111881099 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112611923 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114832674 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08624298 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115646048 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088961857 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.10938919 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084796406 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.089325185 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110334741 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.087668563 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114846184 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.086407642 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113810462 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106194093 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112307758 seconds)
  done (took 11.432443257 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08771882 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087498229 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114950096 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.08805002 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113050687 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087104487 seconds)
  done (took 1.545834049 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116642413 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113769447 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100225236 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117654628 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127740926 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137967008 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.11110953 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121732762 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.130023193 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.098317134 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.141470151 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112391942 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.145233669 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.091712674 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137981957 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090824077 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137556444 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092343526 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.123820307 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092588416 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.128903678 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.092309088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117494917 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10622501 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12189596 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.091151505 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118835239 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.098836497 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123531368 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095571785 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116857658 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095727599 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.117889812 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121299383 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111685047 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117218397 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091197862 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124042716 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093125781 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122716348 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112504504 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117470828 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.097782246 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.125186104 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.09639067 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.118282898 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097934638 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117860394 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.112186084 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124347862 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098448802 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117145949 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096147476 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123755118 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092547093 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121543538 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09743483 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138359835 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091371783 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118390072 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088844249 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123021346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095764876 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122525923 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.096058474 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123762984 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.117274467 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092802639 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091739363 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117219907 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097721077 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.114046448 seconds)
  done (took 9.018653537 seconds)
done (took 32.934857881 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694909767 seconds)
  done (took 1.661433791 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.830563914 seconds)
  done (took 1.801182514 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.957222002 seconds)
  done (took 18.95285905 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.469276835 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.547038624 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980730437 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16477245 seconds)
  done (took 3.131544356 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.967680658 seconds)
  done (took 1.95458778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284160482 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234215965 seconds)
  done (took 1.492102569 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.773961362 seconds)
  done (took 1.758011241 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.442914002 seconds)
  done (took 2.424743373 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32951368 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157831605 seconds)
  done (took 1.482005007 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.572433785 seconds)
  done (took 1.564953765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.26999121 seconds)
  done (took 12.259313631 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244843562 seconds)
  done (took 1.244261576 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290477882 seconds)
  done (took 1.278533703 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.707509714 seconds)
  done (took 4.697142885 seconds)
done (took 56.679007515 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096520699 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099200021 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125575707 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096489118 seconds)
  done (took 1.403264831 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101910132 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118656304 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101120661 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118794878 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102167253 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119029927 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.094989607 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130950109 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.09175773 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120855759 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.09285918 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.092318248 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122611794 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120721073 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090550823 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096753497 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126664947 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091888688 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123824862 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092948079 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116332353 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095218629 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124657712 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091124083 seconds)
  done (took 3.577283749 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097723086 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091125538 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120206713 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090872382 seconds)
  done (took 1.399419294 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096765019 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129098094 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.103120261 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12333957 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103692301 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.129215347 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089024229 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088860785 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117734469 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.096989899 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114101119 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.11092326 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130754644 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09645287 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.124927211 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086472511 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114271734 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.103172371 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123338476 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.097764415 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115810797 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.09634444 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.087585813 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130879549 seconds)
  done (took 3.610912154 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171823067 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125651765 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.110097012 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.118721904 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.132599434 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139411517 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.085156757 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139638249 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.085094845 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.12762896 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.089336355 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158614741 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125813844 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.085276446 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.084957114 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.111806467 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098953529 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125573467 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.088063402 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127017863 seconds)
  done (took 3.333824285 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095355297 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089051837 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111419429 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088644447 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123620264 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09263906 seconds)
  done (took 1.601431853 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094190495 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086845167 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11757975 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08893646 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.118941942 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085965298 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.111937922 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087340045 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086386369 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112501547 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08894221 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112259828 seconds)
  done (took 2.195944917 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.517677794 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117266244 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088235114 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111703606 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096694744 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113629767 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102700528 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.115455276 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115323763 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.112713236 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086771978 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.088462875 seconds)
  done (took 2.667014159 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201478673 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095946398 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260187973 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347127496 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155920528 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160992355 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276913768 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162162498 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176601624 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140189278 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193974094 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156242855 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125904209 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17368212 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138643679 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.153085471 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170352452 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189164414 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120269802 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226280428 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130806801 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164731016 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179510692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150445831 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137651683 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157777712 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092566116 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128870049 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16884702 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167534843 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171294995 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11983771 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140100927 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.465039178 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204875836 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172311521 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281423709 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132849893 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176008902 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139094614 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246787309 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110263236 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214464737 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125116373 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130908814 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177010029 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.322091943 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174535802 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131622364 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141351909 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176709712 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17682626 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175409272 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11019394 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324383214 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120279072 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14055366 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1835715 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177844165 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188712599 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165555144 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118967759 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183705376 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180278308 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176903202 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114298131 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162132567 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123462873 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168665476 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192552801 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173354866 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160217854 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18098904 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137379014 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161522643 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169273403 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151788176 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14574189 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156766471 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120686012 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121469915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136172655 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12973463 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.165910719 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123718537 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196992553 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133100837 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143325693 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22802928 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127766509 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158790546 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160422376 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160430754 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145016947 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.088747119 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145140107 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149944728 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126536461 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130136078 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156380509 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140091385 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098936005 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151443135 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094145543 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156254653 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.126901692 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.336332875 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161072111 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125180022 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133301928 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146721023 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149382159 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166536866 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182829494 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104843822 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133603323 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192058303 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157470849 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133517053 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145763254 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207724626 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125428952 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137986356 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1640649 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185865589 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139571198 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184634218 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113169734 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13403513 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139794647 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12883523 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156229449 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158182104 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130982072 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122914383 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217576957 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096043266 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137438374 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170216684 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099212504 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128638821 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112832784 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136547658 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.133662602 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.11170825 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13567675 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153394611 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127058066 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152399395 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151014526 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140860278 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18595811 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105176825 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.14723555 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146370679 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.090883053 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169331902 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181408542 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130780438 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191590195 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161815171 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195876395 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160193964 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131179368 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176340701 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100244723 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119110651 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161003421 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127470469 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158510726 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177298701 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223346194 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161327906 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12049271 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147154704 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162239383 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164249754 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148968879 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107213793 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160352844 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156231733 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092926054 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124248002 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097774494 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138173593 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131036246 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106503221 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175177837 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161764017 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213562202 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131250959 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140648193 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181142716 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125679813 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131798008 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.402160853 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139427785 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179942589 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180910566 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163055162 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139679793 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139750522 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119034587 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095155769 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132571641 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161389165 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105594603 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134290573 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140011065 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181309098 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.331878059 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148144287 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226366102 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13558472 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218793468 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092794023 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168452721 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165815147 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127381104 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.174865179 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106448259 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.145037433 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177131908 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143856275 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181466361 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161222018 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163623866 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187510653 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147093503 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102589752 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146729397 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161583382 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109280153 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164124442 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145399193 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136048282 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317053169 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.096763604 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124740621 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1710483 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143993121 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171382064 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117679532 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191022804 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098356645 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139830817 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15686262 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117176799 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113811625 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334553011 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178616778 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143450525 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318483739 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170843992 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131283253 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307932275 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185908161 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.36626656 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108717326 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140966689 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159466561 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159546009 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.322526248 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176331769 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145730173 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174975691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127855435 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134476556 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135523652 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118271963 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150242486 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140154367 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103524141 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150733014 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.134926622 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172769025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111431638 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155404559 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161726813 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149090536 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.113461331 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144141531 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198382781 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157957218 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172300744 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.117787552 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162123445 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221646376 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096220594 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127434833 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.099076627 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176312975 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132168138 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127351791 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.210996965 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195485182 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157361675 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160924982 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10895975 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118273098 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128625342 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147347291 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196934939 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139480485 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135363322 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184799734 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142471867 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102336091 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158864323 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287291304 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142380653 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172607707 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083669811 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280955627 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123532291 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103626164 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161507594 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170671764 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13549856 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.145144201 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161001452 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142847476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131220722 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137360582 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187953632 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200157722 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16575338 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167116691 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132405562 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158025455 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321826758 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173425629 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144295583 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104804587 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161633437 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181423844 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184041638 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132487311 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160134792 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131714031 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157737858 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165809168 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13667141 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19398523 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129825478 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133870724 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13905167 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123053223 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126613349 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21262785 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104030494 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171543568 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1566652 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131675719 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097819498 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149389503 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157530676 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112549758 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126397504 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172473079 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094236147 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161566457 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175074504 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131684545 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125032309 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146614224 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135223823 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111659222 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143261139 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136103755 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136269287 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177432273 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129860393 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174479126 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168633062 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162360574 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318414951 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140677339 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635826221 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128192304 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180855134 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118197532 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177686084 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148380516 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163633184 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160637507 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147943558 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133291375 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147792852 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231624879 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163956524 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157357681 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101379379 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143224542 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141367492 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101384261 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151324575 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161656585 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110187696 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137073051 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154442531 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143500764 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103415047 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139372208 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1820836 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117013693 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170988256 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176936783 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138851872 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164880917 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165901534 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099547047 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158601795 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17066819 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141813454 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148332688 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103410545 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134367199 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17825043 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094077784 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159359132 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159998348 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159535259 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132240958 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134371281 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157988065 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111077223 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16156938 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131658138 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151170684 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127279857 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133097194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125574422 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125016131 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152904546 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149023584 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095568642 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165145684 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17962561 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093348189 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131909883 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283464492 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156252789 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186573544 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111572778 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135764987 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141269734 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115910668 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151484014 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158159128 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098816223 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132378938 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12890398 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137477225 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142010967 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15515489 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156847848 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353414847 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195297422 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136741034 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252066253 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138478871 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156008808 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.0930004 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129786647 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111271089 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133336053 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144547653 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188762011 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177385194 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143718903 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105119702 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126634902 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095349168 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131832197 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132571275 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150399282 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157591782 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141148342 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084776774 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143363959 seconds)
  done (took 76.437868624 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157992907 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152724855 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165251676 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.216201874 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184390544 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26657553 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230429522 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256415038 seconds)
  done (took 2.7152445 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.091185858 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142441618 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.126056531 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134579859 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.115408238 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.116069928 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.303108583 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134236786 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114603437 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117489026 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.132340229 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117322688 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.528814915 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115494322 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.088626403 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109844566 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115288249 seconds)
  done (took 3.684877301 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.261767943 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48946042 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.168459227 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195918351 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180119558 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.09221937 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.736513647 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093300953 seconds)
  done (took 12.30375836 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118266085 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.139369557 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.130135047 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158363282 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.114979311 seconds)
  done (took 1.763514068 seconds)
done (took 117.681181525 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095410758 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125388218 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096309495 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127780845 seconds)
  done (took 1.526892475 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101321932 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074819621 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108775185 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078477791 seconds)
  done (took 1.453110823 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.193812338 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169312806 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404372174 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075292875 seconds)
  done (took 1.602901785 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111025019 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129745971 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102200273 seconds)
  done (took 1.443675778 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103552461 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.098611671 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.12854426 seconds)
  done (took 1.428475021 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.102528676 seconds)
  done (took 1.194432245 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108558661 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138896108 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110546727 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139037555 seconds)
  done (took 1.594141064 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.095171236 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096903092 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138894135 seconds)
  done (took 1.425973673 seconds)
done (took 13.130438535 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103784815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.42481075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387267386 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136751781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.704794898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.408098735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038955706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145006951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.168419311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089148971 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136839926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677637762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022083738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343442388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00792288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.343898203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713869245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090071088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117594916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090893889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.052455943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090617489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088765342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118121159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.689995265 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424824263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08962127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.373177136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08932229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12661039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376065394 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117526056 seconds)
  done (took 16.873723154 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095906932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177959278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100691892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120449522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098247182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12018102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093774252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090357011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181985181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119810155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106411942 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120088288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093408477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120141006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109501686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119345914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090391973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117842355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090398326 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089715944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13843802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089118652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119508593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089784641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118593041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102913464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119352599 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089914708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118519145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098495354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092057024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119766884 seconds)
  done (took 4.650246836 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142141628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1875415 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130425716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124961117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173274901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091608632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200451748 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14667067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185976892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089728331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137058277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090678391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154152029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.091168225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140299779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.090488827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119144161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091295482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117578186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090938445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109519636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118950921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090094347 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119498086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089994493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13456579 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090270474 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119369227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08996271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127162079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092876536 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118878695 seconds)
  done (took 5.002436848 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.093898858 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094962519 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134999031 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.106445791 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120309148 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.093105285 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.124738468 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091599422 seconds)
  done (took 1.962961685 seconds)
done (took 29.584702625 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.108510763 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.095414611 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133654508 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102593723 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.129825481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102473521 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118859408 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102034 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133164784 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.09925122 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136194802 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.089180622 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.091267556 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118976609 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.104171978 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124846935 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103523348 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.130279475 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.104789289 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133771604 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.091657586 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131315058 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100485963 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133196671 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104860983 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13321943 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.107749615 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.126076178 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.09150675 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.091192334 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.1326986 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110470642 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121981753 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105342326 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125546063 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093836467 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121071829 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09486809 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133002577 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102134639 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126088396 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101711481 seconds)
  done (took 5.840006257 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115866893 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148282129 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112035907 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.114801651 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092070882 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.114064983 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115948505 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082728238 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.115014192 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114189918 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.107933763 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080944429 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.11253595 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076579833 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080019501 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.109600007 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083917803 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.107945667 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080966728 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080599912 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.113617189 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076773405 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082892147 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.112239613 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078901088 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.114284419 seconds)
  done (took 3.743404977 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097042821 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.10407733 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141286693 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.174328329 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124522336 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.128998784 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099334157 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139794581 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106682745 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11873366 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092584779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148373375 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107971722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127524699 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093915373 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103998412 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134006029 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090724458 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125569166 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109431444 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136735298 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100113974 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139690019 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100380763 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.12009209 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092252369 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124764524 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100848276 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096582437 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128465151 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096783119 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122883551 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091125048 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.132486284 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.095802574 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.121586971 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109736952 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130361767 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.099932883 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121038399 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09841111 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.095286461 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142860361 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15945236 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090950752 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126621904 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.093316402 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.09939976 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122142654 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108141876 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130875543 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089399007 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122567808 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091215494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090801425 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136300037 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.091350157 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121523527 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101970332 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125646594 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.102529618 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124778103 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105406648 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120949047 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.096642739 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090706896 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121626162 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088688876 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144419574 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095988917 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162814568 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.090283663 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122098422 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.098734502 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12698291 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096327179 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.120854189 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105426905 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130403344 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094571469 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131211018 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.093015108 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092848428 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139653651 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.092217052 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.122274156 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090876529 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127234185 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093057437 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090868988 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13564267 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08944894 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123760381 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103545362 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121337971 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09131646 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126966681 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.0951927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.119521536 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104310641 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125905378 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.091853932 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130670196 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.091296776 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092238843 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130956608 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094468526 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120921652 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094598273 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126936842 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.091014575 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123886896 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094141985 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091648783 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130813107 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09694625 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124441883 seconds)
  done (took 14.265131255 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230391619 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218113437 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189951862 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301084167 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.10296984 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147824007 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213878756 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125673602 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122677335 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159597227 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171676548 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187793399 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.14035974 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183116051 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171818501 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121227122 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110645911 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.168224246 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21699062 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.264357636 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144110512 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.098869662 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161281208 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161659625 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136044249 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099727634 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138843356 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103510782 seconds)
  done (took 5.717971383 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106846251 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153478839 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095724925 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143633052 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116577081 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121794037 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094373359 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.123599169 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.104474022 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135211216 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089742519 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127572381 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097961778 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130124037 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.091353008 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.130275743 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100601201 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12246292 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.093221859 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09520908 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131820631 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137660768 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.095930169 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089116669 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130992443 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.089237369 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122849803 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143253576 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.090567823 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143606413 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.088317572 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098478804 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135761491 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090926778 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121292369 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09311452 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123257711 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092653917 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091558081 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120073562 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089460364 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.112626285 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.0898244 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136375032 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097340849 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.115630939 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.097478969 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127326968 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091684321 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086954911 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.124977464 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093363078 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124260731 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.099377186 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123026529 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091596069 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093307797 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121672185 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.0966112 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124449428 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.089349755 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088757125 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12584304 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.124069878 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099624494 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094635664 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.119972636 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092121393 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125884332 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097930071 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122577301 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097611286 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087968455 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124192318 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.093086877 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127600237 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094385702 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120128891 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090845203 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09020526 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.110516695 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.090641816 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.108467746 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094188227 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088193389 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120378856 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093047781 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128048255 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106876239 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.122833061 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098936976 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.122936607 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.089853435 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124057512 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088707938 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093367284 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139188167 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141278355 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.091406886 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.11958245 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10660569 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09303508 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121073614 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080293325 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130949307 seconds)
  done (took 12.593006375 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129386014 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152496319 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092660222 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140319638 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125259515 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157775392 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096996066 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129963674 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091712903 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141221794 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091182821 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131591944 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09095448 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136184059 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125578688 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132346344 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09304167 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.136536964 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.094890712 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170086645 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.108942562 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141275475 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107972835 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12243625 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096947094 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139273538 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128947257 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.136638523 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103523957 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141759562 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.105403998 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159642204 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142434159 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.095694683 seconds)
  done (took 5.332609084 seconds)
done (took 48.602057644 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.209460915 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445908382 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198077018 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126093531 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.24841117 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216757885 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210189346 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.199981325 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.40446459 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.202988713 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.450222688 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.813781721 seconds)
done (took 58.857915193 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.302989148 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.361827811 seconds)
    (2/2) benchmarking "String"...
    done (took 1.493598438 seconds)
  done (took 3.992173248 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.747870177 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.180108647 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45904264 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199910048 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.19883941 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485408438 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.006631169 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.683075483 seconds)
  done (took 28.342289475 seconds)
done (took 42.517200539 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.222648926 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.263644832 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.24741692 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185547561 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.343844125 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.232408377 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.492250067 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.267990901 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.232016779 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.186575435 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.200724513 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.201410074 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208582836 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.459750059 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.207293169 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.20003452 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.252539996 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.912367971 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.621020241 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210532897 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22615374 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.217913823 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.235547218 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202236202 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.250291371 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202492212 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200620314 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.201045564 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.964110201 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203226052 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.232283143 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.658774369 seconds)
  done (took 191.073143493 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20180256 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.245783355 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.354140015 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.238639639 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.689057556 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404292615 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345454717 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.774213302 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.223885674 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228509772 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.553608779 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203037337 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.617005526 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.189828835 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233262987 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.262793638 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.52951534 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.606321282 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240052443 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.314731775 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.219589405 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.468346978 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.372753198 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.488862715 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.215988971 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.279543053 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.227829707 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.241936918 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.397720426 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.451403969 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.240393956 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.251837862 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.876040721 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.059583704 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.22066555 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.22227434 seconds)
  done (took 150.822657054 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202509875 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202367574 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203425645 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.237449942 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20384444 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.830958287 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805798371 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.77327581 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.863286173 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.750884028 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512499817 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204153436 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300626569 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.219165974 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204847235 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219725966 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229818918 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209276893 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205014623 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834403144 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222529979 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.782518459 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.386180609 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.222034782 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238949139 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603263012 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205237275 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238810212 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.544289047 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257961522 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205285278 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.637367512 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.508222131 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204656652 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320831257 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20684818 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239502711 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206410433 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.490496749 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205722392 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206072437 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209384835 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929183171 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20996178 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.833426154 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211452113 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.190953033 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205804486 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206250553 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.530389014 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.033736142 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.227704854 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207063157 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.209068468 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206496283 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206765368 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241019084 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.644778323 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.32944288 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207787929 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.210297497 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241020236 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206240068 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.634915994 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206937623 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.505627639 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.284942216 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.317439854 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839689836 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212812715 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309299356 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331958662 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.207588079 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.208562287 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20789979 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20812281 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208310246 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.207440756 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.321120757 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.2078814 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.652826848 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.390006039 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226108054 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.754875732 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312062273 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207775658 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.694633314 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213166315 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207716266 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.994541832 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30748571 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208347699 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208863481 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20844531 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.657641333 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208110747 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.809280463 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.518754828 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214600857 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.92368225 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215812699 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.66678252 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.806024651 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.965480971 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215083069 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323374853 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392383095 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228447528 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.209449684 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.7572471 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21552495 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269239649 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210020383 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609702138 seconds)
  done (took 369.608337673 seconds)
done (took 712.635832681 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.828163305 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.827026713 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.937631124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.815325406 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.774518519 seconds)
  done (took 10.321817215 seconds)
done (took 11.46186644 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409219333 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409459135 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275937809 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410360841 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24427161 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430688774 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391674264 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.235267714 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318982392 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.301530718 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316774513 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270813167 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246148218 seconds)
  done (took 18.400118382 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542718252 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538957205 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276007259 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537350339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251633191 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.568661654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421184677 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430671638 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430916329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22759617 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22608642 seconds)
  done (took 16.592938456 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550408039 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545276777 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279145017 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54433466 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252564494 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548723352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429320362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437512547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434770437 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226841827 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225323637 seconds)
  done (took 16.61504629 seconds)
done (took 52.74939454 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.223356727 seconds)
  done (took 2.364626328 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262079496 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.42752235 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.247387258 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.229353263 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224217969 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.238139799 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.23063518 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.224760106 seconds)
  done (took 11.226686713 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219367471 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21947269 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.2217625 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22157709 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222177283 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218925458 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.218604839 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219383182 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219163596 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222495255 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.221829109 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.222307125 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219826481 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222499124 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222326127 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220100044 seconds)
  done (took 20.674783191 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222281446 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.220109726 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219383968 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220643322 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219920168 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219773853 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.221438985 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219965605 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220401802 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220034853 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220934321 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219993665 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221262919 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22011467 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220640975 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221268816 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219534735 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220301304 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22475895 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.22004586 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220812565 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220164932 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.221900504 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221441877 seconds)
  done (took 30.442162842 seconds)
done (took 65.850380079 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.892068392 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.030682588 seconds)
  done (took 7.066635987 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.28082745 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.286304824 seconds)
  done (took 3.712951082 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223367338 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.22379246 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224140996 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223157728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223346287 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22442501 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224728215 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224821213 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.223681633 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223737369 seconds)
  done (took 13.383199843 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.224542175 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22509811 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221196074 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.223834001 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223885725 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221838037 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22417842 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224975894 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.22356135 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222184526 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.225766019 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.222184866 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224876598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222405046 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.225485014 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222621703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222344544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222082715 seconds)
  done (took 23.168436939 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.23752727 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.245697759 seconds)
  done (took 3.629252672 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.351442832 seconds)
    (2/7) benchmarking "second"...
    done (took 1.265088686 seconds)
    (3/7) benchmarking "month"...
    done (took 1.332298169 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320379413 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.264731028 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.243932008 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.265588899 seconds)
  done (took 10.189175122 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226342441 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.413397258 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.51875054 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.801245175 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226821325 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.230605735 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.08070818 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229379472 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232375114 seconds)
  done (took 14.107129936 seconds)
done (took 76.40213372 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.25142262 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.2191216 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.565883754 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.236385558 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.238859987 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.561269646 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.245704351 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.351095808 seconds)
done (took 37.819507482 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.231043003 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.211670329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.077609891 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.226019919 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.341579838 seconds)
  done (took 19.004536417 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.358500308 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562421035 seconds)
  done (took 5.068335624 seconds)
done (took 31.453687553 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228206575 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227849308 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225005036 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.223712375 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227403129 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.22465071 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22462886 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22795779 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.227573074 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227675274 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.227857777 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.227084337 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.225329011 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.227934453 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228346416 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226158703 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225159967 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22819888 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.226666774 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225455325 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226146881 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228327106 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226128204 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.226058845 seconds)
  done (took 30.588529028 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229449238 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225935407 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.228565576 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228560943 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226607914 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.228502472 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.228338463 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.225497901 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.228829142 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229801815 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226912425 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.226836174 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22924665 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227711754 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228954979 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.227652957 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228602828 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225797691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229103219 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227030017 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230341516 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226641171 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227168386 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229437095 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226459839 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227690982 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230664932 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.227929688 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230825223 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.227226359 seconds)
  done (took 37.992382092 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235161513 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.238923646 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230522205 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231178887 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230694889 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231141045 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230509367 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230933795 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230485938 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230378985 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231157262 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.231754205 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231046391 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.232241273 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.230526559 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231458195 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230589699 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231562661 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231358883 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231393419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231394654 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.230800568 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231649168 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232412982 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231783192 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231358721 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23241651 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.232424073 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.231959483 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232136108 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.231867848 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232378721 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.2318171 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232064325 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231298798 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232603345 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237888162 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240954878 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232626191 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232336843 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232605982 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231879914 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233190761 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233174001 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.233316938 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232270909 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.232954974 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233471737 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23304889 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233239292 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233360677 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.232876479 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23369117 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233289873 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233508159 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233467372 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233953453 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.234046369 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233061043 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233998955 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234115423 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.233012675 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234070751 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233654879 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.234874505 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233888042 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234259633 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233659626 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.234132264 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.234471796 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.233975995 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.234432484 seconds)
  done (took 89.913954489 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.234625878 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231795699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232761808 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231991542 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232924035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235172451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232833006 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235132974 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232227582 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235287846 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235490441 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232469329 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232551863 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237108236 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235428897 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232676638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.235499109 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233079249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235324494 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236224147 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235518108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233079846 seconds)
  done (took 28.3048913 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236078193 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238414168 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233707288 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237668094 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237287965 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237150336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235979884 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239749806 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236689303 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2420684 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23355445 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237258143 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235738934 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233998153 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234519478 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23681334 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237283731 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236147131 seconds)
  done (took 23.41720848 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.235069119 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.234760938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237664403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234102125 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234943572 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23818893 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235337757 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238184742 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.239010804 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.236548415 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238954357 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238883341 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239560663 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236396987 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239306635 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235966214 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.238342278 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235915318 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239322917 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235927411 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236482621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238909901 seconds)
  done (took 28.376287368 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240074257 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.238811119 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23571631 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.236591519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235622718 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.239522503 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239429454 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236449863 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240130109 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238722821 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236355507 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239851033 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.239037405 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23741925 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.237450079 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23634537 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.240729315 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237974354 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239019928 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236969501 seconds)
  done (took 25.921407513 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242954952 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243336498 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242569496 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243415333 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242826499 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243204521 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242469348 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242420322 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243915948 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24346238 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244203703 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244132312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244039507 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243535729 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244604484 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244197752 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245068651 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244256128 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244050987 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244002306 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244124142 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243712178 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244287908 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244204192 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2439109 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243400285 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244826786 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244352435 seconds)
  done (took 35.98631469 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242853539 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241623235 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.239312287 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239754311 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.239687617 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.2404435 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.239930815 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.240421036 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.728866751 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240560804 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.243608925 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24292269 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242885454 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.242660574 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243476976 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243559946 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243624838 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.240940947 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241291729 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241353531 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.243075691 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243364287 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.244063077 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241578804 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240222655 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.245465507 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240638064 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242435533 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243463163 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.240735726 seconds)
  done (took 38.90773822 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.261340118 seconds)
    (2/2) benchmarking "in"...
    done (took 1.261898072 seconds)
  done (took 3.687014539 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.241721513 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244501232 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.244690889 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241517412 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241498293 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244408682 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244351245 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241682231 seconds)
  done (took 11.108224727 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.244577522 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245203507 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.24517126 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.245143085 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.247364676 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245529588 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252616689 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263761361 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.246250161 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245769551 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.253154295 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.254322365 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248337005 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246433481 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.246249614 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247832024 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.246438475 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.247852219 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248661463 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.246599905 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247470172 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247959391 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24789164 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244154667 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.248204545 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.259527205 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250312205 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246960117 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247123002 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251006605 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246048657 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.244437973 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249039655 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.24978634 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.247639733 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.248726518 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256727124 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270261333 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253675748 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249861415 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248180863 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.244998953 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.249377021 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.249513513 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24910142 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.249362754 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.248780114 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.245741862 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247271163 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252744858 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.254277729 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248272446 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246119073 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250593988 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250220112 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254922133 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.271213275 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253336523 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259887122 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260513878 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.262875986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.276374255 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25125473 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250915674 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26096411 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.276354726 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257131245 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265901534 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.246771806 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.249562217 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256160622 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263854177 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278488116 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251955772 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251599905 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249781815 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250541263 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250834209 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257866223 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271578549 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.252302332 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252457039 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261153317 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276056661 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249854621 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25346475 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252290518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25300583 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251423264 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26068734 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.272878937 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250600267 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.250305626 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.252043452 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.252100565 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253164386 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.250776623 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252261545 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.248047974 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251968238 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253092154 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256478316 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.261308859 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25338823 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254194894 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.258788934 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.252368413 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251554993 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.258347135 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252179313 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254452899 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254318073 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.259096318 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.250221376 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256367547 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.261944077 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.255075532 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253335781 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254371558 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.253712506 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263985137 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280368079 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.253353434 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.253942738 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.258905194 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.268054958 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255506375 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257022718 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.253382051 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.2506704 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.251027265 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254791319 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.254254685 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.254909439 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256855399 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255239521 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.25183431 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254731824 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255971129 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25505197 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.255582244 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.254998508 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.255290195 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257434996 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256407779 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.256600446 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.261646888 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.255306041 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.255999952 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.256743357 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.25349419 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25613219 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255702671 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.257037722 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254498783 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257977953 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254614366 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256659111 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255615038 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.256772913 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255662984 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.256700556 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259818671 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.258117263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259167109 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255735556 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252370716 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.256361653 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.256793055 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.255699493 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257580478 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254649424 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259515217 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.267126897 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.256299015 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258024715 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.259090769 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258314825 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258358359 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259993229 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261374931 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266963933 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259865353 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264058269 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.25890751 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258836839 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25789025 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258051956 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.257320915 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260325482 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261638403 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265345487 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270035361 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284701666 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259018589 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.262611307 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259469047 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.265035125 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.262412371 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.260228551 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.259099713 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260227555 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25770734 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260220309 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259853901 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.260631739 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256990572 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259498332 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.258912357 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.260994187 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260448886 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.258648895 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260325241 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.257165451 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259815139 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260781822 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258648228 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257046961 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.258658146 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.259950265 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261341187 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.262039526 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.266424334 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.258554588 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260916277 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261731696 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260336267 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.259225045 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.261785982 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261826742 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260184362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268930092 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.279301309 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.261242078 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267093915 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280140052 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260090856 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262835982 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261664905 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.258149121 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265571393 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.270886244 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.26214538 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.262826778 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.262832939 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261555373 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261723413 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.268529291 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.258103865 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261344085 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.262413874 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26264899 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.258988624 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262873582 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.261853284 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.262553006 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262927549 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263566752 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.26161107 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262627893 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.264602197 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.264534261 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.264753829 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266227075 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273391085 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267422006 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262135068 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.264962568 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26342384 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267142787 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263122578 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.264796197 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263298469 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276406061 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.29249205 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269875033 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.265070731 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26418823 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269289808 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.26545692 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.267896913 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263506657 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265445128 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.263757898 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.264465252 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.262655906 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263952964 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.265215979 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265507148 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.266563536 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.269583487 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.264658244 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.264627929 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.267418496 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.267143431 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.265692467 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26450074 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266128672 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267869632 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267645237 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.265720392 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.265334507 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272165915 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284470028 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.266572951 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264877129 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.265344684 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.265488046 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.265357312 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.267670327 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.269116116 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.276933813 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.269719753 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.276021314 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268714653 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277305479 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.267551824 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.26961142 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.277469344 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.264037789 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265483637 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.266106501 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.268606844 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273717401 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.288504618 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267665927 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.273034955 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269296979 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269095894 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268304632 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.2698461 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267345444 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.268865182 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275341748 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290269277 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.271766779 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268374415 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265938896 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26923067 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.268104559 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.267973495 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271669605 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.270128368 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268723773 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.268205201 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.26722234 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.268527236 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.270392826 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.269093516 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.26656826 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.268113042 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276122997 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.289126762 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275210614 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.269182622 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.275408164 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270810067 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275939119 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290846195 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.268396517 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26980102 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.267761077 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269946693 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.267495368 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.269393549 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.269513711 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269887857 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272064157 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270169317 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270110373 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.269508787 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.271583197 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268526087 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280120276 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296549106 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.270635271 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275012094 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.266124047 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.271146796 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.276644195 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272132223 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267652732 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272461898 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281520886 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279712994 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.270087358 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.272346471 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271122756 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272945209 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.270486255 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270604229 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.27209087 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270778227 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.2713187 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.273214207 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272419134 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270558733 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271033407 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273385238 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271928268 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.281066255 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272669612 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271076206 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273368822 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272037515 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.270862278 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271972415 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272797088 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271590114 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271980751 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272876494 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28005193 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.279101952 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.274382501 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.270967821 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.273585568 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270672654 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273068591 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273457976 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.273767703 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273751176 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273011581 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.273913795 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272365377 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270452239 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.272436224 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272753703 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272524367 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276077509 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281888544 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272288372 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269972288 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.272897245 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272832819 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.271177875 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27213462 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279872367 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276006212 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.284765002 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.282989801 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279276962 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27314792 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277648926 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.281963148 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.272501144 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273838247 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.275729521 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273245695 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275109144 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276869069 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277264537 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280207479 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.273906615 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.273622771 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28255113 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297368382 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274875968 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276157251 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.279501527 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274514298 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27179072 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.274632326 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273750309 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282744652 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.296536888 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276462368 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275822292 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273948474 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.27749436 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282127239 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275414654 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275882163 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.272725332 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275710474 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277450131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275593858 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.272738366 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.275096257 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.27591946 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278829776 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282674492 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272827439 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278011965 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.27631575 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.276478309 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278218837 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276195657 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274190347 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273977438 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.27530622 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279038398 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.276732977 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.278288159 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275848413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278550677 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278462624 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279425492 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281204558 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28764392 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.286263374 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.275444941 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276351122 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.277179205 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.27925163 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279222204 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.278848954 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27736636 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277839106 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278103309 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27926184 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277414761 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.282010606 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294645989 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.301233001 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278068883 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278010842 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281019506 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.278812813 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276504548 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278731448 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.279448757 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281844704 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.288112288 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.280777366 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284182728 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299274768 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.279963668 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282987649 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.282531895 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.287296078 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281362831 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280530379 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.280998052 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284089319 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29644382 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280065082 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289853972 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312468384 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298166748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.280674942 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281814356 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278122646 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281507829 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.282084543 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.281933989 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.281031462 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280510405 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281351424 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281399958 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286363071 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.282078347 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281401536 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.280468904 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279276598 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.281416028 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.278147345 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.281616983 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280589578 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282688737 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.282244761 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.283869299 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280757787 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295211309 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309401616 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.280782433 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.282613825 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277925749 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.284635719 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.284345945 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294136798 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290396395 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.283713197 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283263686 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281473384 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282986047 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.280231733 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281756815 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281771584 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281892995 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279393569 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.295482336 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311938361 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.286645556 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.281369656 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284832966 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282495065 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282590907 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284713784 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285086119 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284154469 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.285883588 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289129371 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283389617 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.282979785 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285472737 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.291554466 seconds)
  done (took 756.678575867 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280326873 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280278091 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28023961 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280058915 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281012609 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28075663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280706397 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280546287 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282047848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281503265 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280829067 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281099727 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281762603 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28249753 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281305225 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281336355 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281880213 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28189835 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282267966 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281645784 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282767343 seconds)
  done (took 28.106423362 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284986669 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282294079 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282904769 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285093214 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282394927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284696381 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282456951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284950256 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286009353 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282468667 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28538429 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286936583 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282157141 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282847947 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282728955 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285752831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28561142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283441862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.28575045 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283483576 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285460933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283492163 seconds)
  done (took 29.453220444 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288177136 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.287805482 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.285830689 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.282745759 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286121474 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.28294854 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.287773121 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286376304 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.286285385 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286505927 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.28590936 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.287409634 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295405272 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292306237 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288720001 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.286977322 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.43031139 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.287805823 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288062668 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.289041853 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285080068 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.292324483 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.284600421 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.284948728 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.286245201 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288972148 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288027643 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.287239023 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.289352404 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.288041772 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.293992419 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287915461 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287588097 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28976097 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.287118843 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289458375 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292065459 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290717194 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.285304105 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.287678357 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298640563 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.312253349 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.290786144 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.294845859 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.289062999 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288706475 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.293070104 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.299460634 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.285692653 seconds)
  done (took 64.515288223 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.288979444 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289703054 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28675014 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289598454 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288857546 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289347348 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289065687 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288206589 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.287265967 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287114191 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.29011116 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286282532 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287369045 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289131885 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289800965 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287712311 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28774375 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287620217 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287589716 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287424207 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287571046 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290009382 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.291597206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287158848 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.290441918 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288616163 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287997396 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.29042807 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288380422 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288688534 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291376038 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291465509 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.291717217 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.289292662 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289399148 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.290369161 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.291245464 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.288916415 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292041991 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289185318 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.291327349 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291353965 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.292472329 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291578094 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289489854 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.288640488 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289520659 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289691759 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289465453 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292214098 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293272797 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.2907615 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293530706 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290567211 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292481921 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.293014575 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290509374 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.291138467 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292855371 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.291338934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.291552344 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292871855 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290555705 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.293390605 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.292726666 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.290534452 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290643006 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293061878 seconds)
  done (took 88.929304604 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294590488 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295312594 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295889329 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295072346 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295037963 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.296345656 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295927895 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.295781228 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295891933 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296449047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29512773 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294658836 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.29682829 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294612433 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295550645 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296700098 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.296168585 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296132364 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296846678 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296605831 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.296038246 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296448473 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29608749 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296436338 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297821033 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.297018533 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296988435 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296903126 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29691816 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296667724 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296647581 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.296566371 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297041486 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296537733 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.298634631 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29723176 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298226782 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296290098 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.297536608 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297376565 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296730777 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297980594 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297796628 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.297270449 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297204108 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29864163 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297694633 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.298359108 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29706186 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297482761 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297970586 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298149188 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297941762 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298898926 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298318143 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296366591 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298799137 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298318397 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2990238 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298506683 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298209906 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298545466 seconds)
  done (took 81.621481417 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297171301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297990347 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.296451393 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294770667 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297237368 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295750878 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.298209661 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.296984859 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297923781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.298107156 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298995959 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295875752 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297239369 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298726352 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296931441 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298794034 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297233994 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297534537 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298977286 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295983749 seconds)
  done (took 27.160030225 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.296048225 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298189739 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296338592 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29687571 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298506957 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296265331 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.299640399 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299135892 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296430861 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299067298 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299470178 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299452938 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297185815 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297931139 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300137432 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29789446 seconds)
  done (took 21.983167664 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.297551218 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300367891 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.302005032 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.300709329 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296505916 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296764184 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.300564531 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.296754852 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298053612 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.300353615 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.300271742 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.300333927 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29970162 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.302319739 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29760737 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.300422032 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.298831347 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.298146095 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.300459557 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.302380594 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.299066548 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298023743 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300837832 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301982477 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.298364571 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.299104975 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.299514168 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297929435 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.297690253 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300775847 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.298809924 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.299977256 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.299419279 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.298931429 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.30412946 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.298507953 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304510064 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.302307953 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303053817 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.30257809 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.301908634 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.299309639 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301687064 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.301840238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.300054267 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301182899 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299400336 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.300405387 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.300764531 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.300216629 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.302446399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305047049 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.30328899 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.303821881 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304188354 seconds)
  done (took 72.737762802 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303296153 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304010032 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300362801 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304250121 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.303710119 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.301513682 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303853828 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302315058 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301471473 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.303022031 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301301821 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304524567 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300778155 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304013042 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30127516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30373865 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301702826 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300925227 seconds)
  done (took 24.664911528 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301783178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300878162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.30504163 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301164387 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.30070598 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305170683 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301811244 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.30529627 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304534131 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302295793 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302455767 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.305052234 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305950573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.305531112 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303453103 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302086362 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.3049293 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304982537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302305262 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30330654 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305675588 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305645863 seconds)
  done (took 29.899776605 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.3050624 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.303968863 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.304379857 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.322158212 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.326265264 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.329157609 seconds)
  done (took 9.111601975 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314234679 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305743884 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303424921 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307407789 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307474041 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3021853 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304124513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304761553 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307020867 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304018508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304043433 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306905621 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306169321 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303961701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305851708 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307835275 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305300951 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304509153 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304553367 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307773867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304378955 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306981334 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304808184 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305081096 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306506319 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304776908 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308331117 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305125569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3053145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308482915 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308969055 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30541408 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307794439 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306425717 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309603337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308683368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307275975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30815848 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308702278 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306643593 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308518415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308885063 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309939685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306361602 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309459292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306340708 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306636632 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30681451 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307039292 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309194074 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310144279 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307036184 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309271813 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309561746 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30922231 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309932871 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307460793 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306287029 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309752674 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307248433 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30788675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310193669 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307408883 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308092147 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3096927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307852829 seconds)
  done (took 87.519214242 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306456994 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307429777 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309429027 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308908495 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307171182 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307682489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309241471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308262237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30748527 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308481654 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310458733 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308546559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308681098 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308189485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308258924 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3079575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309508533 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309403817 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308754375 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311349754 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308711169 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308167149 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308723279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309253821 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308922553 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311362554 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310292352 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308820712 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308635968 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309203525 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30895585 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309196638 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309576372 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308795409 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311187848 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309458688 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309291903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310081292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309826921 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312296876 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309528923 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313232065 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310054112 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310668748 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310687321 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31076733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311081528 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310597231 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311931705 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311210227 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311165035 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310956741 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310782473 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310059324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310814152 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310859009 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311335216 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312158176 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311907672 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314100509 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311399922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311280532 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313800872 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3115729 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312113627 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311608034 seconds)
  done (took 87.684622313 seconds)
done (took 1765.419455621 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.477589274 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.429775546 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.311818654 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.313355239 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312969907 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.341459042 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.3082599 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312914295 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31237479 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.312338558 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313058783 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.513894575 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.315829902 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.312965978 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312894454 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.412795571 seconds)
  done (took 42.843720011 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343050754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.319070523 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.448837688 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.344193685 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343712419 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.5272022 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.382572208 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.322087811 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.519496007 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369784488 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.096338267 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.343597408 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318369739 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.579829851 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339133137 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.527308421 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.602928717 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.109301834 seconds)
  done (took 31.066992348 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.852026581 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.339019604 seconds)
  done (took 9.422158803 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340011539 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319185698 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.32020665 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318280242 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.314541084 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.310232974 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318410044 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.317801294 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.660753253 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.471907079 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.326044253 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329407592 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341428535 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319724077 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316464184 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359829248 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.477139384 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317161292 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315745606 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324797046 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318245988 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.412658347 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.36945374 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.322489409 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.463875389 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.679646335 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326793201 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326288014 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.457010482 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317371836 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319366821 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.319961459 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.321409266 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.258721728 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.863782288 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.312101816 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.370090323 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328895847 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318169372 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.483133134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321984578 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328233534 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.317705983 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.835526531 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468192249 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.454139935 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.682312516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322842263 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323743419 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.388594311 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.321674208 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322745697 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.367951509 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.188068154 seconds)
  done (took 112.890989403 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.317820881 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.707686459 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483972308 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339425009 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.118173931 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.025412919 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33410304 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.646162324 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362875194 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315381802 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.612522622 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8847153 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345222963 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.359321726 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.679793955 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.412050493 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315765425 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.203364425 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.341467508 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.321290743 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86347552 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323713997 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315507242 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.477057484 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356815368 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815102539 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.009121334 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.826312709 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.341647551 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.315768043 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828154716 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.341627693 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.36044554 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.315112582 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.600109018 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721794773 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696830249 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.32311552 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.321979838 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.322077291 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.346638282 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809607547 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702945085 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328033779 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316453417 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83236118 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317382904 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.319335219 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.324546801 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522048176 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.002426631 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318929449 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.919582644 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.317038504 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.605881093 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.343881652 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372096803 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845688143 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31864114 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.450472384 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.357964671 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318036418 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322671577 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32209845 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.321446762 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.70984479 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.31976957 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320105741 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.70875518 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.824113 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.339057275 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895483195 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.152290154 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.343607198 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.368234603 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.318103089 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.990840492 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.857994694 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.341066117 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319731593 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.69600289 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320357557 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621304834 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.338690959 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318297687 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870498137 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.328009711 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.326951702 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.333704009 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319820358 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.038290952 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322256965 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.629526576 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.343848468 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320931132 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320118236 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.346800479 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320943001 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340804366 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.324971952 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898775188 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.348698021 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.464102735 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342048912 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320420573 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.325252426 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.323061559 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323228009 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542161356 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.906288105 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.34594419 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320948723 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.325368658 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.327443045 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.526542373 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.325890812 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.682877314 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327141238 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322928138 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323547416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067921191 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394507704 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32368162 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.325480195 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.275680082 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.541483358 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.343948769 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.322868205 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322147843 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340351641 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.746925186 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343256042 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.344002194 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.322296604 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079380234 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.384896175 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.359443764 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.666642164 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.333541922 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32788571 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321763147 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324218459 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622899157 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.608310967 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847172165 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324828978 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.323890859 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.052565072 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.369201545 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472978756 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.345740478 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.371993455 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521907011 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893965017 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324619765 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.913221521 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.325457371 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540225916 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335698167 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637351821 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862155632 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.344954575 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325245161 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076139461 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.089506984 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.00977803 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.329316913 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.623012122 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.303541495 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.803335266 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.324302529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.323644879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.850370382 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325101241 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332640825 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.326202713 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.325450313 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.495548507 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501127993 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.492114116 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334022089 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821978167 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.392927144 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32617489 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327276167 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.327387999 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.675376453 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375249628 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.329105624 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.359207983 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.326358555 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.331475182 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839954513 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.190812968 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.334101142 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48120584 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003146276 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.346541572 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.327106054 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.065751182 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.58548327 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88270567 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.372664952 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.679895978 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.336673555 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.367958007 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.039419405 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347779819 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843602253 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3270704 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.327473044 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967086396 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.347120269 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.400921212 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.328074675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32766992 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9067993 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.346913905 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.332178754 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.743057548 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.34988285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597762536 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329531672 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.38564678 seconds)
  done (took 1111.712297551 seconds)
done (took 1309.165855739 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.328762416 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32937718 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.321229285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330293645 seconds)
  done (took 26.558419025 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.341330664 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.338388266 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.340111661 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.336316993 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.342098138 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.337611996 seconds)
  done (took 9.288491723 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.166731959 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.331312053 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338485051 seconds)
  done (took 20.087949825 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.576009445 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.772691004 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.718406861 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.843537797 seconds)
  done (took 11.164065842 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.339101292 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.339474174 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.339250668 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.342074368 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341777181 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.342537821 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.342638503 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342614593 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.342470319 seconds)
  done (took 13.321188631 seconds)
done (took 81.670415771 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.061242143 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.32438727 seconds)
    (3/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.95190919 seconds)
    (4/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455530713 seconds)
    (5/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.57754606 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.294382493 seconds)
    (7/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.397852825 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.602163151 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.379679514 seconds)
    (10/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357644682 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.371985615 seconds)
    (12/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.319137738 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.358655089 seconds)
    (14/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358684445 seconds)
    (15/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.201214303 seconds)
    (16/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.436931266 seconds)
    (17/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.360231793 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.867422639 seconds)
    (19/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.28204428 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.007704282 seconds)
    (21/286) benchmarking ("sort", Float32, false)...
    done (took 5.378883449 seconds)
    (22/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.685767977 seconds)
    (23/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.332346004 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.349338897 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.349743215 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.298435784 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.469958773 seconds)
    (28/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.106289483 seconds)
    (29/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.853709136 seconds)
    (30/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.382164679 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.037699323 seconds)
    (32/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.344095863 seconds)
    (33/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.333358506 seconds)
    (34/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.346438773 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.577072192 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.35385475 seconds)
    (37/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.285642766 seconds)
    (38/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.335384157 seconds)
    (39/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.334312221 seconds)
    (40/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.332856863 seconds)
    (41/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.851581164 seconds)
    (42/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.45595806 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.445933033 seconds)
    (44/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.359991542 seconds)
    (45/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.338100127 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.602210863 seconds)
    (47/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.015705806 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.237591555 seconds)
    (49/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.729228804 seconds)
    (50/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.973477475 seconds)
    (51/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.320332844 seconds)
    (52/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.604974309 seconds)
    (53/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.335936708 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.768904546 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.41092769 seconds)
    (56/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.775621692 seconds)
    (57/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.327616139 seconds)
    (58/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.341071866 seconds)
    (59/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.213130804 seconds)
    (60/286) benchmarking ("sort", BigInt, false)...
    done (took 6.359612983 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.1691757 seconds)
    (62/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.034294771 seconds)
    (63/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.352248952 seconds)
    (64/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.623249534 seconds)
    (65/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.385555286 seconds)
    (66/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.341238943 seconds)
    (67/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.376898806 seconds)
    (68/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.215596852 seconds)
    (69/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.322046042 seconds)
    (70/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.323221791 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.350024802 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.912055732 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.655280145 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.35089384 seconds)
    (75/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.383878728 seconds)
    (76/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.361185626 seconds)
    (77/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.355961513 seconds)
    (78/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.342712931 seconds)
    (79/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.513718641 seconds)
    (80/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.495475921 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.998609987 seconds)
    (82/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.089332688 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.053652688 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.371005 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.313280384 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.322739673 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.373473114 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.213559633 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.765911428 seconds)
    (90/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.226577268 seconds)
    (91/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.463583429 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.323344367 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.455530772 seconds)
    (94/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.1286421 seconds)
    (95/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.871015257 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.323385861 seconds)
    (97/286) benchmarking ("sort", Float64, false)...
    done (took 5.733037081 seconds)
    (98/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.324137684 seconds)
    (99/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.535758746 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53850018 seconds)
    (101/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.324339126 seconds)
    (102/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.486352393 seconds)
    (103/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.890460104 seconds)
    (104/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.420398703 seconds)
    (105/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.385765412 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.07111594 seconds)
    (107/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.123590057 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.362384543 seconds)
    (109/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.49543528 seconds)
    (110/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.465271578 seconds)
    (111/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.323848134 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.367294128 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.326650803 seconds)
    (114/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.087186863 seconds)
    (115/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.3549516 seconds)
    (116/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.222682389 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.367602071 seconds)
    (118/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.337326467 seconds)
    (119/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.365317628 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.336246729 seconds)
    (121/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.425980919 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.867810411 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.36872393 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.615707595 seconds)
    (125/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.328520351 seconds)
    (126/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.40479065 seconds)
    (127/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.426036318 seconds)
    (128/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.364180181 seconds)
    (129/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.331266904 seconds)
    (130/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.371067094 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.21154108 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.619637759 seconds)
    (133/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.325930649 seconds)
    (134/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.842539593 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.716167454 seconds)
    (136/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.089448026 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.337760745 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.45168512 seconds)
    (139/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.340683175 seconds)
    (140/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.332744959 seconds)
    (141/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.340163022 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.613333473 seconds)
    (143/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.615025005 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.22755046 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.368699948 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.166346036 seconds)
    (147/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.427373766 seconds)
    (148/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.349594991 seconds)
    (149/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.337132598 seconds)
    (150/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.331792023 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.414369807 seconds)
    (152/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.313387756 seconds)
    (153/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.760284263 seconds)
    (154/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.135840842 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.86364042 seconds)
    (156/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.965724506 seconds)
    (157/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.359883795 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.953300045 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.883553462 seconds)
    (160/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.245268911 seconds)
    (161/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.758499742 seconds)
    (162/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.40548381 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.427489628 seconds)
    (164/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.359502959 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.227183571 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.351195806 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.778362849 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.369107085 seconds)
    (169/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.328832615 seconds)
    (170/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.285861803 seconds)
    (171/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.237090966 seconds)
    (172/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.329420243 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.328815368 seconds)
    (174/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.431128993 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368362129 seconds)
    (176/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.369249001 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384393074 seconds)
    (178/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368862458 seconds)
    (179/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.342736886 seconds)
    (180/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.921812196 seconds)
    (181/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.710765009 seconds)
    (182/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.595008429 seconds)
    (183/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.343042865 seconds)
    (184/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.342256036 seconds)
    (185/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.740231026 seconds)
    (186/286) benchmarking ("sort", Int8, true)...
    done (took 6.344116973 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.430205777 seconds)
    (188/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.467864839 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.399586038 seconds)
    (190/286) benchmarking ("sort", BigInt, true)...
    done (took 6.343965503 seconds)
    (191/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.330050611 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.274660746 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.343085044 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352776588 seconds)
    (195/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.330677068 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.776886906 seconds)
    (197/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.388409575 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.402179058 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.553317556 seconds)
    (200/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.429410687 seconds)
    (201/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.724236368 seconds)
    (202/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.426525139 seconds)
    (203/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40794567 seconds)
    (204/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.965760994 seconds)
    (205/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.697050905 seconds)
    (206/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.372223778 seconds)
    (207/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.139204527 seconds)
    (208/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.886955493 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.044991784 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367893784 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.126862546 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.722014449 seconds)
    (213/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.349520816 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385641829 seconds)
    (215/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.455811091 seconds)
    (216/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.427217602 seconds)
    (217/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.414688965 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.342367373 seconds)
    (219/286) benchmarking ("sort", Int8, false)...
    done (took 4.38824301 seconds)
    (220/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.338817733 seconds)
    (221/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.361310714 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.459752103 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.367162802 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.1047153 seconds)
    (225/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.569341171 seconds)
    (226/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438692288 seconds)
    (227/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.502278946 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.337026266 seconds)
    (229/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.375798758 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.025344852 seconds)
    (231/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.346153771 seconds)
    (232/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.505130386 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.378708275 seconds)
    (234/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.332358996 seconds)
    (235/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.376296338 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.243478438 seconds)
    (237/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.392958565 seconds)
    (238/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.914880843 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.171451621 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.459633068 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.582175232 seconds)
    (242/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.468489073 seconds)
    (243/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.410590346 seconds)
    (244/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.465895654 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.372797595 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.402382911 seconds)
    (247/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.794101424 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.745405425 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.2661547 seconds)
    (250/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.402132755 seconds)
    (251/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.130071073 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.333543462 seconds)
    (253/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.172085217 seconds)
    (254/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.166400286 seconds)
    (255/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.335155772 seconds)
    (256/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.36035871 seconds)
    (257/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.867459542 seconds)
    (258/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.551937075 seconds)
    (259/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.381474214 seconds)
    (260/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.176039609 seconds)
    (261/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.357342617 seconds)
    (262/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.583053259 seconds)
    (263/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.373215959 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.380398285 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.431624835 seconds)
    (266/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.334783491 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.451038416 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45956444 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.201306234 seconds)
    (270/286) benchmarking ("sort", Float32, true)...
    done (took 6.350828442 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.469070582 seconds)
    (272/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.486682664 seconds)
    (273/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.375275002 seconds)
    (274/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.642901407 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.408675822 seconds)
    (276/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.661001229 seconds)
    (277/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.914980467 seconds)
    (278/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.33610619 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.395439661 seconds)
    (280/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.431927244 seconds)
    (281/286) benchmarking ("sort", Float64, true)...
    done (took 6.349316875 seconds)
    (282/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.397024469 seconds)
    (283/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.447985056 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.998389064 seconds)
    (285/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.661620542 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.396278746 seconds)
  done (took 959.646167472 seconds)
done (took 960.89882441 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.381164378 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377976648 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.359510072 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.381254304 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.472622445 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.535392201 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.369507351 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.36114644 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.408545716 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.409024669 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359311513 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.535113718 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361374318 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360390272 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.359121521 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375784509 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.54916289 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.361383286 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.3784261 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.370106738 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.377663374 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360692559 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.410570602 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.53684315 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.365336619 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.364121467 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.365315333 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.381322518 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.475027434 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.364874204 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.365364238 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.374310103 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.55121246 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361540279 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.357511519 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.382769961 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374154327 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.371558495 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.367245834 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.395242246 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.020894388 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362677187 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.364706649 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.363406739 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.363455069 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.366968424 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.36407728 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.368458913 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379154132 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377801379 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.012495253 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.379440827 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366464885 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.364626665 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374657122 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.363289456 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.367063142 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382360688 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.38421037 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381995669 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.540557974 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.36934768 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.366916319 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.380972048 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372501148 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.052665706 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.359782807 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.368537929 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.028281686 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.368786031 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.051112416 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.372774861 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.366015321 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.379336903 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.396297984 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.557748566 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.360004537 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.364578738 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.372422452 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.363798386 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375445307 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379553848 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371070292 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.366204553 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38030941 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.541553935 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.376039147 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367188851 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.375868061 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.385680086 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.374313232 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.377099988 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.369588928 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361913562 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.376589502 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.369436677 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369725635 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369291616 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371857431 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.376626117 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.026360948 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385844908 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.36360788 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.363890675 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.366909505 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.37981723 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.030315508 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.366936476 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.388729916 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.414146279 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.369016401 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.626122338 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.377558133 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38551125 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.376846406 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372154398 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.363058051 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.549221445 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.024309624 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.38334186 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.369898801 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.366724217 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385955072 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.370075555 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366017517 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.609179185 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.377664544 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38405167 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.489113647 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.37984339 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.400503596 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.36717043 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.37173121 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.399481749 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386620462 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.400725436 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373399867 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387482416 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385268658 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.365386855 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381908452 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.380609227 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371890311 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375567114 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364113373 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.40012068 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383703833 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383861735 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.390687718 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491546722 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368089749 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.55289295 seconds)
done (took 234.076293885 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.437775504 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.367898206 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.463489825 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.368330467 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.477377762 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.477850388 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.364409058 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.366272848 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.365112065 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.744659285 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364997239 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.365630277 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.364567183 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.365674588 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.458315792 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368297638 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365599104 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.708576992 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369841448 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.443323933 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.36060851 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366571129 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369047937 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.774531977 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363588481 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.360642096 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438966512 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369892277 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714829777 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.361450172 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.362670139 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717356661 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458249939 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386746581 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379912635 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.37646606 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.47377769 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.394200956 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451915942 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.458678825 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.452633032 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.409904285 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.36406046 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.362657841 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.374631719 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.373190636 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367364097 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396818349 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.364097483 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366872361 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709959172 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.381078541 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.376998369 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368401913 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368037615 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.393531777 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.36877967 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.372331049 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.467342666 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.373157836 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.434020497 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.819487466 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.748567931 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370778213 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.363119439 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369199219 seconds)
  done (took 150.944150716 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436559555 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.446701329 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.492001288 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.378133602 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.423063365 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.498780786 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.373387511 seconds)
  done (took 11.330464438 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377484694 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373067773 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420721647 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.423100294 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.373019128 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.551109079 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37239253 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383040656 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.369638943 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423981666 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.376958737 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373279808 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.378945594 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.372033617 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418722093 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383343338 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48840705 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.373411295 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375056904 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.524269863 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3710226 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379576681 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.42543046 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384373445 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.37687021 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379887196 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.205726352 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375830654 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370091274 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373599197 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371626261 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.454386597 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374690915 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.366566909 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372239728 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.488085502 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.375743281 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372280834 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375311207 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.36861918 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374298892 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374778378 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374290043 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371981429 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374081213 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.397419586 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374327346 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374425703 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374888099 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375829022 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.426129057 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37590133 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.372469171 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372775418 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.429490572 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382369745 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.378112253 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373114929 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.376737039 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373088901 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525721764 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423099608 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375546826 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423056992 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376368998 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37633132 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376432075 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376252115 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431100295 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.375869613 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.42405586 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.374367385 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.556390995 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399995549 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378623013 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.379064324 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.37803266 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379366369 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.370141898 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.383233272 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374826456 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377390016 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.383033256 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375307972 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374916345 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.547940215 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483298928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375286965 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390587933 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.383830593 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374921101 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430857937 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378743901 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375414225 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430057736 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492904575 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.429564615 seconds)
  done (took 157.667155631 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382126389 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.386346146 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.380980333 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.402279901 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378665841 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.378410261 seconds)
  done (took 9.596322688 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.380543323 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380878471 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37830905 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.377934979 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.381207404 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382111988 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38178172 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379985205 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.385715716 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.379800105 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.382495201 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.381806761 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.382903108 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381922639 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.381842009 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379959678 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381936361 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377567833 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.379439034 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381172437 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473263365 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380936052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382008918 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381100512 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388352659 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379728154 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387801644 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380274914 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.38054988 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.388541734 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.405355137 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384259995 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.38226171 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.388281391 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.387312164 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.382162131 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386053283 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.382828381 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378226606 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384448961 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383871009 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38303593 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.381671559 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383066026 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38382772 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.388316545 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.389069464 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389059968 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.385727324 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.38394129 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384815009 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382507422 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385551229 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.385513902 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.383475368 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407332291 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.389211508 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.38441903 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.385116121 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.384820484 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.386037404 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.386934731 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385591304 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.390409286 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.39066304 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384847987 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.385417853 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389757723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385253354 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.383361327 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386011026 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.382260354 seconds)
  done (took 102.054763024 seconds)
done (took 432.871819151 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.744377196 seconds)
  done (took 8.037303081 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.607169868 seconds)
  done (took 7.902091823 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.940028196 seconds)
  done (took 25.235210149 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.449601503 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.420111839 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.380942605 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.383156162 seconds)
  done (took 26.925603066 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.714664038 seconds)
  done (took 8.006300102 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.375342126 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.391951698 seconds)
  done (took 14.060343557 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.653496603 seconds)
  done (took 7.945077297 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.461378439 seconds)
  done (took 7.759232174 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.377944646 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.408344846 seconds)
  done (took 14.091996492 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.368938419 seconds)
  done (took 7.660585611 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.3695051 seconds)
  done (took 12.662785631 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.381746798 seconds)
  done (took 7.675849142 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.44326304 seconds)
  done (took 7.735442966 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.668970455 seconds)
  done (took 10.960737407 seconds)
done (took 167.952668498 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.376391314 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.38384246 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.383785377 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.385009947 seconds)
  done (took 26.822171043 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417068872 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.418115468 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.418793372 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.428355717 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.420823252 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.417241683 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409876288 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408647889 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.42906182 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.421272247 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419911379 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.418462122 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418124514 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.408440701 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42035817 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.419414392 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.427865421 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.419897915 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410368145 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.420544764 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385154953 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.429009893 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.421480582 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384837651 seconds)
  done (took 35.289037132 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.911561058 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.459274257 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.539102922 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437154164 seconds)
  done (took 7.640789299 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.437290577 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438677235 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453863951 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490884878 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.52128069 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.448557769 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.412941219 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.407100194 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.392898108 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.439009357 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514584828 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.455787389 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531579665 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386019839 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.650222354 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385356288 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386047987 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438055734 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.489878008 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.512578309 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.386568139 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.43737762 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.442766124 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.455733682 seconds)
  done (took 36.209443367 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.386536163 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.404883315 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386113187 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385108405 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.394220308 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.385628799 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.387021189 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.38701382 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.385670177 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.392579399 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.385766917 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400481611 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385788163 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38576467 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39242659 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.387047112 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.39258733 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.386117636 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.386643523 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.391916368 seconds)
  done (took 29.084927762 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.380467741 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.280885108 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.731922356 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.636981989 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.38052356 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.380754371 seconds)
  done (took 29.088257356 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.472344185 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.640883303 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.394932052 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.815921659 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.891948305 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388837304 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388898808 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.668510931 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.083507465 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.066279032 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.455752121 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.468485369 seconds)
  done (took 21.036249608 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.381345362 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.38110528 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.380576043 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.399043488 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.452504193 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393396353 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.39618076 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.383082368 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.462591367 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.459702217 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392627982 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.457494166 seconds)
  done (took 38.237995855 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469577316 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433184036 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.545323317 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438685492 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161935571 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596467827 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421707699 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.209470593 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.41934993 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661077937 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387872843 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489160714 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642787518 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385837135 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394722593 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.564561161 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619475749 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93029528 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388020967 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.939669352 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412782836 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387696745 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.045307819 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670692768 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60660115 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371180569 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648875801 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164678587 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733976749 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408020574 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399308435 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387309825 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661222459 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.666965217 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490987703 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6495812 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418059905 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936624674 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.38059553 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.930967715 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403763246 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38999818 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398644752 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388320857 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323006867 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39201033 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890408628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401340802 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.100526363 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388921171 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708598432 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491043518 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392780257 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.963085065 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441510165 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396268747 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.393397868 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489071093 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963327823 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306486318 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397749088 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.33196806 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393368338 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945582111 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084779727 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395707985 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393757233 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395365554 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335127342 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.942103537 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406719823 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607085588 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416435729 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149734272 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246441578 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410890648 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333455165 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999591324 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404011345 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.33265724 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620199938 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168475591 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331926401 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.335645069 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325015905 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17477079 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399383453 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.931522409 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413748696 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.215175044 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684438791 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418203645 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41576089 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615833479 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.277257487 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391577016 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.396740661 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587726258 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415409701 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235089136 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366200239 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396636484 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650257314 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.604843692 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40479332 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.54428377 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539208976 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399111366 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.4325892 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394667809 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663934711 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.067122866 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412001865 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396661715 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415544855 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.171880418 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210456838 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401729386 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404030824 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394170947 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703349578 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.275421986 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278561382 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462447444 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399497354 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394612942 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.958958353 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246076305 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.553666233 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.64879647 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427610896 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.413971451 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.398199364 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39423879 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.394632894 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394378242 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.193373597 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619952115 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395057587 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679565206 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330228436 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.612229776 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.506615593 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.62001716 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.756724413 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.401336171 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657309048 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40210871 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412928063 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414389537 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414967681 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495074702 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41917843 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.413102801 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661910274 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399373424 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400845983 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.968007406 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.176347661 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39928365 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.402184333 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403839452 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064931954 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445973135 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405134964 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2914697 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412339456 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466214005 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403960982 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662053961 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 4.050042639 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423506574 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.403025903 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.409071916 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622012538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408830021 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.968990441 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478804827 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.974244413 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097120511 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412775771 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.332813619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.109709201 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.091555117 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398829879 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.589843275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398905825 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662569249 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421637384 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415156208 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.077369902 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401492421 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.987560159 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.405813446 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412406309 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.753625136 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401138576 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.964752125 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355556021 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414091134 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.418290396 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543604126 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.413683448 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335003153 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916895138 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405340193 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402267106 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.177219611 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436216235 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.980783414 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011863037 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69062697 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401524372 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721135162 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.070166662 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.435908922 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.405948873 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403965551 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40205363 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.42004996 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409745487 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.412157507 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.974223823 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958537652 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96914672 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267050279 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01226709 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.979289495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.417199992 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.291424865 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248547593 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365898558 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061590159 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681361462 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240039845 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42665577 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.57429183 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.775720506 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324486962 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727693689 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638407817 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.968176163 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.42036209 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723164171 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622622279 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437015072 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413153644 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351005712 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.927303233 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726835387 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418282986 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484043664 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878037023 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420138223 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183840203 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.458236941 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.285328759 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.380126557 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.957672422 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.830826316 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405341805 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424039986 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010994598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44216315 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932762044 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108547315 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416144243 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.989646464 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373916059 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669592578 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.423625542 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.408962085 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.289247097 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.402500831 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.661795604 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725567723 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347026041 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417569069 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034424439 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.266471705 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.410077447 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405608995 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223719745 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415262517 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760677957 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.418605043 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.985112553 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406983009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.340079684 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340076853 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.09827867 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415598961 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451138253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957323057 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.419579712 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415017631 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409349381 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263442258 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.663975571 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421023546 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099389075 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640990847 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405518632 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429691142 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.411464265 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406790589 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.394479182 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.307851365 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642242042 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45565617 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632447697 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.637459355 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.321902123 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433688954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618907699 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.304663518 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412719253 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693439602 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.125491253 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.422408897 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26039776 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433203513 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420056116 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.521673376 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40991569 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429490611 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47865111 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674027577 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.42701366 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418902726 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.354784211 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415633663 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417940952 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.421633482 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502170618 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423126175 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.994383214 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.181682193 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09410393 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289510667 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108775557 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741404366 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41758894 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414471276 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352452888 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557685607 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938714193 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682927985 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608886694 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.426541138 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433409304 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409771821 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447523497 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628562833 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684014916 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.285446458 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42691284 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08011275 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.292499486 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421170471 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.622676278 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964462898 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024907284 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531867346 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413531881 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270159609 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714546711 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502719027 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412447333 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005928772 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.435596444 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.388790769 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.423944029 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411524352 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585900546 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735556352 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.693848921 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.429499155 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.567555677 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.185615378 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013510537 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668847802 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.985856766 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.6804871 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107419941 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254822284 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684960421 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48224933 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680328039 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.534896909 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560458939 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.42240964 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.295274727 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412561327 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260325602 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.122911968 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421940484 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104699878 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678319613 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.416525239 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.412801798 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44385984 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.422595007 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.638880511 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206851176 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639177564 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42539516 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422506963 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.98778228 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120329343 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750437544 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366879938 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.418306043 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691276612 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659113427 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439534544 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.867115299 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.1255381 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034479059 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.390142106 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436558445 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430510107 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268707719 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114036952 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 4.049063131 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97015715 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.077720723 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415723872 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696568467 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.420318 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434232196 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698148349 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419152357 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424751096 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692999959 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.097633446 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.361112493 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.427811108 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.045642038 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.352788739 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.644767097 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417436534 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387937143 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425911947 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.934016363 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448535102 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620525968 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427846375 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.416863807 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424906132 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.180972496 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.819073232 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.423431275 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.40487046 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.415180128 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439959945 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521884377 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804817351 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429596374 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.0929959 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.768134383 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674810512 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.429891675 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.410303462 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.422614213 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418030045 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173592157 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426533611 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432566136 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035920233 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.428179319 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.437184803 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421232048 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.635160675 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630295745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418444362 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696501167 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434958342 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440803976 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.408200678 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.286154499 seconds)
  done (took 1733.702965699 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446250456 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.472313026 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.456933896 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.482432448 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480022558 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.562730494 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.508086444 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.553088189 seconds)
  done (took 53.29296947 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.423067891 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.582380609 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.454489507 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.419840196 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.428595075 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.419499592 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.986707057 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.439344343 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.429477235 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.430826484 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.419874671 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.434604588 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.143220598 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.429418838 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.420864052 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.417158911 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.428850806 seconds)
  done (took 67.0466455 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.294117667 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.726594713 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.162626409 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.488058705 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.465053282 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.453224653 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.561469756 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.452999182 seconds)
  done (took 55.938029542 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.438240334 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.438498157 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.440207682 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.438924053 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.439408188 seconds)
  done (took 8.53000784 seconds)
done (took 2143.215027063 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.425799747 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427038314 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.424888593 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42811761 seconds)
  done (took 7.040282489 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.407726872 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.156959978 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.408540348 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.431215098 seconds)
  done (took 18.737989804 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.426391581 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.436166192 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.311078149 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.208308626 seconds)
  done (took 5.85504045 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.172468978 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.181562286 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.167986126 seconds)
  done (took 7.857063075 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.41788137 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.427371041 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.425344904 seconds)
  done (took 20.60387714 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.728573711 seconds)
  done (took 3.065120024 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.568524988 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.618086159 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.767272076 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.762514957 seconds)
  done (took 8.050381179 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.809398027 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.810009415 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.608978831 seconds)
  done (took 6.563059166 seconds)
done (took 91.971471525 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.887109473 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.439834947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.61778546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.865356153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.706404755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.619765761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929325795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.831734417 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.37015917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.360165158 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.868183471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.73040286 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.649624131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.440239432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.650234788 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442862679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.836642288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.933658297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.43547581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.436605983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.929258978 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.502241411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.694009062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.522184627 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.835801021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.57952992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.084452076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.444128261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.42601216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.107767349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.578993152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.42360287 seconds)
  done (took 202.514932976 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.427873507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431940424 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.425098616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.442079979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.423071863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.424404873 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.44739157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.437890149 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426284446 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.422872835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.444488838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.443061601 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422242177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.423358558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.426080274 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.423508953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423043449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423593715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.443952116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433233445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.423134802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423741428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.446129798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426907311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.423563017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425976803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.444733652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424451463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.423892785 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.435651207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.425542084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.44464181 seconds)
  done (took 207.12061443 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.429105849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.437455357 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.425766335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.424708238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.424594223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.426677759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426377213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.42549735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.4241906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.460185337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425448661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.425195176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.428382753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.42523444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.449032664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.426188335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.453418352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.441742892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.437444393 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42965418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.427752307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427150678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.440534358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.427787087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.433203447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.443962105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.433031474 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425390516 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.428088066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427002743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.466787178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.427123863 seconds)
  done (took 207.191292431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630503443 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.433493341 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.434966606 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.373823956 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.434984914 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433332024 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.431151613 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.637613868 seconds)
  done (took 15.150118917 seconds)
done (took 633.311818843 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.912638134 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.610632551 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.647521033 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.454591826 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.364110301 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.476360052 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.455190402 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.653104908 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.420885012 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.663935607 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.800043652 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.452571179 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.949772352 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45308173 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.7410432 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.564602567 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.422374873 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.533205768 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.807436684 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.116401849 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.744012007 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.06342435 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.661195937 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.425267124 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.97268702 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.060439891 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.291217462 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.407716149 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.47580032 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.818648443 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.319911331 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.62714623 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509812814 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511653133 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.569191567 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.56824599 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.547765482 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.529038452 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.655366064 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.825646614 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.122672116 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.241166754 seconds)
  done (took 98.789509639 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.425725038 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.426901926 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.425698819 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.426639192 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.428443611 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.425207406 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.426193027 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.425374708 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.42695279 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.426217175 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.426049655 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.427618824 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.426046003 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.428143901 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.426306019 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.42631113 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.427210239 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.429302835 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.425747917 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.426772209 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.427427457 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.425972687 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.427188458 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.426920253 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.427258044 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.427351229 seconds)
  done (took 38.440692518 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.439661439 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.707027549 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.900514757 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.445999244 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.43965173 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.443263102 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.537411743 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.448549718 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.443518758 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.443658428 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.628791284 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451367771 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.480138914 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.931845127 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.443554897 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442235989 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.44328589 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.442180004 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.715456726 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451760846 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.558779869 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443541697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.535155219 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452401787 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.467476956 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441647667 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.446510043 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.015161502 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44368496 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.624913983 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.422163057 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.539566028 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.961302428 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.916902176 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.42378512 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.450841919 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442155673 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.630835772 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.444537539 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.441245796 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.534790677 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442661197 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.912009834 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.136132759 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.465009824 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.442063374 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.047667409 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.630324614 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.740140379 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450672186 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.944587129 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.448488792 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.444326033 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.444402208 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.740384415 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449307131 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.442437647 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.048456381 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.468742099 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.536592958 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445141897 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.443960569 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.726003104 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.444577325 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.71282877 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445694364 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.451481793 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46759416 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.914331332 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.44688655 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.164203917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.466416486 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.444285928 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.627369393 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.715212907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.076759996 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.448344946 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.732588716 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980055719 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.536863211 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.448659455 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.005705156 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.540198201 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.449652647 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.44819808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.447221532 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.446561716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.497219437 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.536078537 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.095558321 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.158510075 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.084108051 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.561292527 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.453918579 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.446128815 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.049255292 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.467350719 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.445667005 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.911630963 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.167066605 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.467717718 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.454049154 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.166981598 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.470181047 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.5411658 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.452824687 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.923574198 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.448026381 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.499572233 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.447781962 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.454611733 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.474511107 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.540957374 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.451754299 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.447937302 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.134692671 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.659215249 seconds)
  done (took 191.286311103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.440636003 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.440990146 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.442033198 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.440780497 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.442230887 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.449059607 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.44149889 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.441037168 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.446471339 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.440426478 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.441407598 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.441824009 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.443307155 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.469870455 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.453091255 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.449563389 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.055746028 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.442676005 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.442619844 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.461300315 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.284283078 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.450851512 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.442256365 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.463725287 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.443084477 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.446481874 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.47144681 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.445158495 seconds)
  done (took 155.32765719 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450487403 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.125256845 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.453747407 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.613773394 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.479469703 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.447827067 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.605927677 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.522010122 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.458090022 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447541278 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.447637618 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.812420869 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.451378993 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.068827547 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.691704246 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.619899679 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.073877578 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.472000618 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447753085 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.448143571 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.616958514 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469374631 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.818317633 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.146871125 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.454715834 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.129429613 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.441780091 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.451959342 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.450170417 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.130486727 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.449284006 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.834127856 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.549108809 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.526181679 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.187872459 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.111577316 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.100116453 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.629588173 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.450775636 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.449056311 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449718389 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.441025104 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.180604453 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.460954216 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.452744457 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.129746306 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.474146084 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.452720863 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.456988949 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.44991834 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.527200291 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.535430953 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.828718465 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.193469941 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.553129849 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465406697 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.609795576 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.88201838 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.457288794 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.073269656 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.442265718 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.19672547 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.484200723 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.44051765 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452663613 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.457815864 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.645844616 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.618919554 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.078419267 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.482729715 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.076419261 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.664112288 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.460400699 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.452914188 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.454635369 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.195803361 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.087100865 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.661412629 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.6187872 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.699869399 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.449526466 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.454038226 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.443984497 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.547692688 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.453403227 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.202182478 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.106181515 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.475939546 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.456817988 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.455542505 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.456773916 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.676374345 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.210292175 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.556493465 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.075130958 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.876003388 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.860630416 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.461791323 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.529005849 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.478696167 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.858693829 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.463674758 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.527682813 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.94675279 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.859439169 seconds)
  done (took 176.522565727 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.73734376 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.775372326 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.560475113 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.636331969 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.151848591 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.079738861 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.926554479 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.622906611 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.585414575 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.758929727 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.869794706 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.554592919 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.699507348 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.545536493 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.256818894 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.538849352 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567894739 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.621621924 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.6197716 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.546415191 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.225813959 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.773780703 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.673443265 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.620094614 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.571489152 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.345939307 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.067859158 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.062035291 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.675065682 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.013210084 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.060254545 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.645615718 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.594626757 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.272526308 seconds)
  done (took 71.620481507 seconds)
done (took 733.329234053 seconds)
SAVING RESULT...
DONE!
