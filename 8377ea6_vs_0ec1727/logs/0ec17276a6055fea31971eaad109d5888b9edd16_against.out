cset: moving following pidspec: 24502
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.376954652 seconds)
loading group "string"... done (took 0.568618691 seconds)
loading group "linalg"... done (took 7.342302385 seconds)
loading group "parallel"... done (took 0.173002255 seconds)
loading group "find"... done (took 1.14507114 seconds)
loading group "tuple"... done (took 1.818025355 seconds)
loading group "dates"... done (took 1.232262835 seconds)
loading group "micro"... done (took 0.227828965 seconds)
loading group "io"... done (took 1.0423357 seconds)
loading group "scalar"... done (took 41.635191003 seconds)
loading group "sparse"... done (took 13.77092839 seconds)
loading group "broadcast"... done (took 1.089738237 seconds)
loading group "union"... done (took 14.720841655 seconds)
loading group "simd"... done (took 5.141747941 seconds)
loading group "random"... done (took 10.305332534 seconds)
loading group "problem"... done (took 2.051633075 seconds)
loading group "array"... done (took 24.667838093 seconds)
loading group "misc"... done (took 2.199829592 seconds)
loading group "sort"... done (took 3.74205255 seconds)
loading group "collection"... done (took 20.7698357 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.571064654 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.160037064 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151151898 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151705541 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.194769327 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160338869 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160310765 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099005207 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.033543784 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18020496 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155924796 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528219336 seconds)
done (took 5.383020375 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.266470601 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094161525 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106669424 seconds)
  done (took 0.984539413 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077406287 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144400116 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09986551 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078118576 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098076453 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077798948 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096590101 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077804251 seconds)
  done (took 1.455449928 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086025518 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099213005 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082095224 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099144663 seconds)
  done (took 1.147406447 seconds)
done (took 4.71934581 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.729534309 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.289960422 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201922947 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.475799222 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202828179 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219618304 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.750924013 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365891431 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252341152 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103075444 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.137498988 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395489336 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141039278 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.740638471 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091099333 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128017939 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.184583885 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.476442659 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082034898 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111938664 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11823986 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145374445 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.134667238 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092807411 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.191021834 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080330385 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198401206 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110570495 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080245927 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.283542516 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203677565 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.749991595 seconds)
  done (took 11.294061141 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109847267 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133623541 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100034149 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139516802 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136640119 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102521586 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085585292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098779278 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124479392 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179153449 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11578148 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140164226 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097723388 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083597955 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117836495 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246678688 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104961041 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117223697 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102228681 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089123382 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140343782 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114859334 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094221796 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.1114781 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169565329 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211660234 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.127786651 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129207227 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099859441 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098394275 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146979465 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161872457 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095845824 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082531474 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176258858 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124443815 seconds)
  done (took 5.307637642 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.09438587 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196275144 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126029991 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174788275 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132005275 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081926845 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147609907 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.098860602 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116923815 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247655267 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.126210958 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.476960609 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143792362 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117911679 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101117068 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083984667 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099867781 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.465380542 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161976291 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13790929 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09845891 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106981608 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103611898 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.435735265 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08196401 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.102010493 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083785764 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085637043 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165515914 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082783244 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.214470259 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101331728 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106647079 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137710702 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195758669 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125968108 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128062807 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118820102 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100836261 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078092718 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19819998 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090372009 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099702312 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105160446 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138565619 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138830571 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099193204 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083473783 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201753521 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100514672 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096783665 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098399487 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.939547537 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183362919 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126868531 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102704197 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.312359301 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101388806 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10007862 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079389757 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.304102113 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197231919 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101539512 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099068853 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081136948 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100872719 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383383541 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082341502 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.102945788 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081999693 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109991376 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083639215 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099890428 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106074923 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088658995 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119910997 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081518685 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102587298 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079713809 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099020414 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081834108 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112517437 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.222641961 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100937871 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080743612 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099182382 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099978993 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131065086 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102850385 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079067925 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134475151 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102929241 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081953708 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098157563 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137190138 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082343239 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111821203 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102628996 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128868518 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100943983 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.14319795 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097605847 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125656923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08593355 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132693931 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116067973 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100975482 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171917252 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079646218 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098370518 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.0812439 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098570648 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082440957 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101771259 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092772603 seconds)
  done (took 23.56023979 seconds)
done (took 42.040869592 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.334763243 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108543325 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108021658 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111332714 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087209356 seconds)
  done (took 1.609495317 seconds)
done (took 2.447795243 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.169363316 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118012376 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100500894 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.133103127 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078743678 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.14027461 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.135460619 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096638135 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137619362 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09738963 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112778624 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098897066 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077822087 seconds)
  done (took 2.356927539 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095559649 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118638845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08417183 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115236643 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077306356 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115679241 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093671346 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121791918 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112614709 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086587663 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096532643 seconds)
  done (took 1.943845831 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094618985 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116097701 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084291143 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114395921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077460332 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114107574 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093177949 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121218681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113364616 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087275326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096490042 seconds)
  done (took 1.937679495 seconds)
done (took 7.0640592 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092307071 seconds)
  done (took 0.917214218 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.961305549 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.02470907 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.09589761 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.172311378 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.320480019 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172541182 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.501221913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107782182 seconds)
  done (took 11.375831356 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.128476808 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104989049 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105280605 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083882466 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107807293 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083057349 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106912988 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104232174 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084942405 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104798515 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088025344 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106311177 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083877229 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105970143 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102732956 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0839825 seconds)
  done (took 2.473158006 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119369115 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118084648 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11084505 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113115438 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088183601 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.109910652 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109616588 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089737216 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105750658 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10640275 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092199137 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109649605 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106452556 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080850752 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110093763 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109888746 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087227331 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109826504 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090421824 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111462609 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110906135 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080369961 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107670654 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109351207 seconds)
  done (took 3.429173906 seconds)
done (took 19.025530165 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160028059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111647907 seconds)
  done (took 1.102273624 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096564717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116854337 seconds)
  done (took 1.047555776 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096622414 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099785224 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125504387 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112946019 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082177242 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100743509 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123162319 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082376522 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101407258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081329164 seconds)
  done (took 1.843787483 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083286404 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.114401269 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104724631 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096772861 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109122703 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097587145 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090697242 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103155943 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113909465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079469978 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105703817 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117761524 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087339063 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119702643 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108060977 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083847719 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105768565 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102566496 seconds)
  done (took 2.662751707 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080748944 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100532853 seconds)
  done (took 1.018349766 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082524733 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097659027 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082027095 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10094154 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096924646 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078337772 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09765183 seconds)
  done (took 1.472418182 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.44480887 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12018325 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.287982104 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085710505 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124711165 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305369111 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.102686277 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086561893 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107574817 seconds)
  done (took 2.564934928 seconds)
done (took 12.547133234 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09433665 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11881523 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113902947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.474076022 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109210272 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102970809 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.151118651 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255982079 seconds)
done (took 2.262990964 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145585198 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.577927685 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.435240893 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.23934361 seconds)
  done (took 2.09699445 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407558531 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100465268 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086677674 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083410485 seconds)
  done (took 1.524717939 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080634068 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103020588 seconds)
  done (took 1.030058744 seconds)
done (took 5.645593291 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080482041 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.135896437 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079987382 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.101997898 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078190192 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103720705 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078133465 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.100013189 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080842183 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.101128983 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.081403947 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.102254852 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080899123 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099573198 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078619911 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102977145 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079094403 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099650555 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078570407 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102655762 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080844169 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.099205578 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097405407 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083181572 seconds)
  done (took 3.089039447 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099509128 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10226793 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107148911 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088409727 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105786373 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087057953 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107186155 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100990774 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087543266 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103466421 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085355087 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105207475 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102679173 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087289792 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103883323 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086237501 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.107106816 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101341143 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084523614 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106427993 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086590579 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102322167 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105208057 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087548785 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105970958 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105052054 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085166576 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101951354 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088204743 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.105836583 seconds)
  done (took 3.782262756 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085698555 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09770208 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080833438 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106625106 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079258906 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101425119 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079572956 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100110026 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080043223 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099252253 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081163182 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099675237 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079822671 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100986333 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07959473 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103532642 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116483255 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08140818 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099825748 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08106173 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10282215 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079952952 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099622007 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080693578 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098387901 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079825653 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099259863 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080578863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099841648 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079208978 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103457199 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082845447 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099016262 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085710131 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104161602 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079067071 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104010522 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078695774 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100772585 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078491201 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09959335 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0788862 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.100516263 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086413906 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099410589 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100300121 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.082158828 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100947194 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080744926 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102749692 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079744115 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099192615 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082244024 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101728616 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084743509 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098779243 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079954597 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100032187 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080733632 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.100273687 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078737814 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.099839301 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081574866 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100692739 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115064452 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087444757 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099498441 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082779147 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100618485 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083061707 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102265422 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094623367 seconds)
  done (took 7.467124321 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13959899 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130554767 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083304089 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102322971 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079056046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100513227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083474407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101014667 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100131575 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087472448 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100422915 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081943568 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10177241 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095329615 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101659141 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081758224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106825277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097649839 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080911523 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103697131 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081038305 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104422952 seconds)
  done (took 3.001992903 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212782067 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108336729 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147585631 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111253998 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08535005 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111236941 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106274031 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088354361 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106377135 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085006676 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105479307 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10635813 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084983834 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10534145 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084598399 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105587484 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106702862 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085415617 seconds)
  done (took 2.803129287 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093923737 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103075751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105767303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104156653 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103663745 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.201152142 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109126368 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111950204 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085635352 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102759769 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092260071 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106297221 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104058975 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084274809 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105059558 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083626815 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105222821 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083398355 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11258005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108814626 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088473384 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11226804 seconds)
  done (took 3.169598401 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097648795 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104726742 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121944926 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08752672 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098698598 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082804871 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109455877 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082538007 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110174055 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103459055 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084227579 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100721512 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089234265 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10341241 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087481865 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104578029 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104375727 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084075892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105402749 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079450374 seconds)
  done (took 2.801959012 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102693967 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106153128 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084389209 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114014815 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105261073 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084053699 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114200931 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1045747 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084999781 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130208823 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105223202 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083710335 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113523237 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110320654 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08367161 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113805611 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113932974 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112428522 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084832321 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104538135 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130578935 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085869194 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113961639 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10463922 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08606654 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10498273 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084823708 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110175517 seconds)
  done (took 3.742144489 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082545162 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103350878 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082202846 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100691449 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081726882 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100178353 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081373301 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100290186 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084407062 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099706417 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084688036 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103155699 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084774625 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102834319 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084605878 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102807374 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083959291 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.101036572 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081072108 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100257354 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083685591 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103200959 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08416174 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100938628 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081145888 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103283387 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081692534 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100961437 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084360295 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101311547 seconds)
  done (took 3.637384989 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091808628 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111410263 seconds)
  done (took 1.068281794 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080011372 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119325058 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080841539 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107714034 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087744501 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105755611 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111299034 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088276072 seconds)
  done (took 1.646822151 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098503002 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115835918 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085143694 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118644579 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113878571 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099971404 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.177998173 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106653921 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090314105 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.104727279 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118026493 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083922855 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11083332 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084329734 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110672531 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090342627 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.103012206 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109589154 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088116501 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10249454 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085864228 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113568248 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086812727 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102444942 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087686593 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115252391 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117760499 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085153784 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108246543 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111166119 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.094151924 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09842023 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08557318 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104959731 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082307499 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115317355 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120998408 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087542665 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114474799 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084764308 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116535123 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099401062 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089819235 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111670934 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094345287 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106325418 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084512033 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100357939 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104479064 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088320859 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098904363 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084359395 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0990082 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092278566 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108912508 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095353372 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104107803 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105287248 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088246958 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108633161 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091471446 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106767877 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086376724 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10505768 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093748852 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.11120213 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114813056 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079927543 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09874494 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083512746 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.115470217 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129185864 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091930856 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106059213 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085799083 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.103668748 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088089569 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10696193 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110723079 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091609363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105019803 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091236972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113084025 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104074361 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087956733 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113660162 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082414823 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.108605387 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081076983 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122301304 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103236723 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081941797 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102889603 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095360822 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.109155005 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104297899 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083186504 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112426311 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079047935 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105317486 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085397871 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106349356 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114989857 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091167687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110843689 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093292006 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.11300092 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104489275 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088323186 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101565618 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08634028 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103990897 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091210717 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099661635 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086857695 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106316391 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084204576 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115336789 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102950283 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085596372 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113692889 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090187157 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104745238 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080284785 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109640076 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105110122 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089401493 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114225097 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0830693 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100816586 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079526514 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110515405 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.1039063 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088749746 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110348103 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088110409 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100394936 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081597239 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11070795 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.116035246 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084792194 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106206043 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090639268 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106614527 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082695204 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112189997 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106930714 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084038118 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111621775 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08438607 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100695537 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08758214 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109031391 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102301021 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090279582 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107755373 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087071552 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105817183 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082879964 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111111578 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105310139 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083906258 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104514722 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084017327 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11660889 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086609566 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101198487 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08112368 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113563479 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101961637 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085061897 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104034893 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087050691 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106080665 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082480687 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.105657627 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08614465 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118272647 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110485025 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085921012 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111436503 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.117064382 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085422312 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.108239855 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085390171 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106487785 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085712098 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.115759183 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089601297 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113348242 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108083475 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081548941 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111833706 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092818582 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105933291 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08175298 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105023444 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109127163 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090130551 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110116847 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084946069 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104017392 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084935222 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109834954 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107964372 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085029274 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104344008 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090001487 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105441941 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112627277 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086947392 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116576427 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088066701 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101672897 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087225442 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105206512 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110831533 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080490534 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102874939 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084367558 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106467081 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084684702 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109192612 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079061758 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113289867 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091533007 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107218388 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104429967 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085462547 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1123237 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086705342 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109836358 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088358985 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112788969 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116613598 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085215536 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108953489 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096536357 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106613791 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078488304 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112030865 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104465995 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084972264 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104949003 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083886279 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109353902 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093687819 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.114953999 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099553436 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088546731 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104419516 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085120241 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101203324 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090098175 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110049772 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08614177 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11396665 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107985642 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086582595 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110122247 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084833522 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108859289 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08638107 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110121415 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08562739 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.109926371 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104909793 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08896245 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105210924 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082864289 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108392063 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085294218 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107123776 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089910368 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106435808 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105081684 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088365474 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107374863 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08684979 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107527703 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084219391 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110080753 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085552102 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107163258 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087317931 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102553094 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113821775 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085226756 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114427851 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085591364 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103666644 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090065251 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109822336 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111464253 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086769059 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107776183 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087716476 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10768348 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087960619 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114035668 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10301744 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097912587 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11651007 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08580506 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.111139422 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084819378 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108731744 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105115999 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087681978 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106456763 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085958397 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107003073 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091270448 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110961995 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085349082 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110381153 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106728458 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087282815 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108457864 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080613316 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106137942 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085517964 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107287801 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096743883 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108495975 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105964877 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085696223 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108131825 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085500734 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.104049556 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093181116 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11725015 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106913607 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092887773 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106822572 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086303966 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12020554 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100236346 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084965208 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104524338 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084024507 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114739651 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087482962 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118502315 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084853733 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107272729 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081744357 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108331445 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104514205 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081337193 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104252742 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100391118 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10590646 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085135707 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106992985 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089195944 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108708719 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117375219 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086521033 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107766099 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086266944 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104337256 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084533647 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106637997 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087826595 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108332408 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082717521 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105200621 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106079283 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088163306 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10852938 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086518387 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109644733 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095668239 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107491269 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088177545 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111622141 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.102509938 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090503459 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106499259 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085461925 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10631989 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090265826 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111619011 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087252612 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118101729 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106835314 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087241782 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108101123 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083958498 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107427265 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085782727 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108707703 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084501212 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109915882 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11614763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083935313 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111463786 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08620392 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108402923 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093202511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108579706 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110268835 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094811724 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107939418 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087835742 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117243455 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110925556 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090842419 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108639509 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088265796 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114993109 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084474187 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114842745 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085114892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110048994 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108723287 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084666144 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106751573 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086852641 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1069227 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092453344 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.110001257 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084641495 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107426885 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104484605 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08868197 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110427082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094347205 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11053021 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08848992 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103733711 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08252594 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110209177 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104306596 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089635495 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111488537 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093047229 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110650606 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086050382 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10767233 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095433966 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115271099 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111253725 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084338788 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111798919 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0876312 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110805803 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086940403 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109125243 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107621545 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091703033 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109478039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086185887 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115473398 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089975069 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10978125 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087036438 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109762467 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10730659 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083279455 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108319632 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088966457 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113766656 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088675562 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110007789 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11938653 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085241053 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108151193 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091944345 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108713 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090677081 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104617717 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087641537 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110350499 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108838019 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082660614 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107351056 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085048688 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109871267 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08562876 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104379009 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098013451 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119312137 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110664368 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086252027 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10707213 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08208191 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10380255 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085627692 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110165248 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088131774 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120881669 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106082566 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086596417 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104032556 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087449942 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111181531 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089989988 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105761024 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081808816 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10930923 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088955406 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114612283 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106845491 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087170963 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111888533 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089502286 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106539545 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090698026 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.106385638 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090188673 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123359652 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109477925 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086994614 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116103914 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094482133 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110695175 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103039725 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088420857 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.112376345 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087585659 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109854242 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087435261 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126737323 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11182434 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085862381 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.108119438 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089123229 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108872334 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094450535 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111143406 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108990912 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092359124 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111556022 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095530717 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112137331 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117473237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090458152 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112643257 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086139823 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110179351 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084414725 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.108481742 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087458652 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.111421102 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113145418 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095395339 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108862201 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119487134 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09789174 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110425216 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084056623 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108649646 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086943397 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.1044632 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08694712 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.1080488 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085295523 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.108270108 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085960822 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.111542703 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114677251 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088176308 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109464072 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086808957 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103505282 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089130993 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112268311 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087389881 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106134532 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086882624 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110530543 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112366969 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091686362 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106475843 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08866377 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112041068 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087371597 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.105668475 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093278415 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109473325 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110965335 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087946655 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108632226 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088705829 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113510104 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092387803 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111391161 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110855655 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09713124 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112280743 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084895356 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.107283984 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092218072 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108297057 seconds)
  done (took 60.400706623 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148689713 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08500339 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104683145 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08324804 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118281238 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104290308 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084145913 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105128766 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084497182 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107797058 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082561928 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104742919 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091833018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129121344 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118459805 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109845806 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081944874 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106645915 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081601192 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107266302 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114336345 seconds)
  done (took 3.0736997 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104667671 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.127981765 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121937979 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12397609 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093153804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120841906 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119977137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098093397 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124783524 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117376554 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123989534 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099068598 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11823515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117281149 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115706851 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097240703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123983022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115093297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09956978 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121887184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119250799 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121101182 seconds)
  done (took 3.442472564 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084385198 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10698135 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08898899 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103993331 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087763855 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.104162429 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090990681 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.108094342 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08971157 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.108474694 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08503083 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.109027397 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088127687 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.105786139 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108901133 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08666804 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158880666 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113578492 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086345471 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111407366 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082316385 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.113321027 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.081883177 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.106972576 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106621587 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092564359 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110774362 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085140919 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.109621304 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085391563 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.109309429 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084658379 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.111463429 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087345877 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.108956569 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.08506517 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110025973 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086432782 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.106152164 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106587172 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088745701 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.105412706 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088283619 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111177807 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085819187 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10869403 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088746197 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109437863 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082247594 seconds)
  done (took 5.785502592 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102586065 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167328993 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089869151 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149988814 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127428375 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117626201 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092782878 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149845692 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109305882 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089180148 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129310312 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127558045 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108779088 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092968833 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113952336 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087457533 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111453077 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108017958 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093243138 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11004956 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113165892 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095254958 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126225752 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12421354 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091766219 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109789389 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109054877 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093266556 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123553468 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114375314 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092925845 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11570778 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125726193 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092995727 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109810339 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111463401 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105128334 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111731161 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11173866 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085795042 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112908226 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091538165 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.119479878 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128101168 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110143585 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09469843 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110231998 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084159702 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124972873 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113322695 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095910313 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127718102 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115194881 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087028466 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115947381 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126124149 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110182232 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086386257 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113341249 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121841187 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08681541 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113763644 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123813153 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091250232 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118201661 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125605497 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093762487 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114946507 seconds)
  done (took 8.576686175 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093819808 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116530348 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126798444 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126552649 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09496609 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117303627 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116970675 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093678607 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117683933 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122791897 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116572491 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116730557 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113339557 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121047395 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115988043 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09556652 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120979268 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117418034 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095402778 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118397933 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117000392 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125651234 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095176393 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125749763 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148966548 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111614886 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095509784 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117183354 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126416841 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093620135 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129339017 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117463536 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11724695 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125718082 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.107466269 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.117531442 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109553481 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09526732 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117149409 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117444714 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089503826 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126736234 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116679164 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089142266 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118763212 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118026514 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126212693 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12911064 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098625012 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12297356 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117294969 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126252237 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095687462 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118206249 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125835617 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153205689 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126832413 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103609782 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11865912 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126258222 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126619191 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134235353 seconds)
  done (took 8.110409599 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105224588 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120175498 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124216458 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082446042 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110462455 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1151047 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085738243 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108867187 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097841769 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.120967095 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122638727 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114671488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095752144 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123374409 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11528044 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118389341 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0932253 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116000392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120020666 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092627043 seconds)
  done (took 3.118423219 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094339841 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12802202 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088725898 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119428759 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114634663 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09841685 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11394707 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090399859 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113376972 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11381215 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099966144 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122396503 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111532552 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094678026 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12272371 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117560309 seconds)
  done (took 2.683453937 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097538354 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123819335 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128043824 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088064433 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110584723 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083624502 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112616633 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106763609 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086024099 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126906836 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088255944 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115874734 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110567837 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087339514 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108003087 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091756258 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107990773 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086060934 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112045274 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126361997 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.1009996 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111152078 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089371759 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114129036 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111615936 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094755751 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112516956 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085940663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110840357 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111301226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090294417 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119324992 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085338244 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.111216563 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086098664 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110614454 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.11076684 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08900871 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114397122 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088735998 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110729705 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087245096 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.112218046 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112263046 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08553698 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112631946 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084468509 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118053991 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086265821 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.113707369 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111396496 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091641479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113884349 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098714874 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116435225 seconds)
  done (took 6.641563881 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09940503 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113637845 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084255813 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110103541 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091023515 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115427317 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091414963 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11548795 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112581049 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086551503 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113569195 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091347479 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116615843 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091848845 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11451663 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115332302 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085294655 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113729061 seconds)
  done (took 2.806792386 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091115501 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109500923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096022289 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11229845 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088595277 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116201188 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084589139 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.11154418 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086649207 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.113766261 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111661042 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092185 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110037209 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091877565 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112282608 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089017855 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114708362 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086643611 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112895868 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0837326 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11560764 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109884477 seconds)
  done (took 3.184654794 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.111333246 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127997111 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094676162 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233775305 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104503501 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136258606 seconds)
  done (took 1.752169926 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109765542 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126574751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113064457 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112267305 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121777046 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090839247 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114744389 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114612705 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122984935 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106541259 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115366556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123224585 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123298607 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100502219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1214185 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12081236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091140048 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114791633 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112642703 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13446259 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092963714 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123739469 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113539346 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091578928 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114064379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122593944 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100843767 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129106028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11397329 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123357273 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096676579 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117989939 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123860627 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128547835 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092820183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123910642 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113704272 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134071657 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098119482 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123757036 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115158965 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097886541 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12525608 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119386083 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123764131 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09145663 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119942827 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114516495 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091938937 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141474593 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121267055 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122977326 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097087211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125520324 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124959538 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141739218 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129419756 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123602541 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09743638 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128731196 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124746322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120779715 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123220532 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105155036 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120955117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126827806 seconds)
  done (took 8.593249837 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102131955 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131701969 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115842608 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105232953 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124457241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115405988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114575 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091879161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115243052 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090925664 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157618291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116951788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124182334 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124485085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092045557 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115586735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114647774 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100161431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115726442 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14101849 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114991793 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1228352 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101165914 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123425164 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129422357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12167586 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091499453 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116060787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114672763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091231576 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122236463 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114681483 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099742659 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115725077 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124142843 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114193287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092574262 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120890615 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114726705 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099688806 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124293767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134965316 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115354332 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092590791 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129609034 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115220972 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0914927 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116156288 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114940289 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091258481 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129740588 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130183654 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129892205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124708953 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092075009 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115666684 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113694378 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092538636 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115556299 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120353212 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10186171 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115375137 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142344951 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114719278 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091572404 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124302667 seconds)
  done (took 8.488449678 seconds)
done (took 163.712394999 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.248582787 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.20361415 seconds)
  done (took 1.399549715 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087493675 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141571359 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10115637 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177565112 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084599122 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145712234 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140864937 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097778082 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.1098719 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090266335 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.115130552 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090901758 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17953125 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085284954 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.112427509 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090757416 seconds)
  done (took 2.80587013 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113486034 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.26488539 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130201155 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087554723 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120034816 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117349564 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088672138 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119216166 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09409272 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113320082 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09281262 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.114346351 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088639858 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.114530225 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093284598 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117085039 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08810753 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.116896013 seconds)
  done (took 3.034205378 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113111569 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158529697 seconds)
  done (took 1.2285257 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.247160696 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164071943 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.237389723 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.492490932 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.29485652 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.375790914 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.216878661 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.227781674 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.174273158 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.20611514 seconds)
  done (took 3.588765202 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119548476 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187446012 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.328392627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165167161 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111786535 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13428411 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165339169 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138210847 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.131070995 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105605578 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12877258 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.126004019 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145470714 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099073968 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123814871 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123622716 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126450701 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121283277 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097292757 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.124206684 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145912782 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089101264 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122789435 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.1214359 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103749996 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127183914 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112153149 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09057124 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121956765 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098406159 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121513026 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131369844 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100708363 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182969797 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107115211 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.184325003 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.1019208 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120253954 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097434498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120579519 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125143151 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100310438 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132833235 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.125828259 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089218214 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127399608 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088848801 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115130416 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121317571 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102302657 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.123708983 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120307687 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161108039 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125788701 seconds)
  done (took 7.824487412 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798138919 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164422451 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095703416 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.905988705 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1140465 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133975816 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.795461817 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118386797 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.263406941 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.772595077 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140374941 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102103398 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23599827 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.24308514 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929742356 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30848458 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.646843075 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13384537 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132448139 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.184218363 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102495256 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145132921 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138675074 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436818967 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097705891 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120669087 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125150518 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101633233 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190415174 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107682966 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122199336 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182064023 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.277820794 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182506058 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120970807 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093452917 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118925826 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.174239995 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274662903 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218959106 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18573859 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090977304 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117975711 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103391481 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140079917 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115113207 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168658666 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179716678 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.200418799 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098013875 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126178001 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102465139 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127857104 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168601987 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.128609052 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.325829307 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323520905 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093532431 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128945655 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132707563 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267319489 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106131263 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233525172 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146200286 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218233343 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09551367 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788870527 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.176968526 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117800059 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100398804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127840894 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122425203 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103178785 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173958001 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.413888774 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131635447 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120079765 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095818036 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235794415 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106759523 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118950924 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169685824 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12350346 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103583585 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132364239 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129271175 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175979084 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.234104976 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13118317 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126762201 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097875069 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133124176 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122535696 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217748255 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227336153 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167790164 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217872819 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128635651 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.169975259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1728457 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127718753 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176935432 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128097914 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130616128 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128351566 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200092519 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150781446 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.13054915 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121989798 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100980826 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155189229 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.135185051 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126163546 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177833973 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461259 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.199876796 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091033705 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.136065138 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126780022 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169604788 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123680474 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249302839 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128425016 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176121301 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127913858 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091592959 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129511357 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169698385 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129378837 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128422288 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104231277 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126482714 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.239385565 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225121538 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129342107 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225909159 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191025672 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127069844 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176660586 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129810517 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174846446 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128929978 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129974237 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099579267 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779785394 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124643609 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104115857 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12378757 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193339159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094292499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.13141048 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.131694727 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091318516 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797436522 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.134726408 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103756584 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.133204889 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124673151 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102306548 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125752653 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122686929 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168411978 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238348613 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125919412 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103164409 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.132972673 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168266751 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123385408 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.129903757 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10870933 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.133773222 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12781155 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098423975 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.133245059 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175810507 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167726073 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227971899 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.604914479 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094510493 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.13300455 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237608048 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118605152 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27334564 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128424647 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2336885 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169773041 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.128960389 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327403223 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.171768434 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193721163 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.133089427 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18121979 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090966854 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125845474 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171021745 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119730317 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123405392 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169111657 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130055676 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106551426 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.947605909 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112968736 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233337894 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09140774 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.20135306 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098198816 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127498495 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297463782 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095700435 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136542378 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.170775615 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12285881 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.132421763 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.850858376 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.134080051 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128676039 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101309817 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229191078 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.17167745 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128528864 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125538095 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101601229 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.192840053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.217080071 seconds)
  done (took 45.50293634 seconds)
done (took 66.339447254 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290101699 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226910287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.283283787 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17837798 seconds)
  done (took 2.038148045 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17739697 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158910853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128360274 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116305702 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161300987 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08916552 seconds)
  done (took 1.816016442 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367658499 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.289258047 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.251446996 seconds)
  done (took 1.89836974 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.300691412 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.257557549 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.48401414 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.33427105 seconds)
  done (took 2.492292434 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.216094098 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.142169944 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11961133 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108987228 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.206255012 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.257452382 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150493589 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212035603 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104663497 seconds)
  done (took 2.548837856 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207935881 seconds)
done (took 11.992037803 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.250948637 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.176782085 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.102243582 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.16091565 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.169519196 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.130578349 seconds)
    (7/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.150746313 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 0.152737356 seconds)
    (9/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.272489233 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107362571 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.180373095 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116883513 seconds)
    (13/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.270345175 seconds)
    (14/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.127669107 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103843452 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.174641955 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09769315 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203244971 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.128298387 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.245298519 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.199445254 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.101170169 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.14767503 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.128287278 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.239046044 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.223551262 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.216034822 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098243674 seconds)
    (29/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.229168204 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.121324444 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.22309918 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082014124 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.180658567 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.158035568 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.176898244 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.274446649 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.15941875 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097866999 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095851744 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195855434 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102599255 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.125693246 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.100809191 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.26835594 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092021528 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.128690031 seconds)
    (47/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070996157 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.218243019 seconds)
    (49/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124527031 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119410664 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.134943316 seconds)
    (52/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.099892942 seconds)
    (53/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.171810861 seconds)
    (54/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127635597 seconds)
    (55/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17824559 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176081291 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.233063785 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.208852436 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072703723 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.261960939 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.126890734 seconds)
    (62/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.145656217 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117271748 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.150548821 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119588595 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099466029 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.196358243 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.118913756 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108612253 seconds)
    (70/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.123436202 seconds)
    (71/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.155261419 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.134636636 seconds)
    (73/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071498589 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.216716773 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.17681733 seconds)
    (76/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.190007894 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.124782707 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.147208209 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.147709008 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.175750828 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.149903972 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.209932049 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097625697 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126744871 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.205999079 seconds)
    (86/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.169031216 seconds)
    (87/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110055439 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115514042 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125432179 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.130555709 seconds)
    (91/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.11114537 seconds)
    (92/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.155613327 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072431161 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.20603766 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.091791341 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.151912383 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.134440187 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.200802741 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125672385 seconds)
    (100/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108505109 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119633695 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.120206955 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091479804 seconds)
    (104/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.210721806 seconds)
    (105/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09830421 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.128602107 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.230627626 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.146538335 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092571309 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072425546 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.125251462 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.215680778 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.225963634 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100998682 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.196913828 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098149958 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.129920039 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129501266 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075392342 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099913154 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.147439233 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.203885237 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.143287118 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11522946 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.191058032 seconds)
    (126/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.332946705 seconds)
    (127/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.153701084 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073465643 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.216203539 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115596195 seconds)
    (131/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122852191 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.191327735 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.14459389 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091520417 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091959011 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11890542 seconds)
    (137/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.120712818 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.217138716 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101701975 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.174485735 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.226179884 seconds)
    (142/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093621262 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127039055 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072810665 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.169954626 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.143599153 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098691372 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.191492384 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.098213259 seconds)
    (150/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.099378576 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092278605 seconds)
    (152/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.158232582 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127320935 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.099599534 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072629145 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.125537575 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.083223988 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090520687 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.111836641 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.175832094 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117806535 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.098613106 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092034141 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.193531299 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.126099203 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.073661037 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.149752684 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093554365 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.071509861 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.156921504 seconds)
    (171/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082851857 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.099306361 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102981153 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.114342518 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101378121 seconds)
    (176/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.14722844 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091667584 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118567959 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118104303 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119460675 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.143259125 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098700442 seconds)
    (183/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07370973 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.134352316 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.189821326 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072190174 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.146300335 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091206626 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.101762328 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074055659 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118760952 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116720026 seconds)
    (193/309) benchmarking ("sort", Float32, false)...
    done (took 0.183252167 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091292115 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118958328 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.126478717 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073818558 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090539973 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.119289585 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073893684 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.128467262 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091810494 seconds)
    (203/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109337966 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.205033999 seconds)
    (205/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083637397 seconds)
    (206/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100098903 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.10248363 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098210571 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.100182494 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115364544 seconds)
    (211/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.09941525 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.073023395 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.116320493 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107930955 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118225807 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.07294565 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090278176 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128815564 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125987899 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109101472 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.125498717 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11735957 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.126743734 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097787252 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.196089863 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.123892256 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.222818667 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.113882566 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099579302 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091410692 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.146726506 seconds)
    (232/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092927259 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.200010149 seconds)
    (234/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.159459062 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093217768 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119317319 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074197606 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.201972599 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.148385647 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.098765728 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.131381376 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.075158228 seconds)
    (243/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.071976686 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.190995274 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.200601176 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072620067 seconds)
    (247/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.100640206 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096379321 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116422343 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.16356253 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.138169819 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.073402005 seconds)
    (253/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12055345 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112525055 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.129806062 seconds)
    (256/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084082691 seconds)
    (257/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100214266 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092576778 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.126092749 seconds)
    (260/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.103274761 seconds)
    (261/309) benchmarking ("sort", Int8, false)...
    done (took 0.198768108 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128776336 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073523097 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.099543304 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.139565428 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120520522 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.103174026 seconds)
    (268/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.124016426 seconds)
    (269/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094768772 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110449014 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074535884 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093599847 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150940174 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.145766434 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091640355 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.15521983 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119188145 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101783552 seconds)
    (279/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074965512 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.120934134 seconds)
    (281/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.130100019 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.074536452 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090292463 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119391498 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099841093 seconds)
    (286/309) benchmarking ("sort", BigInt, false)...
    done (took 0.256880132 seconds)
    (287/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092417282 seconds)
    (288/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091923834 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.130130923 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.123930267 seconds)
    (291/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.093877569 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.072401903 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.101864246 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094318574 seconds)
    (295/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.10057061 seconds)
    (296/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.084505005 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098348762 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.122860674 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.07385757 seconds)
    (300/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.12244794 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.227403101 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.119806442 seconds)
    (303/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103056825 seconds)
    (304/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.07364871 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.125366195 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099087312 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.226817161 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.125109472 seconds)
    (309/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.083457139 seconds)
  done (took 42.46497539 seconds)
done (took 43.455947449 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103840448 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14561319 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101946068 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.144690548 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132343142 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09885134 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126705813 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103344802 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.133804204 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.133294501 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105391241 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074905804 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.131153738 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129036262 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103461282 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146184334 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.13176539 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101219662 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.127165927 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.093818653 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.127892627 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093063153 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120877908 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076312762 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.130663393 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.10022769 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.125146318 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.1020553 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.119668632 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092544847 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.124466784 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099656162 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.120581967 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.105513379 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.127765386 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.127378539 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103151333 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.129826128 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.094542949 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119589861 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.101053395 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120153098 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099116243 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.128562458 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097795516 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126234617 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099631897 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132114991 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145620493 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095391186 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.128546205 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102543547 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.130618081 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098362551 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.124937507 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127988085 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098663986 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145328104 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101441647 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123364666 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100557872 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.128572344 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.098168798 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.129346008 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127614059 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104506181 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.130768251 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099284191 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.13187317 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.097344508 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.122334766 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099708161 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.097873193 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.117888667 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.10400481 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.131093766 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092460472 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.125347704 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100420224 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.125352266 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093012405 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122645594 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.095093571 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125982883 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095778112 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103788757 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097952176 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.125233244 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093239616 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.127195578 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099626653 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.127280633 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09450954 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.132898925 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.091999049 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.125957192 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092686548 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119917484 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094401355 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125685482 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091893506 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122378944 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.10100098 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.122565324 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097926697 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133186683 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119725454 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.100366543 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.118265589 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092528487 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.134101392 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103227657 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.12096838 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096454735 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.120115157 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100035872 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.120563224 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09184531 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.120569388 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091845961 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127080465 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.091392518 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123587025 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.099480604 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.135490061 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.119215684 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.098422342 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121369579 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094681038 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.124881469 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094092003 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.119165731 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.095535984 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083710335 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123439199 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.118985068 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.102176794 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12135435 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101766222 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.121023916 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101587591 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.12512654 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099153335 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.125824701 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091885691 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.107676119 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097419466 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121401883 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095653689 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119543528 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095729404 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.11954048 seconds)
done (took 18.185018226 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088241889 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188366812 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152658392 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147865168 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112829633 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.120857652 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129936801 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126964251 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.122064616 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.149991895 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.116399744 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140551884 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.156099139 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093513346 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120604902 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097729816 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121732513 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108911671 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154195091 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.140926935 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.172801413 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09274265 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154754893 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139633777 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.102403861 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140678438 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12045184 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098397195 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.123532013 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120304382 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142000776 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09654823 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.122005556 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.141482945 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112581194 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128072489 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092903191 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128173887 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.09417002 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.120825561 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147814686 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116047491 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.127813239 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.098631241 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126325162 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094787884 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122996993 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128271929 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10512815 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.124320595 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107571769 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160719488 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117369881 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124211469 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.092909127 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.130395512 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104201474 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123768163 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096453419 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123897228 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093103637 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126162534 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135353365 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.124341432 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12684198 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12822203 seconds)
  done (took 9.187581704 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104621246 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.144620356 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111388759 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.141154024 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121215455 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094940641 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.121731399 seconds)
  done (took 1.896523673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089411526 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140403112 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118263736 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.146446657 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142282973 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136005097 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13345051 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094167856 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140001248 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094743356 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.144018184 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161322694 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09667256 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.130774512 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146553113 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095482985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147658718 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094054432 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125814148 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118897513 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126939325 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.144008245 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.097099597 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.122843582 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109670689 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.122905628 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171478396 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101328122 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123356041 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098419512 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12068378 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.173671722 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10956533 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.137199197 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094803966 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138692142 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136011682 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094346841 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.138917882 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099936642 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136586559 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094925982 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124637226 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.093623422 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.128049197 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105497878 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125435556 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095195255 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.12709978 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141829129 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096766552 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13659891 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094841934 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.126675533 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097650522 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128941555 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10476102 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.125329371 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11488502 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126046382 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139829019 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1130359 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138132578 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111115286 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126998202 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137856273 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109648925 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124422271 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097975875 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125344077 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112641601 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119618634 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.094039629 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.134388697 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096451221 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.146617481 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142466965 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094450653 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132755884 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.093954467 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11983375 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089832937 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.141639567 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117469595 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092453341 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122355533 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095998137 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117752568 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092977178 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123650642 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0914379 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121192122 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096715406 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120756792 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095210325 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136844634 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093997349 seconds)
  done (took 12.610538779 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090620121 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117244046 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099227707 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122194461 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093864862 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.123073312 seconds)
  done (took 1.720363783 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113553856 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120106376 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.106282957 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124485542 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16141333 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107298931 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135372766 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12661959 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.111265095 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131116306 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130052389 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107379561 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137912188 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120889772 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107887497 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121939092 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104127129 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126781727 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127557449 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099055371 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140066364 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120342108 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100287534 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134197389 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091320249 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122751266 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125844467 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105858843 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.131748835 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.098047197 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123324693 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118037181 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098265273 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124548004 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129603872 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099669147 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123174479 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.094946526 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128935136 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118934109 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107972651 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123093446 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102631377 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123689215 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123714749 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.098946627 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120801071 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126856242 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108165809 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123757266 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095439786 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123934662 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.092178797 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123128937 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122200429 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098140817 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121361044 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130119978 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100595106 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124554668 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093166606 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120120278 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122876316 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095453645 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132897369 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094587833 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124605501 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121920856 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100531415 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125667687 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095700046 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12224947 seconds)
  done (took 9.466249831 seconds)
done (took 35.931063609 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.70257685 seconds)
  done (took 1.773331199 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.741744441 seconds)
  done (took 1.812046024 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.387294401 seconds)
  done (took 19.458533186 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.51646245 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.602609591 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.819876819 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182347856 seconds)
  done (took 3.190809599 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.981443864 seconds)
  done (took 2.071312556 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245191163 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233890723 seconds)
  done (took 1.552825872 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.818923657 seconds)
  done (took 1.903087884 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.384048113 seconds)
  done (took 2.457221772 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332927485 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18650668 seconds)
  done (took 1.601474185 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.55691585 seconds)
  done (took 1.638427896 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.103511959 seconds)
  done (took 8.192863374 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260500814 seconds)
  done (took 1.357642172 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300673696 seconds)
  done (took 1.386868457 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.724746447 seconds)
  done (took 4.811003628 seconds)
done (took 54.285080565 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098509895 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128775862 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109175132 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132636562 seconds)
  done (took 1.549121119 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101405914 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122799696 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101627806 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123306573 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10156034 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12361995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124129089 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10128164 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122838316 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.0964737 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123328501 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09403708 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125788048 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123258561 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094443004 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125058732 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098665211 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122866573 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124874191 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098545576 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119107532 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099462547 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125227774 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093100369 seconds)
  done (took 3.777958298 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101129194 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119186077 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099202676 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11982792 seconds)
  done (took 1.536428775 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10028781 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143024035 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138781649 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103000619 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145901329 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138617332 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094443928 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119668973 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096144443 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126119342 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090180635 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150091084 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138311205 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099652875 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129250893 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087104111 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119799353 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136489647 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0997066 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126770902 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092782597 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126148577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091825255 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141986569 seconds)
  done (took 3.926942179 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.1581514 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15367062 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14027991 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09470486 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156935082 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142510547 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091216033 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14221348 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086768784 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132314186 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118591252 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133907861 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130332065 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086917481 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116498561 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08638395 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129329495 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128552718 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09299277 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145685342 seconds)
  done (took 3.564289635 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098031769 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118704971 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090788041 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117281571 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101469767 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122399369 seconds)
  done (took 1.747151481 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091141023 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115147658 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090587076 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114361232 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097467157 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115014632 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090853427 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115415283 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092779092 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115713497 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091421171 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11408136 seconds)
  done (took 2.343323635 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46141196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092956098 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121734603 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115570568 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.098052371 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116018855 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.105343678 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120288604 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113562054 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.118715235 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087014038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.122046682 seconds)
  done (took 2.769564441 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236266933 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127407791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292137208 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19005213 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159763557 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1711856 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151864788 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165555109 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196805979 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159570991 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233817704 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196980156 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152063466 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190591187 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14005827 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145913706 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198582547 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246066302 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155939746 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206129353 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228615245 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165596489 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181209831 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123742523 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139166465 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168641217 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122504915 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12972046 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209694913 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203509754 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191366672 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164400476 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147227066 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210166243 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251385301 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224537683 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188337264 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136172559 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143216576 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172601614 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270355647 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139605936 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206746936 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161975054 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132796599 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191380676 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167026459 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20191372 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152193902 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115626257 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225953099 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21150189 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220414577 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110581589 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162823726 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160226558 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167551544 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152770276 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254355079 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225673157 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180809794 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093146509 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147983088 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190183406 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18165744 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.195844362 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18100535 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145069122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191330611 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186702939 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164641595 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220166424 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184150394 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140372282 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169421195 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173982092 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17042371 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259384386 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177848275 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123244971 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168044277 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149865875 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105009981 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198372082 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127027454 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215767144 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150980349 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135634335 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165188685 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162253042 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135413423 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227992306 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191606523 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149008096 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111008524 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130253628 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156670328 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214391428 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1138456 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16137634 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161783179 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134546344 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178942333 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124615628 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178480555 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.089829136 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205821261 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18754109 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100062004 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163328343 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156664389 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153909986 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178446473 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22771173 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116265558 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137946618 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20738574 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178155618 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152454798 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183315278 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231756516 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145339301 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125473964 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232589424 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244324125 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118413933 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234759233 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155372365 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109981149 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135215251 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177833243 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155903033 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160986783 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133015922 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184855495 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207010818 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128719504 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138522518 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189906741 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135699985 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105928884 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160470252 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147398456 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140442858 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147295955 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151449946 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181911458 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177985268 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154672797 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165787967 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151201699 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252966637 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145875462 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151038547 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12198555 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122480148 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195521115 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227373557 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108176664 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233183402 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176848868 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158037546 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175253162 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109885645 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177473461 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133571497 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091642874 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223922097 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166970576 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163928995 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19459915 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157942189 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180825764 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.212690499 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180098047 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17783956 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168244429 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165728003 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112770739 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164514978 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167503831 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12799149 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145362339 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135295107 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131736402 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146446186 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139032473 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199298965 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198059796 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123813358 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159835392 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150139756 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181413318 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128903925 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180009901 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177337357 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149022696 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196547131 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223032782 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187418367 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146418628 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207998729 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122170381 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100611451 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144541421 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173307219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137338887 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135696616 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171413526 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184158875 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183807236 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176094732 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165859998 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175105567 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192163297 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124444031 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171404616 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188823554 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174745456 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189140293 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147722504 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127378325 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178662257 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156212293 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256349143 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168367438 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178291357 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241131001 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149948171 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105581093 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153030836 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213458726 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157121337 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179522872 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1185835 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147105608 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162641764 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137013263 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159738066 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18485547 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164242576 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219213268 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149806656 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191383483 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129644942 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171316175 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161527628 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168842704 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.086760736 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176645023 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231255413 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151260639 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17371539 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194525079 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132118235 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151948449 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243330404 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191966446 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141873219 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160905829 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161459705 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165308187 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173475778 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181128576 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160077399 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187580301 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158180532 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137938896 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14180752 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124363594 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156049135 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134489869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148924956 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175137912 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140024662 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190389597 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166511115 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163229577 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174611894 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154450088 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123826966 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157155988 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248195897 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183026008 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24482849 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128509836 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.213557428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209626937 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125930874 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109653117 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.141986295 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181033488 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135735072 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192831513 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.150574813 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133329644 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218381936 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204444737 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150342881 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100046382 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165934629 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177196064 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169026609 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153658362 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161632496 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232022014 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119084621 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133072662 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172848655 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157253051 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121640668 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226049807 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082356824 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152716896 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100953801 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137705724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166541893 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236809843 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.116363618 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.196366778 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17530173 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171946465 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176878828 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159487154 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151712232 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173120088 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20876262 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187828608 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138626569 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161059709 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179521132 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20201781 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191578986 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.117025756 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233754058 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199617326 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203402674 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14756961 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171057236 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170040148 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157922661 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183975697 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142728482 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20649294 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14185503 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229646339 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15783119 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148385317 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184094069 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128123451 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153207002 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197544081 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206999858 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114152616 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138925563 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168352356 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175740878 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15933304 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129821259 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183081394 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128894509 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198324629 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26284704 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112396754 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163843847 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155950002 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142227711 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160894384 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16336898 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141236623 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.146082749 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236292247 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.113413508 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224893123 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20392182 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16991015 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210648034 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122424309 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693201948 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133152227 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193870323 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155299488 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235441765 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123162121 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206553585 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136082586 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17048079 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22896704 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160020194 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235514484 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203072276 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.187578304 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144342384 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169117593 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171368156 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.153243828 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15566564 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175730328 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1647837 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153980262 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183388832 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169913971 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137965457 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113584314 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230003942 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15801188 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195232112 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181814412 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143363985 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179402775 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193864975 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136894325 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183940294 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237948293 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119913826 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152792622 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136083327 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159118686 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266367998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103764244 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231791543 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181569731 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161178793 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17138629 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150184524 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198287396 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159023939 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177349043 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147802143 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159292364 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156777225 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137797962 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105364144 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15584804 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166531894 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151816484 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163404276 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144994323 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218690878 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095013848 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14600329 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157433781 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188638433 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246907465 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111776619 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138394408 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165677475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151431519 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177379376 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17710246 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137974193 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135949054 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110973207 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.164275134 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114997411 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156810122 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158221455 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168289201 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240583717 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113557665 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286381435 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151583426 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164136488 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097775385 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.140024476 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160470031 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125404971 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166948145 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160232834 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265637628 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.152207305 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.113150212 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15949395 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.136832132 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116550179 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1755561 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168863219 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179921702 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148559715 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113641093 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167968864 seconds)
  done (took 82.049220234 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181377462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136357317 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149885968 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205841492 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17918383 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271254418 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214166394 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255764729 seconds)
  done (took 2.770897068 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094407353 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148642858 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.163701053 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.144933393 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091469987 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.123794159 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340915671 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.141601015 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091069221 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.144251884 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.151259166 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.120858618 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.524654247 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09633971 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.131753431 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.112664457 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120939414 seconds)
  done (took 3.917521667 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.464763099 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.769328914 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.481511159 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.128836575 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.335138753 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.138141845 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.184126257 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.221092393 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095033745 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.504367273 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773002448 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165084138 seconds)
  done (took 19.436710777 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099078053 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121286161 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10987973 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136807086 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099935238 seconds)
  done (took 1.752638252 seconds)
done (took 132.222065576 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104461026 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396565103 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072164044 seconds)
  done (took 1.685425844 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108022724 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138008514 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107813606 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137990732 seconds)
  done (took 1.68480995 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097836585 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127897076 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110939791 seconds)
  done (took 1.52812888 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32633741 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193529216 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.144906196 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106766266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13075446 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103875127 seconds)
  done (took 1.529296336 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097401824 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127950064 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097685462 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131838043 seconds)
  done (took 1.645289873 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095314243 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073265442 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.110656013 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0761669 seconds)
  done (took 1.542625619 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114080123 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133963959 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105883861 seconds)
  done (took 1.546762792 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129677397 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140098156 seconds)
  done (took 1.463190878 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106082593 seconds)
  done (took 1.296786687 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118317045 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.175510411 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.200421537 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.173440673 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.236624414 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167516084 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117290118 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.145979184 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.135248452 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.148957311 seconds)
  done (took 2.812550414 seconds)
done (took 18.691803277 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103177444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426598056 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.39015472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149889615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727337564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385614148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043295097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157219523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173002384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101756979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149511762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672886405 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.0294042 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.387343477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981467466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.472835428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675538723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12261718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090086477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126383813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016759733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095104779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123014468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09206849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70502635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397817632 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128854421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.472313085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092874177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127304142 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383933735 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12512205 seconds)
  done (took 17.308966172 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095417872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174284603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097597707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142721525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124984348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096423652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126065752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092896058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180667387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131847278 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111117929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125513749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125965206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098861733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141982234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10002811 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133387644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092392163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123894357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093450387 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144280205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123701377 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101108295 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130422391 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101869423 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.146337255 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096873078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128812965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095371445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135857394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.136430997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099775039 seconds)
  done (took 5.04229355 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142137463 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183780115 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134429884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129375477 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178480439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132973674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.205991373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127144382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194297963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134068789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143313569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.100589952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165809054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103449069 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.154547072 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.131252585 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.104787333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130042863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09258046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125126165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111342227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128322079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124015646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097506003 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127727635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111323787 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128864361 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.091908443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124500531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127430598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108141527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127543062 seconds)
  done (took 5.423898934 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098540205 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130581513 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.116750179 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.149223511 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103092019 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136357199 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.103487308 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.134763134 seconds)
  done (took 2.169120954 seconds)
done (took 31.133475354 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103650279 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130433136 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104565416 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.140580038 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098053777 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.135666371 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091297984 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133161143 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.098873981 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.133533569 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102526576 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125746869 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.130663462 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.101223193 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.138288813 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100757153 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.143348082 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.105026614 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.14327863 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110415286 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.133727192 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099581416 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.132669726 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132589842 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108897014 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.138020099 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.107371187 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.133639334 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0927746 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.132728757 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.099298656 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.142037468 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099895803 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.142349189 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093999169 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.126793084 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123122035 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097434819 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.138140368 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106673874 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133762975 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102902343 seconds)
  done (took 6.178470642 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108012833 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148499489 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11310308 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.088942609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.127054683 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080518574 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140879405 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086604797 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114835112 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11218131 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.085377035 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.117625784 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.083112156 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.079092222 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.115925444 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0774792 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111866913 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.080093492 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076688441 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106926429 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080383079 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072546077 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110821707 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079111736 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07477674 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112877851 seconds)
  done (took 3.794165219 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10147741 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136339289 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112217661 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184797704 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160496951 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099074982 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134247493 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10965858 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139880002 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119608243 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099892462 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151975018 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11016101 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.1305868 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09110862 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141250198 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.105429319 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.126739766 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129109358 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121164302 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139826191 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102060151 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.147363506 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.103081034 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.123209522 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092893302 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.129131772 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136613972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.105533423 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.139307886 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099103816 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.132033214 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.092807857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.135947996 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128702112 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097313221 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143709965 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102283804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133210811 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092207059 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126764387 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.092289117 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1471426 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174216666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100039054 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137228696 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100997445 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137352649 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.091078335 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144630156 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132499317 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099937412 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132636192 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096074482 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124881501 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110722452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.131278105 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095965699 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132312566 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094182006 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135522705 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.095420934 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139265695 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12245141 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101621473 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120512214 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093849309 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121147263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116678061 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128098978 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164283833 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101911312 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128360539 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106608052 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132211189 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100358455 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127627607 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106832382 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136481744 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094798392 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132980735 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125328838 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099804596 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140543849 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097497126 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123494568 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.096720053 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131778804 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.094712367 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.124229234 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105888881 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123927134 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.094667351 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140504155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126455293 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096714778 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128167372 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099404831 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126326938 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106734444 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.131363441 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.092027193 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135534001 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120608004 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098836589 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134425278 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.10181122 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.125923108 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103311748 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136876489 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.092584045 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129239013 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095238182 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.127709143 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101674277 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.13328049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126979421 seconds)
  done (took 15.169737432 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228629478 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218715611 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.09431386 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.243157678 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.106762956 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144644425 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212523745 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156053237 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093485323 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.123666694 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.096100002 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.16524385 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.155564798 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.172550926 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105278173 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125518846 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11821262 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167813883 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214519531 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.207180854 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146691735 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100078452 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.12767385 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.093234985 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.129569077 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101718064 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142164729 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135823602 seconds)
  done (took 5.343415768 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107681532 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158951122 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096858423 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146272584 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14810088 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091292331 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.13402243 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093052662 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138358375 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136511484 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094848795 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130090452 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099524791 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134317697 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.092598282 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.133380709 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132430689 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095767477 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126253274 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09799296 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132941458 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101370789 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136604888 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090911096 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13569593 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.091606162 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.119995044 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149975032 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.095995838 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.154540755 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.089644171 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132153792 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134008328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09672507 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123355306 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.097917149 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126192679 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09822956 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.129264317 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094294034 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.126194792 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081894625 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.127490486 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110276287 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133149601 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07960686 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132586265 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097390397 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129479958 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.090453997 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.129661651 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.094322173 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128135252 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098993981 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129207909 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096796328 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.128539774 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087868611 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.136551369 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.095023214 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117371885 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100045148 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136377801 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090318473 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139861916 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.096003352 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123541164 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.095941263 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129307318 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13052652 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.098510803 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128666411 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095789224 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128546198 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101120106 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130672239 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096039645 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124479052 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095094298 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.128434364 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078352394 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126230673 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.078031262 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094823704 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.12354339 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.090965309 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127306281 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129620584 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108679625 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12704988 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.09902848 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125458591 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091118392 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128631936 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083168212 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127927098 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107616649 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141989611 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124978571 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.091317418 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.14134777 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10059383 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.128539591 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076863944 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.134723339 seconds)
  done (took 13.254598166 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.116395175 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149815116 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095026558 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139050208 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.148978094 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.12073304 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131526668 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.099857185 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126246939 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110423711 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124980519 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10096073 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129131358 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.100859871 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.147686894 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131759499 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095416538 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.13300507 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101570232 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.15996374 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.105711404 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.139258678 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134075924 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094521685 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131589647 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106050175 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.150662079 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103869475 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134153781 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.106744174 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.136025723 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.151905886 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111414445 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.133977555 seconds)
  done (took 5.436546369 seconds)
done (took 50.374008862 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.316804443 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.54254969 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.301526497 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.379468703 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.344855747 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.311423841 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.332145068 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.297400719 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.616805813 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.302145244 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.55603734 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.123975528 seconds)
done (took 60.648998663 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.375752245 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.429364402 seconds)
    (2/2) benchmarking "String"...
    done (took 1.563195244 seconds)
  done (took 4.216022718 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.699992611 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.383578623 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.598205202 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.298490601 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.30293945 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.749275873 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.185068134 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.762063643 seconds)
  done (took 29.501948291 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.304527858 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.737189961 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.365193417 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.379913718 seconds)
  done (took 20.01026605 seconds)
done (took 64.026657547 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.31864505 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.350983092 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.330092889 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.279671147 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.421679889 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.33050284 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.7113394 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.375362274 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.320614524 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.298204474 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.335283371 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.299078392 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.313015127 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.687695958 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.31114256 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.305264411 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.387964296 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.878742665 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.739393165 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.316812229 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.328396447 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.327862672 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.309281287 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.305534884 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.384030657 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.300186112 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.323821837 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.302087164 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.27937346 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.307359943 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.328813148 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.864243248 seconds)
  done (took 194.897315895 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.299136615 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.428284615 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.520184442 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.343100811 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.947079924 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.497879961 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.431949397 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.02485222 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.322454275 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.328472342 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.514833135 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.304570605 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.60755869 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.294998588 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.311304473 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.387730234 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.623851181 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.633358385 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.330160368 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.55548853 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.310611313 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.55607913 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.474877895 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.51329821 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.31213185 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.389112436 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.310032226 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.336408904 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.495698274 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.54963939 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.302244722 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.333747416 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.997079732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.165587193 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.309328198 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.304543573 seconds)
  done (took 154.591827071 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.640607584 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.301770892 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.302084196 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.302029888 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.301941334 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.338382464 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.302256876 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.945224525 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.949864977 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.812433792 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.530696319 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.370592472 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.658091768 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.308494127 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400153473 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.314126077 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.303465856 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318485565 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.349154827 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.308960247 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.302915722 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.943957647 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.320464105 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.498669222 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.314589538 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.303871389 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338792339 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.697818615 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.303204614 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338891862 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.635630892 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.359947198 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304904194 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.721016465 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.581085853 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.309708091 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.416952381 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.306627207 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340009958 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.304900582 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.580372023 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305900158 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.305035421 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.308175312 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.005649457 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.310897391 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.949531872 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.31039256 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.340740663 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.309665166 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.304686789 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.30739568 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.723774772 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.006859234 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.332514777 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.305591001 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.307148562 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.304554545 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304691507 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.340960177 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.800671751 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.407132038 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.32473189 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.308751338 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341374005 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.304002631 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.4424474 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305203087 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.339108995 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.366453058 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.41841257 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.949833458 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310772382 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403681325 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.428961691 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.306497363 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.306448187 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.305871644 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.304511578 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.417256723 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.306179663 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.764528754 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.312535428 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.307617502 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.367802224 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.404710804 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.306827152 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.725358807 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.311254704 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.306234322 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.168608296 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.410476949 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.30699889 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.306639481 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.307220293 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.307322756 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.766706605 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.954229931 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.631892614 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.31288218 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.876411958 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.312903739 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.784115981 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.936120353 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.022020274 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.308681484 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419466048 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.310892822 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.309725166 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.30779606 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.335168807 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.328039815 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.359470264 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.312070675 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.709872779 seconds)
  done (took 359.572600148 seconds)
done (took 711.926988216 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.013585622 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.95800971 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.108930514 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.976417909 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.953759172 seconds)
  done (took 11.242668406 seconds)
done (took 12.47540055 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518863022 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525462971 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383370839 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522229454 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.342502895 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542095889 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.505507665 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.334886386 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419623207 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.405039954 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425135598 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.375570891 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.34383824 seconds)
  done (took 19.878358736 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.645407152 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.644286244 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376266456 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.657097545 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.353609146 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.650367566 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.520319309 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.546182681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.539864372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.349096423 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.322902291 seconds)
  done (took 17.841068586 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.659715027 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.654015407 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.381477768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.663822958 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.357083527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.652111032 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.53313913 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.54275782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.542349098 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.353627687 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.322918767 seconds)
  done (took 17.898515534 seconds)
done (took 56.85249548 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.319006575 seconds)
  done (took 2.553893002 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.354839944 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.527852525 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.344440175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.321289816 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.319740609 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.319253016 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.321669098 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.31998851 seconds)
  done (took 12.06619357 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.319329889 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.317054341 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.316343674 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.315718251 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.319663331 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.315684955 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.320105632 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.320053699 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.316020175 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.320047059 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.3195074 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.320376258 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.317128019 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.320199044 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.316657005 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.317415985 seconds)
  done (took 22.32798799 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.321571778 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.319134229 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.317069102 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.318623617 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.31776867 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.318803617 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.318561106 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.316815632 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.317430397 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.317175188 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.319403421 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.318078187 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.317832909 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.317450243 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.3178915 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.319894333 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.31762534 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.317833135 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.322669733 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.317367233 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.318637444 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.317819562 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.319108158 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.319600735 seconds)
  done (took 32.882781978 seconds)
done (took 71.065533617 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.710081964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.23286612 seconds)
  done (took 10.180745697 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.322034947 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.320471323 seconds)
  done (took 3.882498379 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.320904153 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.320947146 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.320805842 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.322140524 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.322052208 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.320423158 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.322446185 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.320764771 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.321298284 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.321345629 seconds)
  done (took 14.45066236 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.322541556 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.321630768 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.319160138 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.323490025 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.321227453 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.318497131 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.322179281 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.321656422 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.321910344 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.320137031 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.322201419 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.319722145 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.322463587 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.320881427 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.322982232 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.320409194 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.321114315 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.320310242 seconds)
  done (took 25.021667709 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.323933826 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.322070335 seconds)
  done (took 3.885958772 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.321282333 seconds)
    (2/7) benchmarking "second"...
    done (took 1.319730649 seconds)
    (3/7) benchmarking "month"...
    done (took 1.321080662 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320296418 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.320928478 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.321686544 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.321115202 seconds)
  done (took 10.48554991 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.324054878 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.500506673 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.587889631 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.934760524 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.324520495 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.329018314 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.211752037 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.327488586 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.329644733 seconds)
  done (took 15.109557145 seconds)
done (took 84.254419636 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.374570675 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.337179194 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.636713495 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.33948498 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.339985221 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.618147689 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.330258562 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.443927012 seconds)
done (took 38.662577939 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.331388379 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.11767328 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.123554644 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.330064579 seconds)
  done (took 11.813231715 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.298364714 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.360851852 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.319929436 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.446456137 seconds)
  done (took 18.669100556 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.465468043 seconds)
    (2/2) benchmarking "read"...
    done (took 1.665363845 seconds)
  done (took 5.372141988 seconds)
done (took 43.42785728 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326676063 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.323404343 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.325109183 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.32317287 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.322923818 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.32569935 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.321996296 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.322753643 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.325587924 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.326483369 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.32564221 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.326014364 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326116818 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323321036 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323863861 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326938338 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.325216896 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324061534 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325720424 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.327121551 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325521972 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.325587341 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.324206685 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.32655117 seconds)
  done (took 33.042641811 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.32801139 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.325552606 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.32654128 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.327550135 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.324356329 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.327942364 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.327323274 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.324105834 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.328107791 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.327903795 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324757343 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.32554593 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.327697502 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.325088712 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327004391 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.324934853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.328290795 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323083336 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327730901 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.325165313 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.328268108 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323908642 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.324730043 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327664537 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.323972314 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324717253 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.327622925 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.326628649 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327959696 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.3253197 seconds)
  done (took 41.031724608 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.333991994 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.335730025 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.328725001 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.32808047 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.328860468 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.327655316 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.328473497 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.329625948 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.328003924 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.328861362 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.328572285 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.328093077 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.329703905 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.328073766 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.329002657 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.3296589 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.329404535 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.329573557 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.329734407 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.329634666 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.328975756 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.328984218 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.33005065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.330599021 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.32984695 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.330506539 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.330715458 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.330538316 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.329764892 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.328993666 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.33044121 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.330424813 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.329656043 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.330329042 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.331069289 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.331001548 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.335922625 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.338176637 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.33009536 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.331311858 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.330066763 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.330676222 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.331319368 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.330483228 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.331230052 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.330078127 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.332710845 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.330758481 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.331566274 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.331953633 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.332312871 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.332089137 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.333252763 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.330441081 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.332173228 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.332648525 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.332926257 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.331360985 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.332893592 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.332736249 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.333119009 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.333441939 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.331374583 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.332439956 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.333323219 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.332703536 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.332889609 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.332864469 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.332429493 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.333530965 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.333649197 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.333022687 seconds)
  done (took 97.08322768 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.333863428 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.330766579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.329920243 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.331545262 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331640577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.334008728 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.331522052 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332335176 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33089579 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.333874706 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333534246 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3311349 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331549678 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.333821899 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.332957752 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.330832281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.334215353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330786282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.332972711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.334864263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33256065 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.330830582 seconds)
  done (took 30.560597282 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335313799 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334061523 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.332110497 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.333648501 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.332083726 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.334146806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.341327676 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.33313451 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334986593 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33259948 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330566351 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333714963 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.332042702 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333270343 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33230098 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.332453679 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335701328 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.333186622 seconds)
  done (took 25.257454273 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.334916072 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.334839026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.335466174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.333992697 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.333426779 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.33611899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.333609197 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.335206939 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.335733116 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.335534023 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.336274335 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335817691 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.336753135 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333481976 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336487017 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.334257111 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.337396235 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33344904 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336085691 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334523628 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.334506271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336472014 seconds)
  done (took 30.626418041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336929268 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.336380762 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.334393549 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.333476555 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333664767 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.336921035 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.336472111 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.334502506 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.336684651 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.336974657 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334092213 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.336916575 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.33494494 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.335540772 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.334599666 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333731968 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337162743 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.335733826 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337399973 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.335798873 seconds)
  done (took 27.96542192 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.338569611 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338782786 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339455991 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338386897 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339526829 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.338858697 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338640464 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.339128928 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.339087923 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.339155783 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.339200011 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338684877 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339188894 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.339724472 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339449641 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339014865 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339264536 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339072585 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340302106 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339554306 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.33987293 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339747832 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.339395796 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.338961069 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340798862 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.340376814 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34075861 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.341653321 seconds)
  done (took 38.759582685 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341290562 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.34035105 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.33801299 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.338275297 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.337493586 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.338031226 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.337848616 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.338102054 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.34114224 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.33797557 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.341586377 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.340435129 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.340978076 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.340669387 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341652159 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.340889437 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342221051 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.339328511 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339302977 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338811207 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.341948768 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34256687 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.340860468 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.338721757 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337882371 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.341466441 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340919415 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.340664776 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342719065 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.338761553 seconds)
  done (took 41.457783086 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.360921586 seconds)
    (2/2) benchmarking "in"...
    done (took 1.359644794 seconds)
  done (took 3.977125022 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.340758662 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342224909 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.341859455 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.339879161 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.33942464 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.34185362 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.343007146 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339750529 seconds)
  done (took 11.985891224 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.343273576 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.342071755 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.342592978 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.343313692 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.341919243 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.342819872 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348310831 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.36547555 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.34470578 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.345224357 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.350876722 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.350388637 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.345956013 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343402774 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.342355977 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345378149 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.343689038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.344045966 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.343663742 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.343723593 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34331764 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346301718 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.346606479 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.341270687 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.344853902 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.355243305 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.371695617 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.345290695 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343496014 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.348508049 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.345446897 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.341833725 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.345110217 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.344085627 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.344786317 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.344772255 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35316195 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.370663083 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.354558631 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370223847 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345130056 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.343165349 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.346710303 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.346847148 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346712883 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.347862467 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.346721214 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.343356636 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.345580285 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.34924022 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.351706498 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.346316629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.343268685 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350197904 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.34878588 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.352876061 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.372779064 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.348906927 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.35619922 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.356542538 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.381522555 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.37676821 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347986491 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.34634524 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358348298 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.372820353 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.353943628 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.368791601 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.345345415 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.347371341 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.353941356 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.380085588 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.376948318 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.347071558 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.347735498 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.347748962 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348078725 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.348027997 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.355219514 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.37542076 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.349174622 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348042877 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.358056345 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.372358189 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.347764883 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.348171127 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.34918691 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.348252991 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.351501713 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360003859 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.377519172 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.34957486 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.347989095 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.349489416 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.350029724 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.34928771 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.348281243 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34961379 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.346787114 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.34865585 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.348293542 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354129429 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.358622204 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349683085 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349214495 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.356817425 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.374316867 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350192175 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.356957858 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.353064023 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.350565907 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.351411066 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.358440288 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.347920963 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352926652 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.360620446 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.349774555 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.353279237 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.349993969 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.351018632 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.361569868 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.37742587 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.353302421 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.351686816 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.355701213 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.363650787 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35084768 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.353731982 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.353578216 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.348633916 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.349593878 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.352970824 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.352022545 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.352112235 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354086376 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353210988 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.34907152 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.351406266 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.351880904 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.35195822 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.353556467 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.351514402 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.351849321 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.352818606 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.351148419 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.353015365 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.357895364 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.375935093 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.353857388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.353002874 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.350011237 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352593554 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.3524521 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.351444527 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.353012374 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352490173 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.35224243 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.353267786 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353936738 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.352012382 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.353019819 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.354139842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357435416 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.353223591 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.358087349 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.352237206 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.349884995 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.353161379 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.353964274 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.352959751 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.352764144 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.353505489 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.357017295 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.362489574 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.35363801 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.353358517 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.355729614 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353885474 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.353438396 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355078668 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.35821218 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.363696822 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.356683357 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.362669688 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.379033126 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353747517 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.35506385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.355905356 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.356841854 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353536459 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.35966389 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.364091198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366894559 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386580277 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.356561653 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.359502947 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.357633769 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.358693518 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.359390075 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.357775835 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.356469718 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354713511 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356056238 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356443613 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.357776812 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.355834622 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.355307434 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.35630206 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.356005781 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.354868893 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.356854437 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.356984872 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.360343699 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.354923754 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355891882 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356535776 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.356393294 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.357020901 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.355872666 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.356616781 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.35878489 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.357129715 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.362852012 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.357746165 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.357810051 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360828225 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.359753476 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.359196068 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.358204025 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359100383 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.360866879 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363961272 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.386552683 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.359058921 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363313046 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.382281599 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.356321821 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.360797517 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.360416632 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.35678821 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.361801627 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.366707131 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.35773711 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.356803182 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.359015606 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3589821 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358509704 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.364282934 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.377572088 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.358076552 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.358304671 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.360082935 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.356638004 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.359258333 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.359156561 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.360057926 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.360446905 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.358728213 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.359616408 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.362759085 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.359172378 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.359641258 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.359098954 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.363281054 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.367597544 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.36377651 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.363366584 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.361803809 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.360772298 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.365376865 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.359895964 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.360597907 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.360339559 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.371948751 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.387788987 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366933665 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.383542761 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.359567066 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364971213 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.38248385 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.364606375 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361477381 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.361119864 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.36075733 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.360005508 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.357716011 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.361804343 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.362011467 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361669896 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.363806084 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.365446039 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.360679105 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.360793645 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.361921101 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.361224469 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.362054704 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.36118194 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.361286975 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.363544265 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363131731 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.362652855 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.361639287 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367775149 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.385323841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.361420387 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.361954537 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.36198985 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.360833404 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.363195788 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.363378564 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.366112259 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.370986496 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.36620437 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.371690024 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.363853257 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.372254132 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.362250719 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.366858311 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.371669818 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.359204813 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.363011982 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.362350466 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.363002437 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369787403 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.385951554 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.364404279 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.367229095 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.364302775 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.36362059 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.362219538 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.363070615 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364821396 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.363272598 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.373523782 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.392712355 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.369018759 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.368416911 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.366417123 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.364196365 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.36493703 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.363331164 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367131163 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.366344629 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.365369249 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.365006469 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.36479749 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.365459062 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.365553154 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.366012509 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.362388056 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.36387223 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371638658 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.388924414 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370311174 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.365706022 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.373784279 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.389075038 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.372344921 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.393153604 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.366488457 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.365451859 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.365845289 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.368074341 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.365444042 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.366948757 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.366089105 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.367874825 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.371117453 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.366594892 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.369198753 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.366997807 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.366225109 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.36636707 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377534152 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.39031652 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.36799473 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371090824 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.364296123 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.36867957 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.371302677 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.365930742 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.365910944 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.370472021 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379516807 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.376154946 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.368154373 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.366176999 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368051427 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.36662264 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.368455915 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.366795976 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.36768281 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.367506063 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.369146654 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.36808008 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.371226031 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.367932135 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.369102968 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369307168 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.368933946 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.378510487 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.392781084 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.370468122 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.368115442 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.369301667 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.368734178 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.369613055 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.369410518 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370250691 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.368756684 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.370974203 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377787097 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.375565244 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.37151258 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.37027113 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.370181998 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.370480509 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.369483891 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369093845 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.369819748 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370099824 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.371919515 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.368833499 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.371304161 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.368210987 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.36923672 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.370402335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369153931 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.372501648 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.377909811 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370732443 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.36789761 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.369524807 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370678927 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.369373067 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.370465467 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.376866765 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398979938 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.381862969 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.380327656 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.375404453 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.371763677 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.37437409 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.379396287 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.370654718 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.371252099 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.372638136 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.374047339 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.375374053 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.376105718 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371199193 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.379416171 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.396505594 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.37150812 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37958326 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.396366657 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371339745 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.374319125 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.377369274 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.372639255 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.369461078 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.372424177 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.370244328 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378871922 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.39865246 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.372088141 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374973437 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.371183116 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.374996461 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.377168502 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372890026 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.375100519 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.370451993 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.373710209 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.373595049 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.374665387 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.371003785 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.374552743 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.373030281 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.376137884 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.381414429 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.370633197 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.375604612 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.373338771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.374604204 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.373473437 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.375346496 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.372612007 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.372191098 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.373398586 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37445163 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.375648769 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.376979045 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.374815625 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.376220007 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.376318668 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.375068352 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.378653995 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.387423111 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.383842752 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.371961869 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.374550814 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.375091109 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.377488383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375321436 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.375774497 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37527191 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.37726326 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.375054732 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.376105345 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.376131646 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.378729178 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.39243715 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.400743122 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.375269017 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.375827048 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.380202093 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.378422207 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.373452666 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.376286541 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.377824329 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.37867964 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.384629297 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.375910536 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.382461086 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.401252027 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.377838465 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.379761147 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.379890235 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.384330559 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.378749059 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375388475 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.377445357 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.382911471 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.393817479 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.378705288 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.386830541 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406919154 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.402362424 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.377839651 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.377761198 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377238628 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.37703745 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.378577475 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.37720739 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.37808236 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.377575891 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.377405245 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.379730637 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.383645611 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.379952741 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.380756486 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.377489363 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.379147394 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.380023084 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.375839241 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.378050696 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.378278108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.377808348 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.379260044 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.378598543 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.379638896 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.392275507 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.412170219 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.378011998 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.378871756 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.377273719 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.382639744 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.382492222 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.392204783 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.387770521 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.378772467 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.381072233 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.380704752 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382399785 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.376997653 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.380031285 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.379754307 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.378215775 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.378041102 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.392071916 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.411797595 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.384729355 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.380469655 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.380101389 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.381124195 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381860603 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.380920886 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.380467224 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.382978217 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.383197646 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385384167 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.379534299 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.379911423 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.385214272 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.389025695 seconds)
  done (took 815.049769202 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.37908988 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37782144 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379078151 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.379447989 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37825096 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378299708 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379450605 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379292558 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.379779315 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.37933402 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.379166839 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379090608 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.379398454 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.381394852 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379664544 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.380372767 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379704903 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.379963227 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379945245 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379659458 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.379444939 seconds)
  done (took 30.262326673 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.383903562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.380386681 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.380016604 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.382191367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.380133543 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.384055636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.38114158 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382748519 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.382668142 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380696358 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.384624691 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383324015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.381176389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.380848157 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381500117 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.384461478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.383976622 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.382315344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.384591876 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.381224856 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.384080363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.380931317 seconds)
  done (took 31.707118529 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.384366249 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.383663185 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.383971759 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.38220959 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.38315538 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.381771141 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.383715909 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.38462208 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.384638619 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.383562259 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.383340037 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.385193633 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.392651939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.390601334 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.385743374 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.385192369 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.527965815 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.384372035 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.384739969 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.386257631 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.382893863 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.389556716 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.407285493 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.382948158 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.3838364 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.386144101 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.386452405 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.384852421 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.385121564 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.387660114 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.389129044 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.386390336 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.386524014 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.387894035 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.386008976 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.387936241 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.390008679 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.384880967 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.383306449 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.385897596 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.39627011 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.408607158 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.386022404 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.392377728 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.408806491 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.386332996 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.390738951 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.393622145 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.385050782 seconds)
  done (took 69.432526307 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.386595793 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.387173174 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.385579872 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.38757327 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.387216548 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.387387452 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.387547693 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.387191698 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.385725931 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.384512115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.387997356 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.386397583 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.384717555 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.387542668 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.387919498 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.38491716 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.384732088 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.384713887 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.385489681 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.385996095 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.385242883 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.387350232 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.389158529 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.386153998 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.389360859 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.385958001 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.386372633 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.387477563 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.386574112 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.386733759 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.389045389 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.390203728 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.389674399 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.386636153 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.387070954 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.387772987 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.388555627 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.387735231 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.389144458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.386334043 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.389419072 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.389539281 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.389413612 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.390685657 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.387077972 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.387543156 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.387420728 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.387302498 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.388273752 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.391278278 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.389947519 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.387930766 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.389793059 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.386919846 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.390162713 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.391252 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.387778099 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.388690493 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.390734271 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.388740426 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.388297655 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.39170621 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.387996008 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.391413065 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.391335266 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.389462838 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.388090351 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.391715357 seconds)
  done (took 95.681455815 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391979863 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.391432404 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391197563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3916185 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.390666995 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.391219377 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.390763657 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.391993708 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.391157061 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.391938528 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392341917 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.391746446 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.391200803 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.393110781 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.391512108 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392644425 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.391201446 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.392057219 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.392333225 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392693622 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.392156958 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.392917268 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.391346412 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.392667819 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.393351003 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.392245824 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.392817059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.392884968 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393068598 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.393265806 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.39431167 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.392778136 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.393322194 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.39228441 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.392745097 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.393056169 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.392844073 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393316307 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.393141383 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.392501503 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.393604879 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.394001052 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.392649909 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.39447043 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.393589698 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.393390445 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.393694602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.394106001 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.393517873 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.393784629 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.392478737 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.394036366 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394120438 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.393308103 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.393887459 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.393808959 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393848587 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.394041361 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394007609 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.394434383 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393740854 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.39456667 seconds)
  done (took 87.66051346 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394913937 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.395027378 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.392992842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.392071223 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.395051404 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.392813087 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.39593679 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.39493999 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.395595593 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.394177103 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395127691 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39310846 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.392413896 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395993991 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.393951049 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393293532 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393084282 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.393470889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.395551256 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.392706949 seconds)
  done (took 29.189889406 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.394468916 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.397070658 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.394396283 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.3954127 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.396654124 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.393649764 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.396542937 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395503665 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394719082 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397877957 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.398060042 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.397952328 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395343666 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.395041461 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.397162325 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.394724786 seconds)
  done (took 23.642670705 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.395471847 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.39796143 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.398267936 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.396494924 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.394787108 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.394347429 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.397618724 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.394532322 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.395123606 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.398387823 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.398164984 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.398993016 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.39792584 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.397087792 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.396413458 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.397656741 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.396075898 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.396454174 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.398606166 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.399349417 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.396713211 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.396840194 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.398075065 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.398320401 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.397411299 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.39750642 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.396697789 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.396059467 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.397227477 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.398933157 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.396852936 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.39621949 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.396245069 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.396016463 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.398246386 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.397054847 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.399405597 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.399376687 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.399562134 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.400070916 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.400256419 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.397252643 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.400073931 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.399666328 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.397544428 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.400316152 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.397798358 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.398152398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.396193879 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.397347795 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.400617907 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.400324825 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.400487699 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.400437853 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.39964029 seconds)
  done (took 78.190496271 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.401480311 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.40171777 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.396928991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.401153288 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.400145367 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.398129648 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.401087034 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.398705255 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.398762631 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.401822174 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.399732604 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.401792193 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.398152157 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.401875956 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.399775614 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.40155202 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.39912634 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.399384321 seconds)
  done (took 26.514204137 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.399628186 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.398698119 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.401764265 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.39889767 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.399378279 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.401589926 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.399403987 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.402622974 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.401383105 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.399740875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398259135 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.402704626 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401882452 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.40159727 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.399432164 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398751593 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.401963961 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.402375033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.399133845 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.400518756 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.403252175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.403270957 seconds)
  done (took 32.130018061 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.40233035 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.401651722 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.402531229 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.420081426 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.423621202 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.426919825 seconds)
  done (took 9.791107704 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41146474 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403751178 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.402235734 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40404261 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402463191 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402112645 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402124209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400481517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403288933 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402059101 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401336599 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404631291 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404608541 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40104465 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40526312 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405076378 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401661397 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40194231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402711149 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405311055 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402387312 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40505591 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402032849 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402488724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402651341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402585296 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404830343 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403924961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404115343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407099707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405658615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402668648 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406385483 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404196974 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406462266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405375137 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404405609 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406833456 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406830441 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403033007 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405825852 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405469513 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406830523 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403811656 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406207184 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403058098 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404697181 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404676337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405364059 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407672722 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406457795 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40516387 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40829107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407260537 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408519708 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407514437 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404259005 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403684948 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407355828 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405041698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403842801 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407627733 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405160556 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40457583 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407941162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405801944 seconds)
  done (took 94.049802248 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405587794 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.405192997 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405364854 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406494465 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405518961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405099098 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405365555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405890379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405301416 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406721928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407757402 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405532131 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405089872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405685617 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406237073 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406122019 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405799436 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405536131 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404792688 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4099959 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407083166 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406426598 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406959203 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406690415 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40618614 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409080378 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405782394 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407436023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406985698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408388811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406912747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408647985 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406831008 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405873708 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406931714 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407416564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407260374 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407206896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406158047 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411105648 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407155011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410885026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407436683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407678488 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408320828 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406886996 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408041531 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407443548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407932079 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407968207 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408899407 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408671353 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407164311 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408209407 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408561352 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407420907 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408343357 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408013737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408194051 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41184814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409092332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408401486 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411608801 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408805654 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408636453 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409605275 seconds)
  done (took 94.207415506 seconds)
done (took 1900.500404299 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.467004624 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.46936433 seconds)
  done (took 14.25813714 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.574860434 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.525394778 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.411359434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.408665496 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.410987501 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.412332566 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.406242797 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.410691821 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.410493106 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.412397681 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.411329245 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.601722285 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.413422749 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.412368521 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.411084785 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.505042824 seconds)
  done (took 44.470201408 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.442831599 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.424294017 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.552786537 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.447276437 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.442306013 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.641249875 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.484843401 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.424276623 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.625385442 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.471337557 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.319887306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.449971809 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.420267262 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.791977896 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.445671007 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.638094659 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.71547701 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.345495109 seconds)
  done (took 33.40765842 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.962696705 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.437598049 seconds)
  done (took 9.724709941 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.425561039 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.450964591 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.43009193 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.435529218 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.43046507 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.409629929 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.459076367 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.470230325 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.49096191 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.450312916 seconds)
  done (took 65.789496644 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.440994763 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.417196956 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.417544735 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.415033142 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.408554515 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.417259513 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.415049675 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.422473218 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.812097363 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.575316233 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.447043002 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.421584831 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.438011556 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.418380108 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.414027802 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.456829909 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.567755985 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.435815133 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.414621001 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.422388827 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.416321418 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.512826234 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.471538545 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.42207561 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.567740089 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.839968843 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.428984605 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.423931557 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.538388336 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.436607519 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.417012943 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.417506893 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.419439179 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.041826864 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.994576591 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.438545445 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.445187252 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.430416086 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.415957185 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.542520329 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.440932345 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.42328542 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.421113634 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.960951667 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.600719034 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.560216571 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.975570869 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.428287292 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.41894032 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.487292669 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.427157936 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.419038626 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.451312193 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.264137761 seconds)
  done (took 118.405823672 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.448325564 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.903530293 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584854225 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.440344306 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.277808981 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.198634771 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.439181008 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.765032219 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.458326674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.412790695 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.723379477 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.994241718 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.439545496 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.473273614 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.075353749 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.499280719 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.414211021 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.28017716 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.440362681 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.414674199 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855551546 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.444518738 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.412982431 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.588069021 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.456496414 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.952934986 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.171466268 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.769029722 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.442374027 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.412598643 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.943497445 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.443726029 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.456760815 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.416233593 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.720926268 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.849908588 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850547363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.443561328 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.438507397 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.414730089 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.440844123 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.927806312 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831601136 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.434503007 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.446481923 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.932059584 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.435383738 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.420506766 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.424791768 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.626043394 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.390364344 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.420836678 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.147443192 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.415559608 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.753150686 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.500232865 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.504329878 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.960534364 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.436737068 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.432318755 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.453273488 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.41719259 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.420003684 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.424238737 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.415484259 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.816378207 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.568944374 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.420004464 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.816796566 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945920463 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.436932424 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999460574 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.431459743 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.457341435 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.501532749 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.41580978 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.04250162 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978628695 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.458558822 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.415962652 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801722855 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.438562202 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.721647649 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.437455189 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.416662983 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892598753 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.446699021 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.467742974 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.43394071 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.4195991 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.047314925 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.425995705 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.737428991 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.444508258 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.418932737 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.417985918 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.447107628 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.418451726 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.419350953 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.42128579 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002599221 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.452677979 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.586089171 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.445428957 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.418917896 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.41885434 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.417594397 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.420167816 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.645789179 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.977426026 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.432364677 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.419651463 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.425380924 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.423809569 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.563718349 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.421500395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.800779888 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.445975749 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.427133804 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.423769828 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.18747201 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.495367546 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.419538409 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.422877688 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.29651607 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.662957093 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.448044839 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.419653191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.419773623 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.440038571 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.993160159 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.420369616 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.454671014 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.422629697 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.186086612 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.47933365 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.429779343 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.049882616 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.432856314 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.420435198 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.4485155 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.421354833 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765376664 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.732878944 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.48714881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.423981304 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.443418602 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.198313329 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.471697968 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.574974274 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.442844829 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.456185331 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.632311118 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.754503535 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.424744577 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.006255708 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.422813345 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64428931 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.430478236 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.778941387 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.975965778 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.449392425 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.421660586 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.187927846 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.120996999 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.063280938 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.422616306 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.732106753 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.439835027 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.878181287 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.422302653 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.423232025 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.880628244 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.424901336 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.433747435 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.422535002 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.42326077 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.571876401 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.603264276 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.175361239 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.425448652 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.936728293 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.44558167 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.424408557 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.433129442 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.425953827 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.776909922 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.521589889 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.423450954 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.470971839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.425541854 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.42366595 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949624038 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.402995877 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.433677153 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.582952976 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117170744 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.45171321 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.423190877 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.142617215 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.722935058 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.986514679 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.473486503 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.786110099 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.444647867 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.469679015 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.204919175 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.462493977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.951761213 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.449503263 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.426572458 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.070340898 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.444944662 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770028391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.426385268 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.426917814 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.026085365 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.445283292 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.426001117 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.006960489 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.426069903 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.679972661 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.431596328 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.473936435 seconds)
  done (took 1136.474957936 seconds)
done (took 1423.852720585 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.42631224 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.436001173 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.415799768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.435279499 seconds)
  done (took 27.055757664 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.437282875 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.435299211 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.43382501 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.432447977 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.433931631 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.43375015 seconds)
  done (took 9.949278403 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.566375709 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.435190984 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.434624496 seconds)
  done (took 19.779530506 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.693754605 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.914718974 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.878944696 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.051454465 seconds)
  done (took 11.882601547 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.434687672 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.434802865 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.434439115 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.434610747 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.437338023 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.438163198 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.434439682 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.435599179 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.435657636 seconds)
  done (took 14.261121676 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.042570677 seconds)
done (took 90.31342934 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.522940672 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.445482209 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.515483516 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.347315837 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.004611687 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.521784689 seconds)
    (7/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.311516514 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 5.833080178 seconds)
    (9/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.353250188 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.712203763 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.498477949 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.417116745 seconds)
    (13/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.427153564 seconds)
    (14/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.527127412 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.470162848 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.505884513 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.394202821 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.424901187 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.4639806 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.114866673 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.433781355 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.458302775 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.445797855 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.45594218 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.624479574 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.601293089 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.972108012 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.439016836 seconds)
    (29/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.960417656 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.554629573 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.734206618 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.145826749 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.446796021 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.150202206 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.410701014 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.105322213 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.400305921 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.4294557 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.495544018 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.381788581 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.44022969 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.112911362 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.581263307 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.446263496 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.539475212 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.54084635 seconds)
    (47/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.142586828 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.238189565 seconds)
    (49/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.542457063 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.513818219 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.431341739 seconds)
    (52/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.619733743 seconds)
    (53/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.431955296 seconds)
    (54/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.444209644 seconds)
    (55/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.320264772 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.534597597 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.431737715 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.450057565 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.418832568 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.153365543 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.572428416 seconds)
    (62/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.201046823 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.727157514 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.438724243 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.433763121 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.462180063 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.549634738 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.488750724 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.717330566 seconds)
    (70/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.101338228 seconds)
    (71/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.428715299 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.564109987 seconds)
    (73/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.419743918 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.43106221 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.952848611 seconds)
    (76/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.201285162 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.867957285 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.169452349 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.634059868 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.442644903 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.345267378 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.665966585 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.394971697 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.561471031 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.090245691 seconds)
    (86/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.220794246 seconds)
    (87/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.981880173 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.281681178 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.004021728 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.435101271 seconds)
    (91/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.413363781 seconds)
    (92/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.437144921 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.623510156 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.869146315 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.786168446 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.44437483 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.581599712 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.433918569 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.418756413 seconds)
    (100/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.243410187 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.511908518 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.521829264 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.078424078 seconds)
    (104/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.334256245 seconds)
    (105/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.452801344 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.434859811 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.758526808 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.511868943 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.147774026 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.066508495 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.46265747 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.043207051 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.436718751 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.461883655 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.418549821 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.646303468 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.436748325 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.883558448 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.454345453 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.556555413 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.481289681 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.433688717 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.856220044 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.939253576 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.353140337 seconds)
    (126/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.464560401 seconds)
    (127/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.847135376 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.91313586 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.696111935 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.540230665 seconds)
    (131/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.176905944 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.158372376 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.890392873 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.742575109 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.456143937 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.685543534 seconds)
    (137/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.206030955 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 1.978267865 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.488691845 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.456752648 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.592969877 seconds)
    (142/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.515231762 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.699714836 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.724381667 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.55352565 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.302150913 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.32360771 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.537998612 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.69754534 seconds)
    (150/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.90412804 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.461274059 seconds)
    (152/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.87378243 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.878283689 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.011294389 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.170163286 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.575769213 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.052280848 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.361146012 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.775062419 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.423087155 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.467329588 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.989832587 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.383352133 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.499636854 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.471697874 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.612074501 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.49322177 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.365176825 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.227227149 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.515260431 seconds)
    (171/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.050881112 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.811942896 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.447894173 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.023533542 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.470331478 seconds)
    (176/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.63667133 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.519592033 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.457806249 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.352980147 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.313924759 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.456566374 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.369952324 seconds)
    (183/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.429380427 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.212701688 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.085196781 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.813372026 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.506793608 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.354187847 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.156633752 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.748850194 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.902402322 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.996360927 seconds)
    (193/309) benchmarking ("sort", Float32, false)...
    done (took 5.525418732 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.580717671 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.988062751 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.475174308 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.163068518 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.107572682 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.454776656 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.446591116 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.484396118 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.867825012 seconds)
    (203/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.234330613 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.470737477 seconds)
    (205/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.863079846 seconds)
    (206/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.449209807 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.398086298 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.555782739 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.053463866 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.868944568 seconds)
    (211/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.873260593 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.807755118 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.527546266 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.217138221 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.855224588 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.179058733 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.419120571 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.086628142 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.655126607 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.228039123 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.468804716 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.450498091 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.467701017 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.464847026 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.533937965 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.468020382 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.443240604 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.340346081 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.481394393 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.49046847 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.123237236 seconds)
    (232/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.459503408 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.645772335 seconds)
    (234/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.400294379 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.840347221 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.525944444 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.432385089 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.461234332 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.446962196 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.516160706 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.46944324 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.432020097 seconds)
    (243/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.845876009 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.463672661 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.469897051 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.077872056 seconds)
    (247/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.46816945 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.493621745 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.434223082 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.481654132 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.227084335 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.652070514 seconds)
    (253/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.470348283 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.443480997 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.478974771 seconds)
    (256/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.384563251 seconds)
    (257/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.907736057 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.720097896 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.50123129 seconds)
    (260/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.503335051 seconds)
    (261/309) benchmarking ("sort", Int8, false)...
    done (took 4.478121859 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.836191197 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.752416918 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.937422411 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.501870862 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.530240259 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.569763067 seconds)
    (268/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.528511672 seconds)
    (269/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.528254037 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.981075787 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.433006892 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.591266979 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.33776732 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.455510505 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.449018097 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.514625689 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.44429222 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.56807609 seconds)
    (279/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.426693505 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.542215953 seconds)
    (281/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.449921355 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.825080625 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.571843685 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.52815613 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.296685231 seconds)
    (286/309) benchmarking ("sort", BigInt, false)...
    done (took 6.445450307 seconds)
    (287/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.283651499 seconds)
    (288/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.446728117 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.509890693 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.488673992 seconds)
    (291/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.447020319 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.801541957 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.05030128 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.545440928 seconds)
    (295/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.281676728 seconds)
    (296/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.339561689 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.474662678 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.51210764 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.673397361 seconds)
    (300/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.53218592 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.447270406 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.246851727 seconds)
    (303/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.455580156 seconds)
    (304/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.826349251 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.478971357 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.574422433 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.4479055 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.485488442 seconds)
    (309/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.872243778 seconds)
  done (took 985.127404693 seconds)
done (took 986.471197106 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.481353818 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.475303352 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.458627129 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.48056308 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.570322695 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.48358421 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.470249639 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.461864971 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.506624437 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.508278398 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.457179377 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.484115529 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.45971122 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.459411555 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.459065055 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472722657 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.696507299 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.467818338 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.476720875 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.470652989 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.474517353 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.458019026 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.509149192 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.48312087 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.4626202 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.462476347 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.461914171 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.480257755 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.570465694 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.463086663 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.463457008 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.471692056 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.663485741 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.459295878 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.454541434 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.47907914 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.472204906 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.470346454 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.464128022 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.493181379 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.240864032 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.489495708 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.461999997 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.463120536 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.461681836 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.466171606 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.462766324 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.469066048 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.47509015 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475735026 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.247485747 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.504450291 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.46617761 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.46296568 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.473625316 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.462905896 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.469115613 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.479290979 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.481905456 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478564431 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.655263907 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.466953327 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.463987308 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.478201183 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.469395994 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.28596207 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.487667461 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.465248597 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.24106199 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.496846106 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.290456648 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.499489706 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.465106013 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.477447027 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.494871974 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.667161112 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.458974978 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.462691678 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.470231771 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.461764991 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.473755401 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.476630032 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.469075405 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.464570934 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.47743597 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.489933561 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.475283632 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.464792387 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.473405077 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.484101414 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.471147864 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.476854068 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.4679048 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.460828714 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.474229831 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.467644356 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.467389079 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.467545977 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.470000502 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.475753668 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.239679124 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.509904871 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.461764375 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.46155046 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.465490184 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.479958486 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.243790272 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.494650497 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.489201838 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.512792137 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.46755921 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.660542649 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.46949314 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.482002118 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.475134611 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.469557269 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.461663152 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.661397081 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.256262044 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.510041341 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.469245422 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.465374494 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.482380188 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.467599209 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.462990603 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.673606162 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.468220018 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.480461734 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.588018632 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.478348548 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.499570347 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.466522188 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.47036138 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.492017323 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483342675 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.499762631 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.470640375 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.484412127 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.484888707 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.464494178 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.478069083 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.478905904 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.469150748 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.474012085 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.460624649 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.49718985 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.479829923 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.481413267 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.488367134 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.588796363 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.464646094 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.663523566 seconds)
done (took 249.735756968 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.527939215 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.457779286 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.551449226 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.466536107 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.570024339 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.569672132 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.462671482 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.462610523 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.462903645 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.847247856 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.464018776 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.463150472 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.460219535 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.463703101 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.547107357 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.466354429 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.46315118 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.80870724 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.466119724 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.536856228 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.464498302 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.462632834 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.465960039 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.849404768 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.467369392 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.46297556 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.537275577 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.465883015 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.815940512 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.462822627 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.466199545 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.812471752 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.557139852 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.483870257 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.475832903 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.473305722 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.57107681 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.489882979 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.547650519 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.54904314 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.553612025 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.504426342 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.462278238 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.464978745 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.469546607 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.467617202 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.464780466 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.494865854 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.460468064 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.46570662 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.809336306 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.477687067 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.475737696 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.466604761 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.466596329 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.488776731 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.465434429 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.468205386 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.558769519 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.468171235 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.530686655 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.85311221 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.847778093 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.467381749 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.469201437 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.466956867 seconds)
  done (took 157.361513867 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.536518691 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.542676708 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.593334234 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.49049526 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.518509193 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.598480251 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.490939539 seconds)
  done (took 12.14589969 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.47508325 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.469802774 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.520433976 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.519383233 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.470195846 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.617146743 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469592509 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.479561151 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.46863672 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.523027095 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.469373607 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471838731 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.47658983 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.464468262 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.51795894 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.481623228 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.585817732 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.471975692 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.471478241 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.627084751 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.467869666 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.478550867 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.524560135 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.483038266 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470644686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.478250575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.042477643 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471460771 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.46962705 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.471252272 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.469306411 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.50977074 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.472610789 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.471346848 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471219489 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.58899289 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.472392779 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471006154 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.472721452 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.467709597 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.472059057 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.473489443 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.473163464 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.469755329 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.471987595 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.495918373 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.473038238 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.472823557 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.472138153 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.472300824 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.521984138 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472583115 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.469857643 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.470648523 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.527917483 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479715484 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472861115 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.470993298 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.473209141 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.470188091 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.628819281 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.521660107 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.473317084 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.520516662 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473349892 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.473197837 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.472829915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.473163302 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.526789326 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.474824805 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.52178805 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.471896703 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.62719417 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.497192726 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.475650504 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.476360717 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.47671303 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473938391 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.468935758 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.479576577 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.471853854 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.476454631 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.480343036 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.471877467 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.47201817 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.577238167 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.583716881 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.473023696 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.488341617 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.481370888 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.472719388 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.528849932 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.474154865 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.473134068 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.527071225 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.590433749 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.530741147 seconds)
  done (took 166.81275729 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.480856098 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.484297127 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.477174899 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.491383798 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.47546044 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.475501115 seconds)
  done (took 10.266056874 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.478386016 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.477496507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.474756364 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.475763419 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.475559617 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.476358873 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.476500683 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.478147825 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.480393624 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.476398174 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.475272674 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.476383458 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.475503996 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.476699206 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.477159931 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.477089102 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.477414245 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.475522267 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.477341016 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477581991 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.573379481 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.476854671 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.476795105 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.479325281 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.480089267 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.477353856 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.486718271 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.477325064 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.476140382 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.483892688 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.50093228 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.477257678 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.478687331 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.485787197 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.481477106 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.479120497 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483174562 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.478417426 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.47624486 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.477084682 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.479127787 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479658412 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.478902145 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.47840841 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.481332069 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.486355813 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.483743 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.486395153 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.481094998 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.479266619 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.479358132 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.479162398 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.477099246 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.479492759 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.481672285 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.505853114 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.483444839 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.481587672 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.47976188 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.481325253 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.482945296 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.479858801 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.482538532 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.483769467 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.488072815 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.480199193 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.482079836 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.484146892 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.481105116 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.480810733 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.480005426 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.477628935 seconds)
  done (took 109.052210454 seconds)
done (took 457.009429981 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.786396122 seconds)
  done (took 8.172016094 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.5207586 seconds)
  done (took 7.908762205 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.193407542 seconds)
  done (took 25.858260661 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.51271552 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.556087095 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.492419815 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.483580457 seconds)
  done (took 27.431548354 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.971026097 seconds)
  done (took 8.358831232 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.474737501 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.476115179 seconds)
  done (took 14.338854709 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.935547756 seconds)
  done (took 8.322419294 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.675801855 seconds)
  done (took 8.072837611 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.478229957 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.514283196 seconds)
  done (took 14.390177828 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.473431226 seconds)
  done (took 7.860375164 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.957305207 seconds)
  done (took 9.34563127 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.478017712 seconds)
  done (took 7.866479006 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.481590778 seconds)
  done (took 7.868270737 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 10.060360455 seconds)
  done (took 11.446602683 seconds)
done (took 168.627539098 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.47647428 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.484065265 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.485745473 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.483970334 seconds)
  done (took 27.31652216 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.998883239 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.516333317 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.517671881 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.527023142 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.518944976 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.515915354 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.508831918 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.508902555 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.530010824 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.518930583 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.519146764 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.519317761 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.518060442 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.509077594 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.52046602 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.520562479 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.527284233 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.520711099 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.510265369 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.519935459 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.485112822 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.52796234 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.521052224 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.48434502 seconds)
  done (took 38.253705064 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.005822082 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.554341136 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.637362166 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.534995356 seconds)
  done (took 8.120620668 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.535026295 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.538457324 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.549103322 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.588744583 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.614696479 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.547025883 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.510902558 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.505312646 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.492327218 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.536768074 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.612896582 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.553450656 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.634360733 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.485233234 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.6891215 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.485047684 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.484914119 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.536887582 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.589043405 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.602778774 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.486794664 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.537349802 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.540838532 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.555489037 seconds)
  done (took 38.602118153 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.498540909 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.493945477 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.485973615 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.484208517 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.506870211 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.485009268 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.485674254 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.488133903 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.485148926 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.489660042 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.485586144 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.497902548 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.484901136 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.486068092 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.491093274 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.489678961 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.493058701 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.485783461 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.486590967 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.490133729 seconds)
  done (took 31.184359665 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.480505423 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.333409385 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.831891249 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.73654492 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.481579756 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.488654539 seconds)
  done (took 28.745489564 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.577026117 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.764323306 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.495713898 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.947243238 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.057651747 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.518239815 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.487914727 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.782306052 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.203366693 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.197186109 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.568420047 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.573906594 seconds)
  done (took 22.567060857 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.48113364 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.490013131 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.505562452 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.506663981 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.556532219 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.521554009 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.497099262 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.48472846 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.565221193 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.590851926 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.521019693 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.55831065 seconds)
  done (took 39.672904961 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612883738 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.535201155 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.640773983 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.47137659 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243043803 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695185596 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417926583 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978932573 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.486669247 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756366184 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490470871 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622772322 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741093408 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487703075 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.492527697 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.641688343 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733779072 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098603744 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493271112 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204455737 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518682966 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.50196065 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.335354829 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526498746 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.731781997 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.468578689 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.744399832 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.25975537 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844311197 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505283333 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494570255 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484866027 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758645555 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203913184 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604811345 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495259203 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.44657174 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033686617 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.476548277 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.23633478 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.503849156 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.495521584 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49672325 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484314499 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.428037658 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.491131259 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989863545 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.492311343 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.197216848 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.485113997 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498464162 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580247407 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.488614086 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.060458193 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734868256 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.493350241 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.4824838 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492828128 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060141732 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.892768195 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.497303198 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.431400725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.061891831 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285189429 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27288403 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.618112958 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.491405528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490201546 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433235819 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.282431956 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512281178 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63283429 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.51396028 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183810207 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370136529 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.513348249 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.440306599 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162411057 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.506717107 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.431858746 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716701676 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265175522 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428002517 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.438374472 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.422947483 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354644475 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505032157 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.052412873 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504097041 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.982046923 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.498843913 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506114872 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512293662 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.712775826 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.368519402 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488670838 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.497226915 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62359214 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510772947 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.977399231 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436102203 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.493489758 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748270846 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.699900676 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496164574 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.685374223 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769423831 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491113064 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.514372291 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.501272488 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509508097 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.213132247 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533496414 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.875254366 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517498787 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.269471785 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386240725 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503334775 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.600240616 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.49599535 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790119415 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.419841505 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397074638 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558873506 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.497538766 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.492205036 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.307361742 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351300547 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.650188026 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.489137841 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.50540233 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510967599 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.49224683 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486815155 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.506942727 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491430411 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.303883607 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.716329231 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505569208 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775393437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426084071 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637656173 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.548205705 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.716095485 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.946916085 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.520698015 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.754140569 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492191038 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.524209018 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51373769 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511454171 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58960639 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514661611 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.493963649 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.759829443 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.496787113 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.497120477 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331599606 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.279895296 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493544776 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.498625625 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.528923974 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221804834 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512445029 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.49765395 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387046148 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.507788508 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561360681 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501095872 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50385117 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.723433835 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563838509 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.50373755 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.502366735 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728263301 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504878153 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.310206138 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583994361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.73667791 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224664344 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538917001 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.428477668 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.206885607 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.187165761 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495264178 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.687306875 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.493993015 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503604823 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505939466 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.242661729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.22371862 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.527389601 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.2472 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.510030135 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505597763 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.499544176 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496865628 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.721785741 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.915719273 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.513404858 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515635693 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638231645 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.50970024 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.431370463 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.012447568 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501841655 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.494925682 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.271506859 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529703514 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.230910636 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040847444 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757216905 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.436788878 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516050685 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.446105757 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.543811218 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.501562509 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.497368794 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.521382811 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.508322819 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505893742 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.508268722 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.261934252 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.989983818 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064391033 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498420571 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214155474 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668563223 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.511720865 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.409100251 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994805029 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432926293 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.158616963 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733251694 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029475987 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492325443 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746827782 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.883873416 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.45206865 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517724276 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727214604 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.562766015 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.51345707 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519767938 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710677088 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53474719 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.509312003 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450804541 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.781649633 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807853589 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.510450767 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587951501 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994800764 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499363353 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.287507695 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.499421997 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.046774762 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735227689 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.130481703 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.927772734 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.500693279 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.519763745 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040983659 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.50264215 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.030418234 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245335922 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.546128445 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.754322435 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441196711 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.512168519 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.512004517 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.496790824 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.246290199 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.507462024 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.767219602 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512515951 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43758557 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.51984228 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17774376 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.391894336 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.50847527 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502227086 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410176831 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.515466701 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863791552 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.511667974 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.750124449 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515278848 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.437049238 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437271128 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.195382578 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.511943768 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487665483 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13290448 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.0336498 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726390271 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.543406717 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450603625 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.760435102 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.516764444 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21847815 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760880137 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.540560689 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525683851 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.602764616 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.518658857 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.492495413 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.385436822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.740508798 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542711486 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.728744458 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.676943329 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.41180169 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.502479925 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71488574 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.385435383 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.518175013 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810346784 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.244894607 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.503663155 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50778236 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560700926 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.510910543 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.563450561 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.07940225 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511792031 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573969006 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515890197 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.515261373 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.516073487 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709022398 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.521765189 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.51649992 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.518687639 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598391739 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.928451981 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.732573429 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.287437419 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241139272 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433759571 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260128933 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549485814 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.50519923 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505949677 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449710936 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653910446 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.034761618 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778631622 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633487849 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.207293205 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527757609 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.506017647 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.524056215 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725262269 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781146192 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384619175 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510962917 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179756333 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.398193782 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518397003 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.719383384 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139014472 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209913462 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640919077 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.514316086 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007188381 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780766967 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.598762017 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.508130412 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101167538 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.515785183 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.054514792 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.543063081 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507605024 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664430721 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.51762097 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228921451 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.540561331 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.663635499 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.281844993 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272610744 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.773514235 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.172065386 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527750091 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24344214 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399230247 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779448987 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578353144 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519455991 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.61901032 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654820445 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.506119683 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.400364153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.50980322 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358324135 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.218794428 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.519293434 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239992581 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80514934 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.506010247 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.505914038 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539927595 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.51980056 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.734550328 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37883272 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.742528299 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518814705 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.51876984 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.501616325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245429733 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554329252 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453623041 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.513933313 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806630032 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777660026 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535400355 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.962332313 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.220881412 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191045406 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.49340315 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532116321 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.511207178 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390749384 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219378132 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.762972065 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135110391 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.18062173 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.526947872 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.794110101 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.516100204 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.52110257 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795392346 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.515170818 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.512380861 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531658071 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.244376223 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.480508078 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.531809116 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291296611 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.457572425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.740437566 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309999751 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461810836 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512831623 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.73245419 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.513319777 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640860898 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524572733 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.510705259 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.52759129 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.255780076 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.826293774 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.518446619 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.495723909 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.50233508 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.53172795 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529181109 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826502243 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.518946741 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.187061263 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.864644799 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.770948563 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.513550252 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.502080311 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.51782827 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.513595348 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.270760022 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.524592036 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.26401018 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211271898 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.52222351 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.532736833 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517868601 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.732064062 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726517436 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.51544934 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537292756 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.524280022 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537905512 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.414990319 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.319694638 seconds)
  done (took 1697.472463921 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.519439109 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.571969769 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.582768447 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.558012862 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.587172591 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.572790694 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.629964076 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.613482665 seconds)
  done (took 54.058745645 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.527240968 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.680170827 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.551356175 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.51977572 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.535282611 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.523925495 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.082975523 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.525781981 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.527025098 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.527265811 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.524922306 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.518860244 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.30575731 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.535006361 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.531032383 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.513687569 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.52525317 seconds)
  done (took 68.888104389 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.534405109 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.899319255 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.573569498 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.516864981 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.66885343 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.550790469 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.663855841 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.530283303 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.532549767 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.806594671 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.182005522 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.549871173 seconds)
  done (took 84.43503317 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.524443413 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.524937865 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.525760141 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.526029096 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.527279526 seconds)
  done (took 9.054390922 seconds)
done (took 2149.760016369 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.761368093 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.418920297 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.293459466 seconds)
  done (took 6.137631419 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.665153629 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.716546114 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.86927905 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.852424391 seconds)
  done (took 8.529937012 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.803616259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.902081809 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.715817402 seconds)
  done (took 6.8479053 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.264045754 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.555803875 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.657314627 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.515939827 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.526461051 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.527346438 seconds)
  done (took 20.996453549 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.522443144 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.525865054 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.522698927 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.524465896 seconds)
  done (took 7.523244272 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.499210193 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.245533309 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.508343642 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.522883203 seconds)
  done (took 19.202373489 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.26976715 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.282721682 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.266089753 seconds)
  done (took 8.24597865 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.535705906 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.369670688 seconds)
  done (took 10.331909917 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.832473011 seconds)
  done (took 3.25838287 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.655570308 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.85423463 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.804625079 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.741553159 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.83096934 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.385478314 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.623390127 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.085024475 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.71544948 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.205294535 seconds)
  done (took 33.328242629 seconds)
done (took 139.067169708 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.013480983 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.543569245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.727277467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.028259383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.748498807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.726601603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.843965626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.993404507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.496500172 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.486207469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.990098623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.7484958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.7956295 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.542039419 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.796721508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.922133463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.748192952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.068278116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.521205086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.522787225 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.846249548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.628068835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.818140517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.652718307 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.748831684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.68007857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.208918883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.924020006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.538530814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.233228228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.680249235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.536261788 seconds)
  done (took 206.188015875 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.525387268 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.520880897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.544140109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.543426764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.522084686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.543503099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.545176575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.541455858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.522588522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.528648659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.522350655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.527146203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.522650252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.522863182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.523395057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.527961225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.537792319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.524003195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.524309801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.524217352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.544967902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.54409622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.521964859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.5463108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.539192348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.52296422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.544266305 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.543731835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.536055479 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.523683336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.525610553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.544942624 seconds)
  done (took 210.462744512 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.538511591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.523580774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.546871119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.544673144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.555109071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.525267697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.548698472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.531059007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.522984226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.523662047 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.529550933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.523887863 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.524421913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.524280482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.545425796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.53508331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.527373575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.531985812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.54272204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.523795961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.547191921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.538564276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.541443631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.523304671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.525968822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.532920854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.531700936 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.524239438 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.524917935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.540765468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.537898246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.529244311 seconds)
  done (took 210.501123359 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.722190441 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.532794079 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.532853588 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.470606309 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.534761212 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.532356842 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.526825548 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.733095747 seconds)
  done (took 16.018724423 seconds)
done (took 644.600054144 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.0582931 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.747493232 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.745847388 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.554369358 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.474504053 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.577261223 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.553776732 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.74883921 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.524463482 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.763579483 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.919147853 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.580319365 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.073967598 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.552744658 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.836120818 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.663578041 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.501265862 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.628778052 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.921170525 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.226254031 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.84657202 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.154551146 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.770887213 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.524470321 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.10385803 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.145313536 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.40096566 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.486164819 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.575347842 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.916961794 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.440272756 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.666202682 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.630503036 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.626527688 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.684538604 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.670652018 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.642367768 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.625331626 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.773595882 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.898167694 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.220027865 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.343754426 seconds)
  done (took 103.235203011 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.521589128 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.520824585 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.519829695 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.519529028 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.519541225 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.518704954 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.518814312 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.518459293 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.521667852 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.51929085 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.520285165 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.520917917 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.520502422 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.520684084 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.518446011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.518817762 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.521533859 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.523216516 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.519962073 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.52018684 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.521391749 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.520843686 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.522212818 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.520903778 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.520932399 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.521338704 seconds)
  done (took 40.970014216 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.539221638 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.822862544 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.027030026 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.553904334 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.538122228 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.543273273 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.637123589 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.549511824 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.541907846 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.54333027 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.724675928 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.542469195 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.578954965 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.038084666 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.542906961 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.540860288 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.540309066 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.540063992 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.830137646 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.559356426 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.658491476 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.543071336 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.634934897 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.550502606 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.566057666 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.541609617 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.547065177 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.076706758 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.56494035 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.726471219 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.551761042 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.644309375 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.046354801 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.047424549 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.559196251 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.551403887 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.541347194 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.733895971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.544057718 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.541599993 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.638842823 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.550241352 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.026760363 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.219614939 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.57417153 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.541597538 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.10586456 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.764505947 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.862443246 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.560159487 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.060524707 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.555015065 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.544498796 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.543252365 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.845494946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.550002777 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.540777881 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.129319962 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.581604565 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.638782037 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.55330869 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.543521032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.838767228 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.552850095 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.827264622 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.554323642 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.550142134 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.567339083 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.028741262 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.554540746 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.232553711 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.57456052 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.54375242 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.728749836 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.832731069 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.146283941 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.569313622 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.84694891 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.058074165 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.67070569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.55767669 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.072421038 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.674957196 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.55891839 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.54721066 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.546986391 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.543649794 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.58930311 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.641293948 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.1701213 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.256237227 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.150696287 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.666833147 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.567677739 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.54497262 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.120139737 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.568357941 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.545287411 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.023435034 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.239949711 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.578471905 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.552533701 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.244032732 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.58029012 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.641901305 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.560565453 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.0293038 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.556229055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.591807064 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.547263361 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.553271797 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.574222523 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.643130891 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.560360427 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.547784363 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.197474617 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.762593117 seconds)
  done (took 203.264819256 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.540035731 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.565116772 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.554498632 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.540468662 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.541163749 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.555522936 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.540999882 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.539913987 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.547212514 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.540699105 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.54138889 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.542937556 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.541715734 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.566366068 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.550132114 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.547612295 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.196656606 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.541448283 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.55266433 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.541790479 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.380195426 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.542060534 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.550814497 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.543871706 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.543173228 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.541011333 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.570426636 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.542758707 seconds)
  done (took 158.249599919 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.54933671 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.229818221 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.570705991 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.714511406 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.584278963 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.547489089 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.712103988 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.627272625 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.572049393 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.546063785 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.546363819 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.93281681 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.558603257 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.209912755 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.801372749 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.738642286 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.171921402 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.572687711 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.547594804 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.548901617 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.717244314 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.564595419 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.913937324 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.230938137 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.572755816 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.230403675 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.535953191 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.549254818 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.547658997 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.23419492 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.569725032 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.915500655 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.647550004 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.629909124 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.258363064 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.19703102 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.196881261 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.731277743 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.551324597 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.548267306 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.5499072 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.534380069 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.235769187 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.57513422 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.552148705 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.228722452 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.576973018 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.55365546 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.559818137 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.550101338 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.623493042 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.645454464 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.942635785 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.242368091 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.672034926 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.582539746 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.710631035 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.953661777 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.553831979 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.177049801 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.53658408 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.29185619 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.584740228 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.534492167 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.552026938 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.556013398 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.743400707 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.720649778 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.17837226 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.574683179 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.176659841 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.762916256 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.559421269 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.551189945 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.554442971 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.282613013 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.208497663 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.764881109 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.731476732 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.805706976 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.54631455 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.552628602 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.537148647 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.649565491 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.561284248 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.283946223 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.20687192 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.576159297 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.555103465 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.553223411 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.555347786 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.775642631 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.322533895 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.682207559 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.175724597 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.971411658 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.95911167 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.564751052 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.626017367 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.573903132 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.951445126 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.565704009 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.624345385 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.025101759 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.950532802 seconds)
  done (took 187.115789269 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.849764196 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.898558186 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.657155048 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.71273023 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.257478212 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.163431104 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.986026223 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.718781932 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.683936725 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.854117177 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.957242456 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.651765779 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.765179067 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.662212681 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.390971391 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.670530648 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.685973924 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.719137398 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.691781081 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.668677078 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.30078225 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.883946329 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.764945589 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.633386235 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.659481921 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.435369607 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.17234458 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.124900488 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.768015661 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.027449519 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.149028936 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.785276799 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.69657271 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.385342559 seconds)
  done (took 74.889960164 seconds)
done (took 769.160751957 seconds)
SAVING RESULT...
DONE!
