cset: moving following pidspec: 29276
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.326530263 seconds)
loading group "string"... done (took 0.566882183 seconds)
loading group "linalg"... done (took 7.240927341 seconds)
loading group "parallel"... done (took 0.166789502 seconds)
loading group "find"... done (took 1.125609681 seconds)
loading group "tuple"... done (took 1.772823192 seconds)
loading group "dates"... done (took 1.216545198 seconds)
loading group "micro"... done (took 0.225580062 seconds)
loading group "io"... done (took 1.037138102 seconds)
loading group "scalar"... done (took 39.916698411 seconds)
loading group "sparse"... done (took 13.091435825 seconds)
loading group "broadcast"... done (took 1.019948174 seconds)
loading group "union"... done (took 13.885930593 seconds)
loading group "simd"... done (took 4.718640128 seconds)
loading group "random"... done (took 9.471656164 seconds)
loading group "problem"... done (took 1.982091957 seconds)
loading group "array"... done (took 22.4510323 seconds)
loading group "misc"... done (took 2.054905745 seconds)
loading group "sort"... done (took 3.438303043 seconds)
loading group "collection"... done (took 19.501379593 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53792304 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144595066 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118060829 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137830813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191874271 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131683439 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126855218 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.102085973 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.004215007 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16194363 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123343704 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51213108 seconds)
done (took 5.141959938 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201589978 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086607169 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096543848 seconds)
  done (took 0.963324439 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065640703 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12751578 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.0652371 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.084284704 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066406493 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082169962 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066773812 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066571384 seconds)
  done (took 1.344543142 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074380353 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068861431 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086205649 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067707042 seconds)
  done (took 1.083498913 seconds)
done (took 4.447375535 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.67626152 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.266345246 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191557875 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456085448 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153879661 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192830955 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664741661 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334676732 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.239929436 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092623151 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104136764 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396204225 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106698815 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670913988 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.068915437 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109660661 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163495448 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44059047 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08516629 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082862861 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104724241 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128644405 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10410598 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094093055 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158441669 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083297034 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153687771 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081804101 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084327782 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245322457 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189668192 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676538661 seconds)
  done (took 10.425856335 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097987092 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121801681 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069648264 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142063113 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102997542 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088598245 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071826039 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084553324 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093084253 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163308797 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117439084 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110216923 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08327262 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070829757 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102561894 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215795074 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111266231 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085881326 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088268631 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076799677 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125637036 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083959752 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096072588 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080537485 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153999804 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196548242 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09787919 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113792758 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069301439 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100258139 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131862618 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128969943 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06568308 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085567923 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.15971955 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095955764 seconds)
  done (took 4.679586053 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.087724412 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177879374 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090940793 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156845138 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087835227 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11321067 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085461137 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101391359 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233039347 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.091497422 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.478081259 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131703596 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087478796 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0889605 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069948839 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086349864 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.555300886 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110616429 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139208017 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084122444 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092491768 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072437897 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370641737 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085972814 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067896811 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068412325 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075342221 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130397251 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087652009 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.174062756 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.111761816 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069059452 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124121491 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.188644198 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114398379 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103280529 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085705502 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066041467 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163043902 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.119095085 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073739017 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086733949 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091435736 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12297547 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104920444 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.087017898 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068492751 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183984812 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067405419 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103357749 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.912759313 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168690175 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097561868 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065980285 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293415531 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087300996 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087503447 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064761997 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267391208 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18244175 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086417063 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067572747 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065796119 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087826235 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366819776 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068116832 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.75454096 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071438865 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076870986 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08757434 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067673053 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110988222 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07406244 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092713817 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085961133 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066121053 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087729924 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067014103 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083250208 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070081913 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099314604 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203316823 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068461137 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067218274 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083615278 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086941777 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113767633 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07122398 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065812747 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118427567 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069769069 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085991911 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102445377 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087017737 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064578393 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099828217 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070749178 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131505842 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068099945 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.14120278 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068788631 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110770513 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070417012 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086258626 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101085651 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099784929 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068836637 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156561503 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065330939 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084569305 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06737784 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064812196 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087790065 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069393552 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09723439 seconds)
  done (took 21.248713142 seconds)
done (took 38.227845384 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313192122 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096443095 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096887895 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076771539 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096979091 seconds)
  done (took 1.536032567 seconds)
done (took 2.363494412 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.13478512 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.123082127 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064465504 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117738761 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064205303 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.123389838 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119600445 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085570853 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121374777 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065089173 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117550647 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064889445 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064015683 seconds)
  done (took 2.121017702 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082727448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085205753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088566426 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082560136 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063529502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100553964 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079957053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105873205 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080702897 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071506216 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083383318 seconds)
  done (took 1.74817443 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081481318 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083883468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088093224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081589093 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063511266 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098892049 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07995343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104720215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080671413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0723462 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083214884 seconds)
  done (took 1.745323598 seconds)
done (took 6.43239155 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078187798 seconds)
  done (took 0.897944379 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.757771234 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.851590645 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.100251192 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135844863 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.215394888 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.177673628 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.460830394 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.092966767 seconds)
  done (took 10.799755086 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10106517 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103447824 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072289563 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089949732 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072946459 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068907658 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093112974 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070521149 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090396088 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072929457 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070618099 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089224867 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068918559 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091290641 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070365795 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088112467 seconds)
  done (took 2.19566227 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105503486 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106512555 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093931004 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077324201 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093361629 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074148637 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094965835 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076358186 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088702659 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075016852 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076350064 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.095294322 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090354788 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067842508 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075430503 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095739619 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071806365 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095167113 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076689252 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095835012 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076313331 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084623479 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073873644 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.094078658 seconds)
  done (took 2.985155976 seconds)
done (took 17.704252148 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146715009 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078920727 seconds)
  done (took 1.05026745 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082358543 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10065842 seconds)
  done (took 1.015371967 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085153511 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08429316 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091151043 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097744031 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067192677 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085235055 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106782355 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067631785 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066899256 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085863872 seconds)
  done (took 1.670204692 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070692802 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096822115 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072662896 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099388106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076149984 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083524415 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076332097 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068012729 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099798646 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06375478 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09087611 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102232399 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073244743 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104390598 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075025564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088770512 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072409329 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087569839 seconds)
  done (took 2.331959151 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067847595 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068222198 seconds)
  done (took 0.96637485 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068839393 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06421383 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086486883 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067188694 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08261798 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064324598 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08193564 seconds)
  done (took 1.348250457 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.421286739 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110322881 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.249788758 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091215303 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.108199579 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.282187383 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.086934508 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072165013 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093568513 seconds)
  done (took 2.386402597 seconds)
done (took 11.596915152 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080650552 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084886337 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114839606 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.427848481 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094327389 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.085224239 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.134784285 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.234900207 seconds)
done (took 2.094734271 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127840947 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.538461335 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428188056 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218623262 seconds)
  done (took 2.026917891 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.396639818 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090833673 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076668349 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068056162 seconds)
  done (took 1.472212612 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067883734 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070799313 seconds)
  done (took 0.980825061 seconds)
done (took 5.447657358 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067965631 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067279648 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.11721603 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064754112 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086602264 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064989681 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064684011 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087874376 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067394229 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066422797 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.087068827 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067416228 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064576792 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083396655 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067179768 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064288309 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082714069 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065274451 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064707363 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086528876 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066795843 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064113525 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083402455 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067319425 seconds)
  done (took 2.646057717 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087783624 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086077565 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074178133 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072008776 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091836038 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072152071 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091499072 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067597971 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09084851 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069348841 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089470742 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072214191 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069231984 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091184979 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070177253 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.091041383 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073179081 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086993802 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070393932 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089665149 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07389783 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067204985 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090220759 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072474711 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090396146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071810758 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088065882 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068386067 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090662507 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071935388 seconds)
  done (took 3.237377341 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072962671 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064598808 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083828705 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072388091 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064323189 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085371152 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064659248 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064601937 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.084907828 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06488949 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066553285 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084474206 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064717546 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084202602 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066827715 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067819208 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101343204 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065200065 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064915143 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085292975 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067837743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064426901 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084564402 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064481761 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083078078 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065882677 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065499591 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082587345 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066720591 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064637751 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086936669 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068965284 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064308958 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091450005 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069040642 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065021798 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087914033 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064504776 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064798937 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082968888 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064666938 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063945632 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083883358 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071412631 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083093688 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067332036 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065095202 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084609429 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065927399 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067423396 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083531213 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065662631 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065639683 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085298978 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069423066 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082449898 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066594561 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064351837 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084413506 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06509228 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064275605 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082861466 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067987803 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065455457 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099081027 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071629217 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063706979 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085821301 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065784612 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085759972 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067362147 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079266917 seconds)
  done (took 6.123533677 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122892965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094557842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086530757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067129352 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062695275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085085337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069284045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083887197 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067006777 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089140639 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066123326 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066357627 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085842421 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080985331 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065321399 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086622457 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07113276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081850577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065863349 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068439555 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084975884 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068546526 seconds)
  done (took 2.573165136 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.194245303 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090702698 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109879104 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094926683 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069225088 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094497134 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070741137 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090917398 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071315204 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088304535 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06967864 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089713049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070574874 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087385198 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0713126 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069599883 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090754245 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069910841 seconds)
  done (took 2.448953316 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080289206 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067108819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.220298146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066409032 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087100506 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069995115 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092950183 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076026964 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088810753 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068221714 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095545786 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071305406 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069213643 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086447397 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070341757 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086377863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071545837 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067113784 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095327048 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0725585 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092207381 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076231794 seconds)
  done (took 2.727325859 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083679721 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069211736 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1073322 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069407042 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083028322 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065538365 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092856947 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06773 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092245199 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070666377 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067786211 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085140608 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073238482 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085956863 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073352462 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067420232 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088956332 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067644546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088258898 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064679708 seconds)
  done (took 2.422169087 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089278104 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087702443 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070160837 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096500658 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070519496 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069220603 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097618934 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068805868 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089506183 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112408887 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069997493 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068517129 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097158776 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092333562 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070552794 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095880225 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078844699 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096295002 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06986072 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087918838 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095736627 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08789455 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078082797 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087410291 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069380722 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068371981 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088342612 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073706099 seconds)
  done (took 3.187399136 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068088311 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067671364 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083671982 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065514783 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06495509 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083874352 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066045414 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064755728 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086685642 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065688837 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06690074 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086242623 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067805523 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066779872 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086918084 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067984171 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066871654 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.085002256 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065504583 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064631875 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086855006 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067937601 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066709129 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084573382 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066171934 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0670244 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084725544 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065762337 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067494739 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08461319 seconds)
  done (took 3.045174359 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077238071 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073502931 seconds)
  done (took 1.01246243 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066296516 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081715094 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085242546 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071246569 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091410547 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069208014 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094191888 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072679837 seconds)
  done (took 1.495394057 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083824046 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077425794 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088525164 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082645485 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097353488 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083750721 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161728207 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087781747 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075374795 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065580194 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.101170835 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068068073 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092609739 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069171811 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073093589 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094295294 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066384522 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091685045 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072062907 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066913993 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08908953 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076891588 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089325944 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066118872 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06844564 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.099985702 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080200122 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.088995937 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071773994 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094858524 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074458249 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062170359 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.087453833 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069012081 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065787839 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096961867 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083705726 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091211947 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077103328 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088752904 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078236231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082903328 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07332112 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074040199 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098462453 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068407777 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088198904 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064115757 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065591006 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090347223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063612669 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086637902 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063961077 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075278915 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091288203 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078982076 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085621157 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070129354 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070606085 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091936008 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075358779 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089291687 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071956042 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068148589 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098082396 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07298433 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097124968 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063898699 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061998173 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085941821 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078826761 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110406446 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074866243 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088522333 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070405098 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06607678 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091078949 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06921881 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092673431 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074880035 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06764015 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095168279 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075167127 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088182626 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071376874 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095758312 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067334836 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069976024 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086313536 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085381475 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086920674 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06719297 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064961605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099512369 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071647458 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087497605 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066539959 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074914631 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.082221285 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069349637 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087725457 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069289442 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078927581 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094331128 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072726653 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09776301 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075225411 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088400595 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072059096 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064028822 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089516412 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066694632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095273633 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06339915 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070989155 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088713573 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069133248 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0970804 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0670567 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067417946 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096389029 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073430927 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085850477 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065749375 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070405041 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088527534 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07164335 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095966452 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068301004 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063281588 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083456695 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071350173 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087393484 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072127116 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072305001 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091466413 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062524939 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085773316 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07357099 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096397894 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069109799 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068588271 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094157917 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070057331 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067169189 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095044112 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070752341 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087260804 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074239843 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068104699 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084140761 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071615377 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090457162 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067413437 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071355175 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092290428 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070555948 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088228946 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067561416 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092619728 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070774146 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067175749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087544143 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06756594 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078230672 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090607866 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063470146 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085043524 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076137612 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065261772 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088143934 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066986679 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090203828 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069380571 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066324243 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087699785 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07045335 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099975331 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073357281 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088344252 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074906897 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079096231 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088273041 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071124934 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086847793 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070485976 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068863169 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097814943 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074397057 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093544206 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071264828 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064614456 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093911873 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075648787 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087078941 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067420483 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066700328 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09289872 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073708286 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09170593 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069405247 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065703459 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089193431 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07161733 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091092861 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06844574 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066680548 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093368809 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067718949 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095201868 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069575794 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099453188 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071724123 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063141528 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092000266 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066419139 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094199659 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06454633 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066259285 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087434601 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069843925 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086094508 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072482857 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062957013 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09535557 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077224126 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068332024 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088505264 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067689052 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095113413 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07041023 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071985297 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091845567 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074698586 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099604273 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0676931 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071018782 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099504533 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067815099 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08245924 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073679527 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086321138 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069034932 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067219985 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086304355 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0729408 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097039406 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076660042 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061863584 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091270654 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067664689 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067249699 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08558777 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073471805 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091089499 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069744387 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074283325 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089901331 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068739492 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091946807 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069388149 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069348172 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090041861 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071313461 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089731438 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071936946 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067121445 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09258077 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067728436 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085989901 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071389235 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068329736 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088915819 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074261698 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086945134 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069745139 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070593867 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08916223 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069824051 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068829476 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088129613 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071742064 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088614347 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06892972 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070199791 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084375577 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076425678 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087432394 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077171199 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068437381 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085500986 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074952603 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090125304 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07434229 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069065235 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090099282 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069840644 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087691219 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072315298 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074766876 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086768704 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079256755 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097078934 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069343686 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070469141 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08975455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070253095 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087796928 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069977783 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069594369 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088535168 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068887324 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092667526 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072868371 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067983696 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090574149 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069592384 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06812746 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093058328 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063643248 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087361193 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068867393 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068153881 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100000933 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069749684 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08804396 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068466299 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069054604 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088158958 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06560572 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096096624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078246983 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088861701 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076753189 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067501815 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090815741 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07888046 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083324008 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067403913 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06624328 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086872498 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076665385 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089038321 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078734561 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068244184 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088596058 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066243028 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069332345 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08810528 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063325417 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085292961 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073179071 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06732309 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088673947 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070062505 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071329077 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090710556 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078409505 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088895441 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070202085 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088677484 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067248073 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067553948 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087756139 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072454588 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069044286 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087098697 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06714047 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067567 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090848547 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06977909 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088029014 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070684866 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075226368 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088648642 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071664862 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09184924 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064064137 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070227316 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089537951 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068177448 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087344708 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07361222 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071862151 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090240034 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077662302 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088760492 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070196352 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068780067 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087898731 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068609124 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08783391 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070020881 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068742938 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090164086 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077459578 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066497674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093032684 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067977379 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08968504 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076374729 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088428361 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073315965 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075947281 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089613038 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070484556 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096765199 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073102643 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071502402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09050384 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070122712 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095370484 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068627292 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074070099 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090282474 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06950838 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090671773 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06732248 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067917759 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089682701 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068603704 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094186534 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070619697 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06780252 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088181468 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067976535 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068855043 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093660011 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07536074 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09182701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072576491 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063349661 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.086311317 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070571805 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086100156 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071377893 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07156468 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095369819 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071360016 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088618931 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069418672 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077505399 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095193505 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07229165 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086919447 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073380651 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06896344 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092174848 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070272943 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087416561 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071398539 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072694621 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091294442 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06886088 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095098836 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072834171 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069549594 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090892025 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070218157 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068126595 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085145414 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069768721 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090737635 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075201048 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070467283 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090611066 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07987709 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086573555 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069854626 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071898665 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089740057 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073734053 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084502083 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071797222 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0698611 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091142269 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064550434 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088394061 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068263833 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071599288 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088799157 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065264953 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07908583 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.099485004 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071811414 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0890165 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067737099 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064471662 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085657319 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068466223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090617799 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071397731 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078439749 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089673263 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067986531 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084428077 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069718945 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071824255 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0929102 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067471626 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063656728 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088955049 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071627262 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094798407 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068162193 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068030821 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093532851 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071215158 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086234298 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073621049 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065437228 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093776125 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082750821 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.090816534 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069991459 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094816252 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078197038 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068697591 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08537961 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070515227 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091478135 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070403608 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069840932 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091456563 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085318305 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092835576 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068217231 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066802334 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092550213 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06864452 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097294908 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071271216 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069176022 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094656157 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071350512 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098389989 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072125399 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097584281 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07312919 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071488383 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089433435 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070023637 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086911339 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068683671 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069504799 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091087374 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073848154 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098244972 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069003561 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099857269 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079051905 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070061385 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087687134 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069187998 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067854748 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.085596035 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070546879 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087636297 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068398481 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068012286 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088632072 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071220091 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073888045 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090573403 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06960112 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088813868 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065330777 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070843638 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09251151 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070057932 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065662892 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090341268 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070174441 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094007022 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073509047 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065897062 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091939012 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070586997 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090236068 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065249292 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075693684 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088660764 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071691696 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067521782 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090724709 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069802476 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092583548 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075138901 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090293804 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073061767 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077514677 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093132619 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066620115 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065545384 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09575859 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067391732 seconds)
  done (took 47.834402067 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110410197 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087048295 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064567544 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084259118 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079049364 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08639064 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065113475 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064863825 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087250838 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068284232 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063606832 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08563803 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073607279 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11082512 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098107577 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069294819 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085105834 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065754794 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064084575 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086531625 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073206649 seconds)
  done (took 2.580082967 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089450492 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105877249 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079787624 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105034103 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072961517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101151204 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09996713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080404267 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103832069 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075540164 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103712689 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100101403 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076729215 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095762594 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07718199 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09807997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085807538 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095249665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079647254 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100701314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076854288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100877617 seconds)
  done (took 2.910455363 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069942 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068655424 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090601672 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065192917 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068072949 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.085551192 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07229225 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06572671 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093448192 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075416908 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087963505 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068016224 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0698344 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.085097721 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069462077 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065578439 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135520752 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.093736651 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068339489 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090577793 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064871251 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070076939 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.08562235 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065652392 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066510814 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09404298 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069803696 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087622368 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069949288 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067713413 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089365782 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067206539 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069520591 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090409641 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067673661 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066226288 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089447759 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068757185 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.08502812 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067582533 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068499162 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.086107692 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069462978 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06963668 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.088180062 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067850843 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069893264 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.090129569 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063609124 seconds)
  done (took 4.671659699 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089349589 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.146380875 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092724654 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10514968 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106775566 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.098484427 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073746384 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127611477 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066159195 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089438542 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08557106 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106242636 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068270096 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.096374368 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074686335 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090255854 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069569165 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089084957 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07264034 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089013318 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073025308 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095580326 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084263259 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.103843157 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072123488 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089160526 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068741164 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093946176 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082239795 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095252552 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073184812 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096724077 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084081119 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.096037564 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067714591 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092622246 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104870808 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070091181 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070541495 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088313926 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071057418 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093669934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075794128 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107241534 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068808398 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094725688 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06930999 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086278987 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083215775 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091754756 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076780691 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105740391 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071809565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.09005355 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073207697 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106443515 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069120485 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088808857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071953333 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.103130685 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066216235 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093256011 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083948602 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091828693 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076554867 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105761532 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073861195 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094459479 seconds)
  done (took 6.955181459 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079129318 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095672246 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084500038 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105771459 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075262732 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.098728976 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095068472 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076314543 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095802645 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081473205 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097509236 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119760208 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071786835 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098318661 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076593043 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096153025 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076941138 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096121779 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07664715 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097146331 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075234799 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105546468 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075078512 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105045112 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126048727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070479317 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097170308 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075426656 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105852265 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094801052 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088393278 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096941275 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075088235 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105752187 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.108207559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076030819 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088345846 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077143132 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096043247 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076436968 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091030573 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08518629 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096436859 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070955804 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096965176 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074988733 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105504759 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.10820826 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078646529 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102519553 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074941041 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106214935 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09497927 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076377974 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1050468 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130985105 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08526553 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10518018 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075573366 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105293792 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105432901 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111991307 seconds)
  done (took 6.61457116 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091519126 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100362338 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079668242 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.086975429 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067660542 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095962077 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067442841 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066233801 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099673334 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097691685 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081255792 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093462177 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076482079 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101766121 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072650598 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097584411 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071664053 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094491972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09760902 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073975117 seconds)
  done (took 2.629033069 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078942457 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108224807 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070300849 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074837996 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094880201 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07494228 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093145494 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071641991 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090909345 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073174639 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099709967 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080192844 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089962265 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077540692 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100690536 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076245151 seconds)
  done (took 2.275018425 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081209342 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.101504076 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083529416 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090962242 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068141662 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064469649 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092450413 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064994622 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087099463 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084417157 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.09077741 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072593348 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067930933 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090385796 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066331509 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093085841 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066146812 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066370404 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.090776746 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082837258 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.102023311 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067636585 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090479809 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07121521 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06848953 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.097033342 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069471779 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08945627 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067107526 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.09089657 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070713248 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097875259 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067472436 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067628135 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089733335 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067592681 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089594341 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070661401 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07160045 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091289801 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06773137 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089469264 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069655241 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069862497 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088239734 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069806926 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.086446679 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075728754 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066132922 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091328302 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068806345 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09313267 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07086704 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100239426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073504731 seconds)
  done (took 5.307104823 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084495438 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072043128 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087310046 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06761381 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092918674 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072105734 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072266957 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093482283 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071165644 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087341856 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072249946 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071312931 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092911176 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072757735 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092006809 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07310843 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064315006 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.092546177 seconds)
  done (took 2.353885668 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075980014 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068925493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098385981 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069519989 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089861472 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072607738 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065253308 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089618163 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067884282 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068825473 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091218455 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071610567 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088259601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072573412 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068521463 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09054928 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071012316 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067055711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091520299 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064704077 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092707013 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070990499 seconds)
  done (took 2.626107399 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.097329703 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.082242129 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097202469 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.186333271 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.082764336 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.114049966 seconds)
  done (took 1.584009114 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093938951 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10408485 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070105971 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089461511 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099673008 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070555084 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093706995 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070442849 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102708488 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106563269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071237591 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102846574 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079686111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102325851 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098037134 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078484807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092510749 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071727606 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069544952 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111245292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093423421 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080613033 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093303325 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071560917 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092573854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080306921 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103548836 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106309934 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071245107 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101828286 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077223806 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092990775 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080564517 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106728106 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072339727 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1026946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091805661 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090663396 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099288821 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07924513 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09495422 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076995579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101789913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097697194 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081373479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092669407 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076503256 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092520053 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071828454 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119186317 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099406853 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080152353 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10050407 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080427112 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102304603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11756128 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106238656 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081255247 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098606373 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084030952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102555174 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098370342 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07987858 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107246654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077562807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102822907 seconds)
  done (took 6.919834581 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086238539 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111023649 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071475367 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107154297 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078709508 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094967851 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070715281 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0936761 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07071111 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093043306 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13470483 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07202861 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101689123 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079482401 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093678756 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07060464 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09324731 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09984945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072697561 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119693626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071569186 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102261511 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101191776 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081104884 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107745823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077474522 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09417793 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070757823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094876316 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071237033 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09895332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070564586 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102635139 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06973188 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103178161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092769685 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07275206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09861796 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072129012 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099408667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081229604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113067934 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092890194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073419275 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107545198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072188563 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093748198 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071786406 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093382054 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072679061 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107616938 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085764484 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107433984 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101489051 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071887591 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093543619 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072931727 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093482866 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072623814 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099604859 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080748567 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094019074 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119859199 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07264085 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093820864 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080813644 seconds)
  done (took 6.822923103 seconds)
done (took 133.845229321 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205759781 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190297722 seconds)
  done (took 1.323496468 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07280949 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098243227 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103152395 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131131152 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092933406 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103642242 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101660886 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.104906079 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069817481 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091779406 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071820379 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071032447 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.156575163 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070375936 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069722844 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094694453 seconds)
  done (took 2.438301993 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098767748 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.216939498 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.08317914 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.091760206 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073194986 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.094695663 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068748833 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07417236 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097059649 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069028497 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071798318 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092943392 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068335647 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091074527 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074741219 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07212495 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.090345965 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072875956 seconds)
  done (took 2.535702698 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097609991 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.115965356 seconds)
  done (took 1.151514963 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.209165442 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.130974158 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.21763204 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.445702124 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.260790817 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.288653221 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.185454347 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.185882149 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161941044 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.180403201 seconds)
  done (took 3.201177041 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10288401 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165721786 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274779779 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140722424 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112462884 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088952844 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141503307 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113459304 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086351972 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106223517 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083933164 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102647315 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099925207 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101505228 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078202401 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102512278 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102360033 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.099118058 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07765821 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101051452 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099655231 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091595915 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078226294 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099221564 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082540997 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.103649788 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069605186 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06895836 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.101285948 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077521816 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099076993 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.086609515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103694986 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13564345 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107492667 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137284096 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08125774 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096561905 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07922542 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095581234 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.0821041 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102216434 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08791991 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102669307 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07022803 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080799045 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09237752 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070320697 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099235828 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081971693 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09868475 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077260265 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136335616 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103167155 seconds)
  done (took 6.396485661 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.767125382 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11258002 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10043966 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.832064031 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119745005 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087332029 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.726412401 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120708026 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212249057 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.728157204 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117053302 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080515737 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210437549 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218968369 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93382792 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.26952694 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.616610992 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10789329 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110580177 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136600111 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102818244 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096915321 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115565127 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41037251 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076827727 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09768561 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.079771946 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103370481 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143097571 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086427006 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098958594 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159216097 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.229875921 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185952088 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078144884 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072605212 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096817549 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152097331 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246887895 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.174219317 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163354482 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070534771 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096005597 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084048538 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116551425 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070514338 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144710028 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155568498 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173612447 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077848209 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07986708 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10549353 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104883117 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148729659 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082957543 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302815991 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288639792 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074646552 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082094402 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113965361 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242604519 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085212649 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206460406 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100628703 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195311384 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072627424 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758823928 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151982231 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073055502 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102257483 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081149015 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101260231 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.082284062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150765104 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374504005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106072564 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.078516895 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072703299 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223784345 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086101871 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095662582 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144721372 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077872994 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104192615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086536086 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106475673 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151215864 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.214429852 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106536471 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.08302356 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097912359 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.087945932 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09803756 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194070538 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176371074 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143932891 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191679084 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105812616 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145328037 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150001531 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102917447 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154301882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.080716262 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108209454 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082417667 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196751081 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128167323 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083771297 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101228726 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.078740419 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130589254 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111824731 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080561462 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.151533732 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458175494 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150209323 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07058259 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111291931 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081470018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.142788304 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101973147 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215897729 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107756194 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151034537 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080983964 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.094464454 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.081742682 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144098133 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106474872 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104377511 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084681301 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102066558 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217693855 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.176182953 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105073224 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201686866 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166902285 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077772706 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175583802 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082234006 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149599213 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104220751 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.083200647 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100590474 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75240078 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107704336 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082194858 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10048677 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168886951 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074652017 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083766837 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107985572 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070339032 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754998025 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087355242 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106241378 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107062872 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079573149 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104207681 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.080455343 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09867399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144097146 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186487917 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104079769 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080227432 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108642337 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143820176 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077027108 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10935194 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107673232 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087724018 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105120908 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077388942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10737768 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152143833 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145266534 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.17438583 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572920866 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073472829 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109716738 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207418103 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075484473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26738214 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082858227 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206783861 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145094805 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082585294 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287465017 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147039925 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170609597 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086821962 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177573898 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071840157 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.078587741 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168343184 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075038807 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078538044 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165591619 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.08705775 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106994928 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.918777609 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096372174 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206368185 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071427401 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153186472 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100406122 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081870734 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274641122 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073935773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112533723 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.148408787 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076567614 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109325557 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.695896931 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108910121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.083931301 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103133386 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201405152 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.146235601 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.08222378 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103796233 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081311126 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.143367394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189810285 seconds)
  done (took 39.199361535 seconds)
done (took 57.181505892 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.238559412 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.200751303 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.231692391 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154727049 seconds)
  done (took 1.881083197 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.133733744 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.134101611 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128744851 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068065469 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.135481665 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067976446 seconds)
  done (took 1.630393114 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324144236 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282833677 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206396358 seconds)
  done (took 1.77524757 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274045167 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.228919903 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456994282 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281566477 seconds)
  done (took 2.328020778 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.191250938 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116020769 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07098621 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111212983 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158141214 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.22731283 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125705076 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159630711 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106545852 seconds)
  done (took 2.274088748 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157206709 seconds)
done (took 11.005492537 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.138795143 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.164050333 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.245306183 seconds)
    (4/309) benchmarking ("sort", Float64, false)...
    done (took 0.19054472 seconds)
    (5/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081754948 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.215716141 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.129852887 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110823414 seconds)
    (9/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095945337 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.134725302 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082011905 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103671987 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.252893542 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200317835 seconds)
    (15/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.166544466 seconds)
    (16/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080669299 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133023837 seconds)
    (18/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109774057 seconds)
    (19/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.222902685 seconds)
    (20/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073665779 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204142402 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100173157 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.200319095 seconds)
    (24/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055050891 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122674237 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069370887 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.102422518 seconds)
    (28/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076569279 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.106883825 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087164172 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080935967 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.176880691 seconds)
    (33/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099126525 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.210203644 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.110779774 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.216764958 seconds)
    (37/309) benchmarking ("sort", BigInt, false)...
    done (took 0.206855398 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187668343 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080045653 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100120419 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085728917 seconds)
    (42/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116542237 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076720954 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.19679025 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.219418342 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.080052434 seconds)
    (47/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072842195 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095851526 seconds)
    (49/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070757845 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.1224657 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150238267 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148795829 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108921224 seconds)
    (54/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.164263036 seconds)
    (55/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.189337452 seconds)
    (56/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.222801954 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.147932868 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095900942 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07780021 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200786013 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072892506 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105994678 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090138355 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099554122 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075128494 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.197718291 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.174753331 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056044687 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054847704 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 0.0970997 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069342355 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055790571 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.197188699 seconds)
    (74/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11822342 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.14157673 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.096708397 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071591369 seconds)
    (78/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.183781513 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07804922 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.164099852 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06996607 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19087295 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09228667 seconds)
    (84/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079176585 seconds)
    (85/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.116414403 seconds)
    (86/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.105413219 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094375097 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148493732 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169550844 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079127109 seconds)
    (91/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.114954642 seconds)
    (92/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054431968 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.143050363 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076707707 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.105899661 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056487486 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06718145 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11958544 seconds)
    (99/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.212391914 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081343615 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.119408045 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096584605 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121159286 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.081146017 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069507686 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139080887 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068910873 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.173131281 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073391508 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114807004 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101431829 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.175178863 seconds)
    (113/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055671564 seconds)
    (114/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176426894 seconds)
    (115/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.101396987 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080308739 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094366582 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.200200684 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092282636 seconds)
    (120/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174026718 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.164266659 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078444888 seconds)
    (123/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075162692 seconds)
    (124/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.1386895 seconds)
    (125/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079281651 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.103212979 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070327188 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.395825928 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208319141 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057136603 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10318287 seconds)
    (132/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08055187 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081833751 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07482065 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102332224 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079870868 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077266609 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.099691689 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069784568 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.13848358 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102361186 seconds)
    (142/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054726949 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.186954919 seconds)
    (144/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064882388 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08124797 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.155054448 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.103457199 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072051879 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143195939 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079862292 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068330317 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101869354 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069533137 seconds)
    (154/309) benchmarking ("sort", Float32, false)...
    done (took 0.15655852 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127024681 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124325912 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077920714 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102036948 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081107219 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076797216 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.208248397 seconds)
    (162/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055378513 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.121084286 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078837722 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.105545548 seconds)
    (166/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.136445555 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10084258 seconds)
    (168/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080319346 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070036743 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09731873 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091626127 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079236926 seconds)
    (173/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.139213749 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.094984741 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070210545 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111856421 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09666872 seconds)
    (178/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.111912746 seconds)
    (179/309) benchmarking ("sort", Int8, false)...
    done (took 0.17185364 seconds)
    (180/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054832297 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.127069775 seconds)
    (182/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074549868 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.119954337 seconds)
    (184/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.101556182 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080650706 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072309408 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076078474 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095294144 seconds)
    (189/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07568074 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054928666 seconds)
    (191/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100693746 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172984235 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.1023639 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094042674 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.105278676 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069803081 seconds)
    (197/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054446183 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090858138 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099481597 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.094876333 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055794409 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068337591 seconds)
    (203/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128201048 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057210073 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068173046 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.079448164 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176635133 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.177182199 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056975829 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.194647452 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097745888 seconds)
    (212/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081104572 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.141376422 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.103563207 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077597314 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069365564 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094408575 seconds)
    (218/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056459595 seconds)
    (219/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054302727 seconds)
    (220/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.105329204 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072658383 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168364014 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055105376 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.205548979 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076099367 seconds)
    (226/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054465993 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094649502 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.143650339 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070506384 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075325974 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092266473 seconds)
    (232/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056854982 seconds)
    (233/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054808416 seconds)
    (234/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.127708534 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145036994 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141561202 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054794737 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095546619 seconds)
    (239/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070580504 seconds)
    (240/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064134245 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095194339 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077937921 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056361174 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057154411 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200643024 seconds)
    (246/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119527588 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056389954 seconds)
    (248/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056380979 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099972638 seconds)
    (250/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055857631 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05511554 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070482424 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080767744 seconds)
    (254/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066034034 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09301139 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10821809 seconds)
    (257/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071578602 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055947409 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.148780857 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068741964 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101733198 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069304209 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056343439 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10132414 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.100112613 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08147115 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05813236 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055695095 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077457852 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079981852 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055952746 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069450103 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080040329 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086591648 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144076534 seconds)
    (276/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065831502 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094566356 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160918606 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055741438 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080032825 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078390608 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072419596 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.166067988 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06943492 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093648383 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171467998 seconds)
    (287/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.081393346 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069035674 seconds)
    (289/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076141549 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08083332 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078769495 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069494467 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081155365 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140536294 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089328381 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056970107 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075143306 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101398977 seconds)
    (299/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065045378 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070671066 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063943177 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159421312 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06866408 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.100839438 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09103227 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.118592353 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057224077 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06926482 seconds)
    (309/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.095127346 seconds)
  done (took 34.47444912 seconds)
done (took 35.437628804 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083787325 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093128143 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103830415 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093598845 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.108390531 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079338433 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.1021017 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081559846 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105632986 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085580618 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08012584 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.084100162 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080187513 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.102974042 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080601063 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093293954 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108333118 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076094637 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.102700228 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069958878 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076732274 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.094758122 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071643273 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057981053 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106672765 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077113002 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099378671 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080137438 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069706461 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095065508 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073577428 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076675654 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094770006 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083967945 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075509722 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.104252375 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079891502 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104656282 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071931145 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069183067 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.102894871 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069962327 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075795063 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.1037089 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075682035 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099067157 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079267756 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08114424 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120356637 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07164006 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.104330443 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080650639 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078025506 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.10249281 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073578009 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102726194 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075937172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094087002 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.10479583 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07264839 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102426118 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079249161 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075072119 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.103431813 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078223046 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10448165 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081723395 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075269866 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107240504 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075581867 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069450542 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105520744 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073420877 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.096269525 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080834152 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080058274 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.094043154 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076815304 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077144652 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.10013792 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069745504 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072215641 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.097746821 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076161384 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071285753 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084587589 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074124864 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075118695 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094597719 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078451865 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.100339656 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07815113 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071661042 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106115947 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070522726 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074749994 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095594464 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070890458 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070800414 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.099101462 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069857916 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071750074 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.104418599 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071739469 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09885806 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084073384 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069720077 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.10123875 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070481968 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.071777016 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108824448 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079785993 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094510472 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074021924 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069069856 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.101477442 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070866589 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069419396 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094565017 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070538466 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075225732 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.09486402 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073018059 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076982674 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109220691 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070733976 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073557527 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097851674 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069877919 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.1000186 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07136254 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070053545 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.096090226 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06743221 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071542204 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094861937 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078569004 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072132823 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.103359393 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07295207 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078285482 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.099992203 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076641605 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074536888 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.095307888 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062706803 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071449169 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097907571 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071807179 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069961284 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097118493 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070592023 seconds)
done (took 13.883945405 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07167607 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168447093 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.108934846 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.12638201 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115004804 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071571393 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079929977 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127786083 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071138471 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127537764 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09189373 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116665691 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.104776003 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.095933258 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070562066 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098200708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072681367 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084416811 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.130868825 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090607976 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147195717 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09488451 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.104199378 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119576652 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.078823887 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.122270723 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070823182 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073104114 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.100153029 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086021337 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116327885 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073823234 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070781506 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118880933 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087241 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.104032818 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070229124 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.101211787 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071546425 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07067552 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.123871413 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091827802 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.101480974 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076157172 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098368632 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074214162 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071557715 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.104382974 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081774756 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.098367621 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086124691 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138547604 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073692989 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105535598 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069534795 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.080136575 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105551324 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072319444 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.095910004 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074282247 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070078286 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09955108 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085532541 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125249028 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074583801 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104793784 seconds)
  done (took 7.303623152 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088756318 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096126838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.114720387 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087586167 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.096820786 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071284667 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095717254 seconds)
  done (took 1.674912704 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071931782 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092297518 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119734214 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093257245 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.115202404 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09235492 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106182058 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072060219 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088077035 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.098694381 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091240019 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135398334 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073270011 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103523165 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096070315 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070485336 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121433683 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071032866 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099012986 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095924319 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073712883 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.118373 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072642932 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.097586525 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086033619 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070664773 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146668836 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074661102 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098799889 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074908357 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094570088 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122034465 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.111174276 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081998693 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096362699 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087027136 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084796977 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09608662 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08731463 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.102096337 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085604884 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071433928 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098676692 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070222869 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075739173 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.108503506 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072322674 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.096493181 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075982919 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091476818 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097374741 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085332931 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070905447 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101584485 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073214057 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101553598 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083655952 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07236123 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117034935 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073880821 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112997816 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08906364 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084694015 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11404376 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073574 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110206096 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085542684 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073901515 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099449074 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074700409 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112746318 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070409332 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073292445 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107070675 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073794575 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.118868269 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095671284 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0725447 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108303467 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072146771 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071351953 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.097863493 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094856286 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100768479 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072972101 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074638549 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100730824 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069958269 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070092725 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.102055194 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069778639 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072625765 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.100189992 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072034125 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098348423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089828542 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071791014 seconds)
  done (took 9.788738563 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073287998 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072372743 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099071111 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.074034225 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07231722 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.098789886 seconds)
  done (took 1.529290945 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09697631 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098663275 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088709429 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076873951 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.139683192 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085443921 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.113431891 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078803531 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.116221697 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084634191 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.112432572 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087007983 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.119309764 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077642538 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.112032235 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077643937 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.112276774 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083034884 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.108020446 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079969714 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117343202 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079679484 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078227107 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11537327 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07520637 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.104055745 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082361521 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109863321 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085701189 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105257599 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.080211081 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074988308 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.104594421 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079369691 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113170781 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078508776 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103182042 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077664461 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106974515 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076986593 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086646432 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10567328 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083456715 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102539339 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080360067 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.104238578 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077290513 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107686806 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087405708 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.101271512 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078080247 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077106558 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101133777 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077159975 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10463367 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080566056 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101388716 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08840372 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077856351 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.10474313 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074743867 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101394394 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080557898 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.101032821 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.087483058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.101721308 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07923486 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077789781 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105508694 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078028388 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.102036585 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075456389 seconds)
  done (took 7.726460559 seconds)
done (took 29.044623625 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673776805 seconds)
  done (took 1.707432016 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.726163883 seconds)
  done (took 1.76149169 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.456858991 seconds)
  done (took 18.491373852 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.48717132 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.561118461 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.795244147 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162289413 seconds)
  done (took 3.0399676 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.931167126 seconds)
  done (took 1.981829108 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227392913 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.214164771 seconds)
  done (took 1.478520909 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774168772 seconds)
  done (took 1.81815909 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.35069181 seconds)
  done (took 2.388338385 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.313865493 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.141784044 seconds)
  done (took 1.503241027 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53878361 seconds)
  done (took 1.591860754 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.961544794 seconds)
  done (took 8.014771405 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214892658 seconds)
  done (took 1.275541972 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271689508 seconds)
  done (took 1.329536542 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.627002743 seconds)
  done (took 4.678108782 seconds)
done (took 52.104398555 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08201174 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084370723 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11010506 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081667487 seconds)
  done (took 1.404706851 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08406194 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077245725 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10846376 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077536896 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109535873 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078830528 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079257199 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.110336619 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076857458 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.106592149 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077898102 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076711733 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.107334127 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079029083 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101970594 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081252414 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106859397 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.079271501 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.08096469 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104983973 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075891071 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105341221 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081961161 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076060046 seconds)
  done (took 3.203445158 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083469016 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075853198 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103720087 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076210526 seconds)
  done (took 1.399750796 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083849076 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096520925 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.122333435 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081112377 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.125633744 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117905464 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075461792 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074191519 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102018289 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082177465 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072305381 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.131213519 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119108035 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082444035 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082633526 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.097442027 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074354832 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118893213 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082843758 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081903339 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101895156 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081960905 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071838636 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.122002044 seconds)
  done (took 3.343404777 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.141664399 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.133868775 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094812177 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.105071159 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.111725033 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.123934391 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070958188 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.122486149 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.070989699 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.085525647 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.102037476 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.114369481 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.111173689 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.070219651 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.069656459 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.096992776 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.083672299 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.111388341 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.073338375 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12633771 seconds)
  done (took 3.082689191 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081015123 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073763897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096010708 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073999094 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080432107 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.104349614 seconds)
  done (took 1.569660272 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073722794 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071751777 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097354143 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072355429 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075540369 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097644023 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071515183 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071488414 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097094542 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072838272 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070815812 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.097212385 seconds)
  done (took 2.030274947 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.440355374 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075948164 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.10152799 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071301028 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078295515 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09733304 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086399438 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.074018821 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.124316086 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071150445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097551276 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07453784 seconds)
  done (took 2.453599196 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218210056 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107121191 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243694004 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170895803 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140097401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152604439 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133879809 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118502098 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206587075 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139145105 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188197236 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176044008 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132935672 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171986572 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119552823 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106161799 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178819802 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226188693 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135988969 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186265776 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181380022 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148335522 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16083533 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132691835 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094471343 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150068123 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.103258679 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086340098 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215179917 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159635439 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170486877 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144108711 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127878514 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194101211 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230217935 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175789057 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169597845 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118019273 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.130384046 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.151944716 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249543843 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095544289 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186572216 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14047377 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11467665 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174085647 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150005061 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.156423312 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131047935 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094772088 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20459885 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192440767 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172866503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120520567 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141178145 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115362594 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148136746 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134558989 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231988543 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180848976 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16035395 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075045763 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128062496 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175203752 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163037829 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148617864 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160511378 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127950305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173036186 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16880769 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14737529 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172091074 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190931302 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095793606 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149954947 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155251502 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150566728 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206855801 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183447747 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078642417 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14785668 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102249526 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113605808 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173874451 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080213115 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192678099 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131486198 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120455701 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118199715 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141176751 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142790953 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178332704 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17041927 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129027637 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070425925 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138117469 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.13682301 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169652513 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119873064 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114417765 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141058534 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.111146289 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157849445 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080232839 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156969789 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.102787342 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155385036 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164280395 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082128039 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139302686 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106934193 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130934505 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156908345 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179448825 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122211646 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088775979 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214557529 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155819861 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104524434 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160633526 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180196051 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131139437 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131182176 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179736914 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224890137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094870825 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18347166 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136715502 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11742053 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093242372 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160419697 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137838369 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142126767 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087488195 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159415712 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218491925 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080548319 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119624452 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167916985 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086874555 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114125434 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141093851 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128179778 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094872282 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12742629 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104869684 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160310604 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184437563 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108307019 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146652652 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132398121 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231452045 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093997309 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132541122 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127349169 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077396853 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173209402 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176971643 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114589102 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183076176 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152531274 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137170348 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150941841 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089971658 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158456278 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083801098 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.103042108 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17253616 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147494218 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143072023 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176255043 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135328538 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162999061 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161662702 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153545002 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154224444 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118022112 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14043065 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120779524 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111963428 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145757765 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.105732652 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097012775 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.116421889 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138305526 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095385232 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116391981 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177907951 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14917329 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131062978 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14127621 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103572967 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161219726 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109965083 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157806542 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.15763124 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100135779 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204779047 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173628829 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16700677 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096606547 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213552463 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075064062 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107410079 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096674122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150720074 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115875003 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090516217 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146576233 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161852438 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163885709 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155029975 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145082362 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156440526 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170308388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076709056 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.150796998 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165915558 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155610139 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.142186527 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123188074 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.133528257 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154502818 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110356526 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235140813 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147691196 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157063894 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188397367 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131400937 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08560344 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132976328 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164584733 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135846167 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156758217 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12899897 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094363724 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14184935 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113856642 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139055349 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164406429 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14124204 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171914661 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.103449624 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193853188 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082946428 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145923929 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139673634 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144654737 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06963894 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154665545 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18253922 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130008555 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150775965 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172270564 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112602456 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.130586872 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218109748 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173764799 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090521829 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13857667 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141672262 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146332468 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153461659 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158052071 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139923209 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169402451 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111753691 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118568566 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093678512 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131160822 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132392618 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092225624 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129220337 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155248864 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.119351101 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168565126 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140392134 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113188488 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151068714 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.132147995 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098187299 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132230191 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195055738 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155964617 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21976452 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103196891 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.15944382 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211840729 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081187322 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113257229 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.087764451 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15855832 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089100224 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197328802 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101624786 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138864463 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159727586 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171308811 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120411897 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.075163736 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137306191 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152820663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116981836 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133262336 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139242073 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18539442 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129047011 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085691267 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152741519 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138387716 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100519122 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202591645 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068615321 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10088137 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110083048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087402781 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146272449 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184090727 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.118381748 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.164535566 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152854386 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120393266 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145502678 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131262783 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129022845 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119579275 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20833512 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164948286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087092876 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139968202 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156055689 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17537175 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141123808 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092690575 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211027068 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176889039 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.17718789 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1225976 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147619292 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119781621 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138570865 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165038966 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118162649 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186360355 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115815075 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177797977 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134794353 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123279027 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154108183 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10248476 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139627522 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167971382 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153805514 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088545854 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115073664 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148220914 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155392025 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136479492 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.081419869 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158965531 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.105933901 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17064146 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207868089 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115821244 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132866018 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101619644 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116728779 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137644367 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110926184 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121462563 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119773892 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211363993 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087576291 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169008094 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211581291 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148770334 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153459728 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096765496 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672554245 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.112574386 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175057462 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134903041 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187032875 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131129111 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151303632 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111109557 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148349349 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173354456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139397554 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211950983 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170956163 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157351654 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114236752 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138478509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140364325 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098034348 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133812657 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146483605 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112030922 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133382457 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15588081 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149652902 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.115914799 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092941774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176968187 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136070847 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164007787 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160427579 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119956701 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151874234 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165949283 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086206057 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158816919 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214471351 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093699641 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132869192 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.114832493 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106900757 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239537043 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077780868 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207242959 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155471893 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11076222 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147480321 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.128057796 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169158459 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138382747 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158023633 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126681131 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138804743 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108255678 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119599842 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082231822 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136930824 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146870035 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127973514 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110809179 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.147601787 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175171542 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077613518 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126634865 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136958176 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169882943 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194131414 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12325396 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089425945 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143171199 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130805007 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154547804 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156757994 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.088328023 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117193262 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.089013835 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.144964354 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.102184873 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136456502 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136660067 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116773158 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214460406 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090209717 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.260944722 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092602824 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137077826 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074788409 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.114049179 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131788003 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098618018 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139612731 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132563842 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211067734 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128835665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086129896 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12870251 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078055656 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117696311 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145758789 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145945339 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156612948 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099038061 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.096346559 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110702859 seconds)
  done (took 69.36930107 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14743689 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.114641231 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.129646772 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.187730031 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158228567 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250471882 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.193082904 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236195011 seconds)
  done (took 2.553552604 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07513178 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.128686362 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106779306 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1161367 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072902267 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.103092707 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.314469338 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113438714 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.073750892 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094175467 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.154738982 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075864711 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.4973357 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071322469 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.102989362 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.095195789 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.074098684 seconds)
  done (took 3.397407082 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.440894331 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.69537856 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.48505671 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079328332 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.093266486 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.116687394 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.782602832 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.177460442 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.100242079 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.463085865 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731884871 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.145166506 seconds)
  done (took 18.448208921 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081358837 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075008161 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.117153581 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089272072 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076627873 seconds)
  done (took 1.58025123 seconds)
done (took 114.884619128 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086013342 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.37462551 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059531732 seconds)
  done (took 1.604444454 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089636948 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089446923 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.119349759 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088324433 seconds)
  done (took 1.530773492 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079524033 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080005144 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11728373 seconds)
  done (took 1.418271332 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.307017879 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.143036804 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.126685911 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08844286 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082954492 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.111232334 seconds)
  done (took 1.426475792 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079391426 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080016857 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107442106 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082597845 seconds)
  done (took 1.488221168 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081646637 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057795777 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059356669 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088991104 seconds)
  done (took 1.433777506 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096177303 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083011771 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.113932589 seconds)
  done (took 1.432853441 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110943366 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118016695 seconds)
  done (took 1.373858712 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0873208 seconds)
  done (took 1.227832565 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099324821 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.15016121 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.17079942 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.144841569 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.181592797 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144447071 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.09292178 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.123639726 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.111114151 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096177965 seconds)
  done (took 2.461423175 seconds)
done (took 17.201980565 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085051945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.399439187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367272462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125470771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675838668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36065214 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.014295086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126160386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11826257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102225727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092387863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65522767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.00469009 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326623636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992262356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324008235 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.685418472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074456904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072336234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103582233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970914451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100290205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075132347 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073636427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.68432946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378844516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102707894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330106997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072439839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.108129759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.364335478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102848658 seconds)
  done (took 16.203455762 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076923106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153075857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081013338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088472779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.105803953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075434553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104527655 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075855572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159248126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075047014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120012166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073988123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077840801 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.105312639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093963785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10207697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078117389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073750448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105873051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076380644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119950915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073998178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074395835 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102606431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075741946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114519627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076454581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072750216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10270029 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079878888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107811693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077244114 seconds)
  done (took 4.125566768 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121572481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162946727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080116064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13662821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119771529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105221157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.177705814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099761389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16333534 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074443823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121145378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073510384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.137512503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076200088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.12277338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074264851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076433626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103239866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073862112 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102833626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093899438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072960251 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.104168881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074263457 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102709244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089968863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075160087 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.103283925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073921341 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.107669661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.082002102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075152354 seconds)
  done (took 4.411243556 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078768283 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080547333 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118150737 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090441929 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103563944 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.078871016 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07792742 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104353411 seconds)
  done (took 1.887331528 seconds)
done (took 27.772167131 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085405046 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074882391 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107799734 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086785696 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077774134 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.112716524 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072288473 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108096657 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081691434 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077571409 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.110323491 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073237927 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076626512 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.10281753 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080441637 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072859597 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.114277153 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077342506 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.113064466 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084787324 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074324288 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.111447148 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080107173 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.112280748 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085214264 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084258947 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.115120751 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078840318 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103806664 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076392915 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080552091 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.117910621 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074220759 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111966884 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075229993 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073787218 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101605983 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074554311 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084133804 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.110299982 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075988527 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109562603 seconds)
  done (took 4.9455206 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094641223 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095402837 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119806615 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067858499 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07185914 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.097200448 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09412173 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.093999343 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.068772601 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09270788 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.089152985 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064441612 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064539259 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058706717 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.092419217 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062602605 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065865285 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060889525 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.092807449 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064121409 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065341101 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.087216572 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.066658395 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065003621 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061364938 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.096727697 seconds)
  done (took 3.207726978 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082761208 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087861419 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122593434 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134433119 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.142725563 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080932056 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.114102738 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09318335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.117901239 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07411751 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076420008 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.130705815 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092005538 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108833184 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.074543718 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088408216 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117821991 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075311626 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079401951 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124649554 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089563466 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.112525344 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095202253 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084195753 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.103769526 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075697407 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.105838461 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087803185 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077873437 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112565976 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07771562 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106068571 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.076661708 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084427677 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.107554337 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.076049264 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121552393 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084465456 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081512659 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103966395 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077215784 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073871845 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124884907 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.117816469 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102897116 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080661544 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109139509 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084618139 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072733044 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121834176 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08308882 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072847906 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.106636233 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072622898 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100961942 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088986883 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075250351 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.105551391 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084610389 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075647924 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.115976887 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078179186 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118067343 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073827824 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081044185 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102957154 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075147915 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071063267 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125992663 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074454773 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.143868982 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073702595 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.10270197 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08390309 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07958478 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109141928 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074064743 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116759179 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084571987 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076779227 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.110977402 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077623531 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075595749 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12140264 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076498427 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073912227 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103876833 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079351296 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104581635 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075387644 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08662926 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.103371806 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076666641 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.118333219 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073907313 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074319012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108884093 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078856773 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071985631 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116240031 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078397573 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.10349638 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083819038 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072382338 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106373559 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084377583 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.106141584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073578443 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077523807 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.109098195 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074738052 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073634162 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105663256 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074980363 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082467183 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.109274361 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077819929 seconds)
  done (took 12.038684077 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.204841464 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.206365222 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076399607 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.187976031 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084212098 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115225591 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18991131 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104391367 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.103697295 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074820612 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074672594 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.143322838 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105517454 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147000085 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.114246161 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0748727 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090924251 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.144917329 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.194602414 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.185489565 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092488406 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.113557186 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076380019 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.103846785 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07712295 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082895216 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.119028066 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086661177 seconds)
  done (took 4.547578292 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.089542592 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.135486082 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080017129 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094605164 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128690115 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073091539 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.109532628 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075163002 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085389223 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.11688392 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072771199 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.110018991 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.081311313 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.112062071 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074810665 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082077322 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.113078109 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075293721 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.1074781 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07903461 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079942375 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116408892 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077664284 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101832404 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081646166 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072361371 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100355294 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091349375 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.104077301 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095553886 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.10080707 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081806155 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083028222 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10491483 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073895792 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075814044 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.106133505 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076149388 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075115979 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.102456341 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072848696 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063392577 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.103503797 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086325163 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.109834943 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.066492831 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079274539 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.110227231 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079515327 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070903168 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10688601 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076185039 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105829653 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082855178 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078559819 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.108283501 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078600929 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07135278 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109929976 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076598194 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070065895 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.10156342 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079777743 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072141811 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112306198 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078091894 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.100932954 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076973132 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078194944 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.109119711 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076285902 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075983147 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.102255329 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076354807 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078479802 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108712551 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076903059 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071560337 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.103437668 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074110672 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060283607 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.103617224 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059966396 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076052566 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.102690739 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072739487 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074985172 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109591936 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087207816 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.105269925 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079554747 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.10356618 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074575801 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076885202 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.098101061 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078026223 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088010063 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.121129131 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073142974 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.101808651 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087823008 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077714772 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103544103 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063108344 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079550607 seconds)
  done (took 10.495724378 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09764355 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098744684 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.106495693 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087930172 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.130391784 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.098467418 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110492464 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081821138 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075209166 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120955341 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075102415 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081112316 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.107985598 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082699831 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125537946 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082725869 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075788279 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.113889993 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08310195 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13819666 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088970536 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087515936 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.114807023 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074676887 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.106852649 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087652255 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098859291 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.114675697 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.082446216 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.115953212 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.086235249 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099111685 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.119792703 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.077805824 seconds)
  done (took 4.51087047 seconds)
done (took 40.894626735 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.258218791 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.466862798 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.226375146 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.215767962 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.234105504 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.233206882 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.258577472 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.233276015 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.28819156 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.2279574 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.474522996 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.03896884 seconds)
done (took 59.33073732 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.337911142 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368515085 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501934659 seconds)
  done (took 4.050009639 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.580614404 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.25953252 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.520352653 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.229597631 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.230508406 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.6821719 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.025908145 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.610300171 seconds)
  done (took 28.732830367 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.231454401 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.636067667 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.165828423 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.153301982 seconds)
  done (took 19.362296117 seconds)
done (took 62.236765745 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.245459468 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.261536097 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.247839058 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.232398457 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.347305755 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.280747203 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.560247727 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.4500102 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.229948511 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.222569882 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.251606558 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.250284744 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.242343314 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.545166593 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.243113481 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.230696393 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.318645173 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.672683361 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.652025019 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.241539457 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.235408664 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.27031676 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.262875269 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.234349167 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.254313618 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.231581707 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.243461167 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.231604822 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.918723335 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.235615745 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.247324726 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.734273168 seconds)
  done (took 193.002868858 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.231409942 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.412631658 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.500288329 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248161723 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.902862519 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.431418744 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.369056029 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.999006325 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.24862836 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.240630223 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.601876102 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.231917071 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.661778061 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.283437353 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240382236 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.242495639 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.533746068 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.673660433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.253297857 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.503648884 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.256967547 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.454386199 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.382307245 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.563939375 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.248448099 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.315185157 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.273603119 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.234299822 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.426809213 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.475114603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.27867127 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254374763 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.878433359 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.095203932 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.236987376 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.243860644 seconds)
  done (took 152.606590339 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.533742332 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233216906 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.232962331 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232166901 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.267260872 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.232643337 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.81543055 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829424193 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.738789728 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.883047952 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.29513185 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.535646789 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.233838274 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327985498 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.244244854 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.232517422 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.247050694 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260765622 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233110556 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23248831 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818274419 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.245524114 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.449755606 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236218648 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229782755 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262536498 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.62662616 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229632843 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262371593 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.554398375 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.280943 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.230255404 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588838935 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.958409686 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339789246 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.23050893 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261307784 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.228421224 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.500841142 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.229009016 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.228481586 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.229307481 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.23252848 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.869686656 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.231330755 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.80712595 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228968984 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.160705054 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.230065901 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229712551 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.964372679 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.810245723 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230681337 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.229499016 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.231692401 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.227648389 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229541641 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.262551752 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.941595729 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.331564199 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229907466 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.232541305 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.26282442 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.229764399 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.413509268 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229065611 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.236918361 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.287126516 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.333889086 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815792469 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230993283 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.229234833 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324779373 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350704304 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.229336188 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.22865917 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.229565249 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.229626436 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337702785 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.229744446 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.661904803 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.235929143 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.230706937 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.290168402 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.326363879 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.230679841 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.580168284 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.232366192 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.229636649 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971539906 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325058615 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.230527283 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.22955062 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.229460348 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.228827357 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.66287624 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820711722 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477749673 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.232892927 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.981977725 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.236418211 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.676757458 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.230875251 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.801013693 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876467499 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23419251 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34108613 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.235311217 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.231972238 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.231022436 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25992664 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.232160808 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.290099362 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.232029834 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.631159135 seconds)
  done (took 351.20326039 seconds)
done (took 699.520936402 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.94299348 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.883826907 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.02551669 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.899038374 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.880785626 seconds)
  done (took 10.808762569 seconds)
done (took 11.983743992 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.432674438 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.431778417 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296635586 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431475305 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2621989 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452938819 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412709377 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.251974092 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.339917965 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.315672016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339120766 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284479218 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259603584 seconds)
  done (took 18.689132289 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565456658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.556340938 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297680207 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.563196654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273755456 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572790504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.439140704 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.453493081 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433977857 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248229766 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249404472 seconds)
  done (took 16.832610206 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564419131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.567073669 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301022063 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567320629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276528289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.564465848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442164405 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.455140103 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440545935 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249710716 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249258238 seconds)
  done (took 16.855991382 seconds)
done (took 53.55350259 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.24195724 seconds)
  done (took 2.420708819 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.280637865 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.44692224 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.260876408 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.247237571 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.243539373 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.244031717 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.247431765 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.243881938 seconds)
  done (took 11.395187784 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.241601608 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.24496989 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.24466496 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.241204324 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.244639281 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.242128697 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.245084083 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.241890799 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.246650111 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.245662692 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.245270631 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.243217919 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.24482529 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.247556859 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.243317009 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.242816295 seconds)
  done (took 21.08536428 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.244375709 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.24172615 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.24199879 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.243003258 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.242278154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.243541843 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.244379623 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.242864463 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.242339487 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.242875478 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.244051547 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.24295224 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.243478749 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.242931222 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.243597675 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.243394944 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.243147188 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.243504804 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.247248597 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.242409007 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.243796989 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.24178624 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.243884866 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.243750154 seconds)
  done (took 31.022398337 seconds)
done (took 67.100114143 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.413954104 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.974987893 seconds)
  done (took 9.570335423 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.246550871 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.246535173 seconds)
  done (took 3.675387216 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.248004624 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.245837851 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.246219687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.245633983 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.245763642 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.245632889 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.246273495 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.246710378 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.247136319 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.247875141 seconds)
  done (took 13.647728762 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.248601222 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.246959175 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.244868315 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.246403832 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.247228487 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.24424747 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.246685837 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.246446748 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.246787869 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.245211002 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.246459713 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.245964257 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.246431529 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.244592199 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.247445906 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.24503416 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.245050672 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.245276925 seconds)
  done (took 23.614202305 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.247944238 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246961368 seconds)
  done (took 3.677261046 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.245247126 seconds)
    (2/7) benchmarking "second"...
    done (took 1.24428177 seconds)
    (3/7) benchmarking "month"...
    done (took 1.245722293 seconds)
    (4/7) benchmarking "year"...
    done (took 1.245633364 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.245768004 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.245503316 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.245503164 seconds)
  done (took 9.900369955 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.249026585 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.424143766 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508787942 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.873167061 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.249391782 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.250505495 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.116620871 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.251727179 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.253765311 seconds)
  done (took 14.359902014 seconds)
done (took 79.623894572 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.2749989 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.23815302 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.15659403 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.258474453 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.254830829 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.539020309 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.293021312 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.37083093 seconds)
done (took 37.566671065 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.239414288 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.998823113 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.994753936 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.258952716 seconds)
  done (took 11.43719777 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.234479652 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.223995474 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.228941474 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.31524054 seconds)
  done (took 18.187181372 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.314138727 seconds)
    (2/2) benchmarking "read"...
    done (took 1.579275203 seconds)
  done (took 5.078119853 seconds)
done (took 42.123589107 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250031344 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.248790409 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.247080272 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.24735556 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.25037597 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.246883089 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.247813873 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.250832863 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.249053967 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.249226561 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.249459176 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249508431 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248012477 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247039205 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248987366 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.247210262 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247706592 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.248374673 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247926642 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.251009681 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250194424 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.247526241 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.248178199 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.250986222 seconds)
  done (took 31.154723341 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.250636167 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.248910017 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.250383206 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.249566587 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.248447819 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.250178848 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.250524543 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.247895114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.250362764 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.249862545 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247171157 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.248442597 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.25042742 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.249446122 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251572765 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.248485722 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.250971978 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248214874 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250305762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.249207702 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.251303517 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248837722 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.249623637 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250882548 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.250157644 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249732312 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.252157511 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.249929257 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251862186 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.250830277 seconds)
  done (took 38.682672669 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.257062201 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.260209414 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.252057084 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.252492975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2529696 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.252205967 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.254810728 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.252517254 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.252697959 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.252446052 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.253796623 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.253329203 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.252320029 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.252721314 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.252438485 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.252109098 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.254004808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.252918761 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.252826943 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.25225122 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.252725056 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.252231704 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.252158751 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.252876812 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.252184919 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.252603296 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.253095689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.252952125 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.253597471 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.25326655 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.253475584 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.254252143 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.252796875 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.254375736 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.254462026 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.253443205 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.258084851 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.259343211 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.253674757 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.25451177 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.254393354 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.253079496 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.25371057 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.253700105 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.25412344 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.252960622 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.253439413 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.254729151 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.254385189 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.254121577 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.254352112 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.254382278 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.254567665 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.254379595 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.254382788 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.253537091 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.254492823 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.253324504 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.255434774 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.254628905 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.254988799 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.256424293 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.255329061 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.25472738 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.254978682 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.254842053 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.25612575 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.254462335 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.254702271 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.255125746 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.255086725 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.255531877 seconds)
  done (took 91.478502657 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.255075616 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254280553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252094031 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.253019008 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253902113 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25586931 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252796426 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255423606 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252903461 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.25607096 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256079363 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.252716 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252401084 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256092144 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256924831 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254533063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.255696369 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253231208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.255048737 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.256730501 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255525673 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254052998 seconds)
  done (took 28.791836244 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25803237 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256927837 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.253994685 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256998283 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.253870792 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256216684 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.256196177 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257375979 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257837581 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258376615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254655008 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257578188 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255485323 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253889019 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254412217 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25467755 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256799655 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254475227 seconds)
  done (took 23.799571496 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.254539987 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253933929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.258534953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255849882 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.25602433 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257481048 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254426953 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257182054 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.257086452 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.256234676 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.258090145 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257988456 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.258724657 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255419742 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257691077 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.255870354 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.257027664 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254699756 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258043297 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255012726 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256084645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258056341 seconds)
  done (took 28.836677553 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259006678 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258503139 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.255871502 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.256017366 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.255656483 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.257745751 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25806988 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.255505172 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.258123578 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.25834912 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256943706 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.257656581 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.256114869 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256654513 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.257619222 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256401771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259455263 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256521076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258925776 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.256454753 seconds)
  done (took 26.339172075 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25756086 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25768006 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258202616 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258774951 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256944262 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.258751934 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258304786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258542592 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258584676 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258067169 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258426242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25870377 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259428012 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259215001 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258425665 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258679867 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258623304 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259166819 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257748367 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259329102 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260102328 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258946249 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259573091 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25888993 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25985483 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258786277 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259529179 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258408899 seconds)
  done (took 36.437072425 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261134375 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260928789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.258058752 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.259400436 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.258945194 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.257864193 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.258907551 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.258675382 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260893474 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258325251 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.261008421 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.262112804 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261964122 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.260589556 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26129696 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.261053639 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261293322 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259158036 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258673674 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257940047 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.261403073 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261284975 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.261241858 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259850064 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259150319 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.263305292 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259187933 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259796141 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262766535 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258858638 seconds)
  done (took 39.002386181 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.281179151 seconds)
    (2/2) benchmarking "in"...
    done (took 1.280326813 seconds)
  done (took 3.757979588 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.259982591 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261701458 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.261523764 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260565553 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260104562 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.262567346 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.261953314 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259203654 seconds)
  done (took 11.283866676 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.259269529 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.263830601 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.263182282 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.262468675 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.261858603 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.260596214 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266666461 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.281215467 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.261602433 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.261522132 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.267267838 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.26853513 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.263950558 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260611286 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259523608 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260568026 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.264317487 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.261103982 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.26155961 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264811208 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261285204 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262434556 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262789406 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.261685943 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262321768 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.271060481 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266289107 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.264474169 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261483239 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.264091053 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.260974225 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.262395485 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.262453714 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.262381437 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.265233083 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.262474813 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269892472 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279613877 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.267779952 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262621342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265430708 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.262555284 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.262565483 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.263274881 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264152463 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.263162119 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.265447625 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.262988489 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.260968234 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.26641016 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.270793011 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26213864 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262929354 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265794406 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.262906544 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268484968 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.281532709 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.265711862 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.272236298 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.272610633 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.274735311 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.270922688 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264644691 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.263323851 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273506668 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.286168365 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269429825 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.282692583 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.264138633 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.267105106 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26978723 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276971334 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.274352586 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.264278462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264400521 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.267255446 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264191197 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266825789 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271325222 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.285274546 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.265311606 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265616093 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274712998 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287161363 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.263126578 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.264861332 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.264531731 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.265843918 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.265324558 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274229122 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.283819256 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.268102675 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.264082426 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.265078567 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.266348671 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264747684 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.264894477 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266182692 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.266052102 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.267401541 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264775533 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268440422 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.275340896 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265107591 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266654815 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.271674358 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.267695422 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264453762 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.2716142 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.269026457 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265628139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.26663375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.270174054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.265838813 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26881754 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.274021264 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.266942221 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.267045073 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265949283 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.268954619 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275548159 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.291518268 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.269301325 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.270239769 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.270597181 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.278045936 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267120364 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.270134731 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.268967723 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.267067184 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.267327439 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.267532976 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.269885719 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.266849583 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266930134 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267579242 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.266204457 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.269101757 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267075053 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.267910241 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.268814095 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.266643997 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.268210843 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.268917532 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.267350226 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267973449 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272672874 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.267301273 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.266745808 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.267953703 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.268053 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270387562 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.269112903 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.268559175 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.267344862 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267904551 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.267143756 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.269002976 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270420315 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.271180577 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271839934 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.268927282 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271945891 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.26750725 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270834782 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.2673743 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.269591474 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.27161311 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.271461064 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.26791246 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.27147134 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.267870973 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.273036186 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.276980216 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.271835016 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268858338 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.271611672 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268117561 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269392392 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270407726 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271541071 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.277087719 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.269813726 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.274779155 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.270165592 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269596456 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.273019427 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.269512717 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.269716759 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269489474 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.272903022 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.279829097 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281827045 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278891352 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.270992387 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.276813155 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270056909 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.275434939 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.274205155 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.269930616 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.273757144 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270476499 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270117804 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271633677 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.27166943 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.270314336 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.270260964 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.273450631 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.274389931 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.270833929 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274661963 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.271367748 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271794401 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.271597135 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274067176 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271885676 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.271887362 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.271851269 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269089152 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270042678 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.273823162 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.272042888 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.277219513 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.271754871 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271515317 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271696231 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.271104225 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.26990853 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.274464079 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272590414 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270354904 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277589068 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290460615 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271217555 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277460135 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.290463783 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.270897673 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.274798111 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.275444399 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.272543638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.275547764 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.282985628 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.275195634 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.273472304 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.273053311 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272049597 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275652717 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.278198169 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.273341117 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272205681 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.27531653 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.274010481 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.273219842 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274788051 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272997635 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.273991845 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275117706 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276052704 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.276497251 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274029689 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.274182142 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.273852617 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.273488495 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279892643 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.284220622 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.279227902 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.27425203 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.275525401 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.275028938 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.280705649 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.273270422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273681911 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.273227035 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285552622 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.282383974 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278657611 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274445553 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.276870334 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27989551 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27477908 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277865729 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272908818 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274716565 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.275201927 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273620002 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.276354383 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27510848 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276968757 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275661173 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276829901 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.281580872 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.278577868 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.275154518 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275543422 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27569458 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.278755016 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274556313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.277779688 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277232488 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277501134 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.275218949 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.274907934 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280831259 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294225053 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275986565 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274509445 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.275581767 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274817334 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275825234 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.27604129 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279369339 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283981875 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.279076732 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.285111879 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278076609 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285276934 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275920266 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.27904147 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284349389 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.276396696 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274685839 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275927519 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277103601 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282363248 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295241552 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277916092 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281706837 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278234718 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.278183201 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.280597621 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277434584 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280204416 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.278305614 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284459937 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298120332 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.28153771 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279766052 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.277924276 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277253137 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.280607521 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275806997 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279884051 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277913659 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.278610646 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.277432769 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.278392387 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.280963775 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278643214 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.280979137 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.27910148 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.281392584 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283206096 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.297500037 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283002837 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.281517175 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.286271947 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278159388 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284835461 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.297475361 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279298009 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278233215 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.28156395 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.28042859 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.27761099 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279863767 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279761364 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279408604 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.285133263 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279640235 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281342025 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.279273862 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279463955 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279230611 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288780706 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301025415 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280369891 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285191426 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278693685 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.280158758 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.283691637 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279883181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.278550637 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.28145452 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28956954 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289429111 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278739567 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.279829638 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279558676 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279442265 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282907244 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.28231046 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.28031634 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.284144358 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.28110117 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.279964466 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282359944 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282624088 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279734506 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280831008 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282232969 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290518615 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.281073336 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280751893 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281082996 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283445902 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280942508 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.280632079 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281626433 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281507703 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283695315 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.281990229 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288141741 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287862997 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.282190223 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280756031 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281480336 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281897396 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282218143 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281566806 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281548659 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282139181 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.282109132 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282606211 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.282050918 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.279620336 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.284582949 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.281678363 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286079691 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285054502 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.288959681 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281729574 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.2815248 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.284788908 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285811401 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281301054 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283022795 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289122863 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285396197 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.29245397 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.29062651 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.287498094 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.282728746 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284535662 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.29095531 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280241975 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282274267 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.283221145 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283974344 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283203978 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.285920385 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283655498 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.289826415 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283213289 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283027098 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290669383 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.301554816 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283129044 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28554682 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.287527205 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.28367417 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283754558 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286265141 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283214282 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289292324 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.303597156 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284094168 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285559162 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281820035 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.285886046 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28901655 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287229141 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284810715 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284264972 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.28455461 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284449556 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287831914 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.284927972 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28412927 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.283421405 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287140169 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.292035644 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.284638031 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286302264 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.28417146 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285809978 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285629262 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28895171 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285303782 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.286146498 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.284636877 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285503357 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.285154299 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286890191 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.284956454 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.28734407 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.288683027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286436351 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288565477 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.29623256 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295914631 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.285735416 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.285270445 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285196654 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.286996605 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286578166 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.285636891 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284968181 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287109261 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288299129 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286267272 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288552149 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288549673 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300269288 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307572451 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285096307 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.286190701 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289719416 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.289246146 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286635988 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289424525 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288200297 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.289628223 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294052545 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286366117 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291714442 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303919181 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287740386 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.293515593 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.289746105 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.294095679 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288361184 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28685767 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287991108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.2914286 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.302640097 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290474221 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296374825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315359736 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.306153054 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.287518735 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288072858 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286742158 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288293388 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.289243292 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.288211515 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291337828 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291289306 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287692236 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288679538 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293477231 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288579994 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290638822 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291733856 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.287235433 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288676627 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289471119 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.289226132 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291805684 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.288344468 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.289754201 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289873163 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.288230874 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30054789 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300090391 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292356797 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.288709395 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290136849 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.291283358 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29190204 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29937968 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299993231 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289012724 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289139801 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290513772 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28923055 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.28958588 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289542689 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.289653501 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289599194 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.289144722 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.301669342 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29898376 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.293958675 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.290088718 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29002376 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292419707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290199956 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290123508 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291008573 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292017058 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291789562 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293235858 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.293785598 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293208809 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.292833911 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.30062449 seconds)
  done (took 763.039034954 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29168944 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291454185 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291155084 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291503402 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290443456 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29038929 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290774417 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290315946 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291602769 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291492099 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290391348 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291468792 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291284901 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292726637 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291431919 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290870519 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29143585 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292297609 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29202045 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291512467 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292519214 seconds)
  done (took 28.345825512 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295350733 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292463772 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292243297 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295413338 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291422123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.294716041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292427406 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294541151 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294809201 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292099347 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295330538 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294878254 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.292696381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.291659779 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292805708 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294688223 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295173081 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293246717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295027856 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293457702 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295445271 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292992458 seconds)
  done (took 29.691576297 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.293861976 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293283885 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.291464564 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.293218522 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.295996624 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.293944897 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293793134 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.296153559 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.295938614 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.293012803 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.291452467 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.294122235 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.299331422 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.302190455 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.29395504 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.295895814 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.440123592 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293381894 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.293493153 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.293302783 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.293522085 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.297476343 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.293729944 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.294129232 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.290522447 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.29361109 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.297072699 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.296217513 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.293837826 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295530715 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.297363249 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.29698059 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.293849284 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.294638889 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.294515749 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.295821988 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300465877 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.295348164 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.295282095 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.297441351 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.304160157 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.317343938 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.295111136 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.299701285 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.296708287 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.298606495 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.298348622 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30213632 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.295283798 seconds)
  done (took 64.883723025 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296742413 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.298291365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.295315115 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298214677 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298389389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.297247153 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297573692 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297967659 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295236783 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294482718 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.298503455 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.295425035 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296102007 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.298229721 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.299120375 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295878034 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296207115 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296274655 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.295927838 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296872036 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296379662 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.29911364 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.298645842 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.297060166 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299128657 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296468324 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295900837 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.299475001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.296690786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297191803 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.299068357 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299887696 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300742758 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296620759 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298204846 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.299342322 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299555498 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297279442 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300074628 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296431528 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.300181586 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300674567 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.29953127 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299984914 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298149379 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.298552048 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297199744 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.297454268 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.298114174 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.299529732 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30011152 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.297601534 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300470023 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.297389667 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299884717 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.300697696 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296931403 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298268352 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.301211346 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.298139662 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298621997 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301520398 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.297757216 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.29939067 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300586411 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.299122944 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.297921125 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300779505 seconds)
  done (took 89.509080403 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297807541 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.297612264 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298529083 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29859187 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298064331 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.298981481 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297957855 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298088551 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297888049 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297710113 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297107879 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301928695 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.299094323 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301942198 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298611086 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298676419 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298869523 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299282374 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.298973848 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299746159 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.298641467 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298469308 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29959806 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298893784 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300536527 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.29894704 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299530269 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300192012 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299561146 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29978785 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299910019 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.300519531 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.301343529 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299292186 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.301673928 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.300274279 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300366787 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300305592 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.300646686 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301378932 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.299923343 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30072676 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30148661 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.299736289 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300449827 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30142736 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300849409 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.301959483 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303409487 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300964305 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.300891518 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302345247 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301033166 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301434906 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300871723 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304217983 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300866554 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301546786 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301895585 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300994377 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30025292 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.303769558 seconds)
  done (took 81.843236756 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303467921 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303973482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.301312378 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.302119845 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303161105 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.3007967 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304441022 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.303030115 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.303993602 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.304362804 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303760722 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301578784 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301757097 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304514195 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.301710214 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302088351 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301794329 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.301766076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305199218 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302786627 seconds)
  done (took 27.294642175 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.302722004 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305597083 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.302695827 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302421691 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.304781629 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303363999 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.304242302 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305396031 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303277377 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305081767 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305647689 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306025092 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303003753 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303213949 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306108737 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302884148 seconds)
  done (took 22.103737517 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.302862263 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.304615061 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301997892 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.302936206 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304184719 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.304188876 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.30612943 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.303311318 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.30412306 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307063019 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.306625087 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.306820796 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.305854055 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304001287 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304848386 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306267444 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.304000579 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.303928948 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.306863849 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303279719 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.305361554 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305097068 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307025072 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.306895852 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.304343403 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305190197 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.303849106 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.304251502 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.303228351 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.306570033 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.304651723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305294964 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.304644066 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.305297208 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304885842 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.30364677 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.307191554 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.307226786 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.307911096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307529569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307947637 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.305325608 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308261436 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308044758 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.305226437 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306957823 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.305004272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.30680249 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.304964762 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.305948613 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.308152581 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305910322 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.308445985 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.30852185 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307675175 seconds)
  done (took 73.047310642 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308525122 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308384961 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305366111 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.308421325 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309305397 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.306239818 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.308378414 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306503114 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306449437 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308730672 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30683504 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.308348687 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305943894 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30825076 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30761616 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308814744 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307323552 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306626041 seconds)
  done (took 24.777724042 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.306924027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308005085 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.308756656 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.30612224 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306750919 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309832927 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307141223 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.310573755 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309748284 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.307632972 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306993341 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.310148047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310193943 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.310043938 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308457335 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307643081 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.310697554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310392731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.308478296 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307621055 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310434992 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31043714 seconds)
  done (took 30.035861277 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.306907922 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.306723163 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.306870264 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.325793925 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.328205258 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.330020703 seconds)
  done (took 9.147406731 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318728693 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311673198 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308918631 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3112688 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311220891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308288216 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308374536 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308948531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311189962 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30950003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309209665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311789002 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31187771 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309455985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312740517 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312201396 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309866211 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3089429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310093223 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312291747 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308708551 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311798193 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309892854 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309243949 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309684023 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308885501 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312580172 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310185619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30967853 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311368658 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312631215 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309169167 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311232062 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31022989 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31388437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313467619 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310574201 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312169749 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311692318 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310265939 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313498559 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313299386 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313334011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310055193 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313453355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311004182 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310630599 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311337779 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309904599 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314462109 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313840206 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31146032 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314196861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313343799 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313127558 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314833949 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311644274 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312052511 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314697756 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31272058 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311202555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313849065 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311847868 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311902382 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313350347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31236041 seconds)
  done (took 87.83064139 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312413668 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312751978 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312376902 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313284983 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312246409 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311930784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312006495 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312862137 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312908717 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312908694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315777579 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312936383 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313399799 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312627798 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311881818 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312676309 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31241088 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313296477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312256043 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315748764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312647824 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312391085 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312641564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313190686 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313177038 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314969936 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312711293 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313116552 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313590982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314351017 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313271427 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313458624 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313866712 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313338264 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313719129 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313381147 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313190698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313707334 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313789443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316886451 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313657496 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315359597 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314080408 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313846201 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314693327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315474131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314595721 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314808553 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31536688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314084348 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315364123 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315329726 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315754569 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315042863 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313846863 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314704083 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314767127 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314429635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315320464 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317377293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313927432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313733193 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318013253 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315169073 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315925394 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315217024 seconds)
  done (took 87.968763106 seconds)
done (took 1780.26589187 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.364807325 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.315553602 seconds)
  done (took 13.929753817 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.479491241 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.429393146 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313768809 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.311211456 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314466236 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.325717556 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.328283207 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.31318518 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313444672 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.312794788 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313907217 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.502682813 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.314942129 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.313713198 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314047059 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.406454571 seconds)
  done (took 42.864717009 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.342200117 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.319239923 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.441352183 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334305908 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.34169499 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.519402205 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.37522109 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.317979684 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.506522525 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358194732 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.018629071 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341847388 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.31740187 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.521302147 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.338469008 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.520694008 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.583423569 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.02154581 seconds)
  done (took 30.769924225 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.813896943 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.318107707 seconds)
  done (took 9.38311564 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.355357293 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.30948325 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.329955622 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.324900526 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.332930735 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.368436825 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.395140475 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.393683165 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.337985615 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.355824026 seconds)
  done (took 64.760625774 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340248549 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318545781 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319264184 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318397418 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30988093 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.310382345 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.316320352 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.323559862 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.359705468 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.456652577 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.337068067 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323441838 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318396757 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320345312 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.320465141 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355271368 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462860616 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.320238828 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.319282467 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324506913 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318510386 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406397126 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.363204862 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.320187323 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457586839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.379057309 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321759138 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.324277171 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.444775857 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32060048 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.318179131 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.319127199 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320768079 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.902857117 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.789291683 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.334899721 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.344086387 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.3274739 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319518147 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44422935 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.319745543 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324892129 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.311040665 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.758902045 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.485805663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.441016073 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.689075215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.321526512 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321616308 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383704567 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.321309469 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.321020254 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350311505 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.128900509 seconds)
  done (took 111.584351291 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.369735407 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.801289461 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485473286 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332284842 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.207836644 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.014304393 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314251957 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.629874665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.345209257 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314240805 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.605379684 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.853620164 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322370946 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.323864832 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851838379 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.377677256 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313740802 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.083460439 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315476238 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.314714701 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739666994 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332455951 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.313113289 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.425854715 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.355655499 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80978445 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.901330962 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.860430834 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.314271231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.314946668 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814926295 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320620856 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.354882293 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.31634336 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.603657856 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.703610729 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.677644353 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.319646365 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318543111 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.316854205 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.346052846 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806471674 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688133968 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315876938 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316706465 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809065419 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.3165666 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.315515949 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.316707967 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527548591 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.239620681 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316370025 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.90759033 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.316655084 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.608460888 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.40921599 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.351703408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.836100101 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31648548 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.445001028 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362902659 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.315410877 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317309622 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318290522 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320929889 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.692202642 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.686895653 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.317211406 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.694900985 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810010104 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.31730034 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881012916 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.267667445 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324374296 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.356651217 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316344487 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.932329167 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.835578767 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.343363015 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316732183 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679739164 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.317813007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.610892918 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.332106689 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.317365419 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74948192 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.342420013 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.329874598 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.315713186 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.331313556 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.946886956 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317764133 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.600145853 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.36106415 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.31772151 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.317864921 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.322167116 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.317948051 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317362059 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.320215111 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.880983757 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.319016879 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.467167316 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340320983 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317592563 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.337748279 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.31914176 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.319590168 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547350565 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.779157825 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.322619461 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.319266057 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.317758864 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.320324021 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.420941614 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.324975159 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.655711261 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319966751 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318879722 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.319382324 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.033361957 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343677015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319563547 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.323363735 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.185758054 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.528619368 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.339480477 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.319460583 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318632139 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.337277819 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.796658767 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320956253 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.407291749 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324231087 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057144212 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.335385668 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.345906901 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.901045122 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.321324856 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.320328087 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322556089 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319417008 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63545003 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.609648153 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.632863765 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321972698 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.320890134 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.038210364 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.320846187 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471295782 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342025163 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.303838903 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521565146 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.490336507 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318855172 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.901296499 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.3212649 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544479854 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.320525166 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645989183 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.844008751 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322056579 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.327426642 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.059640368 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.981836743 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.943537923 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.32494335 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.616171577 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.324886665 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.781399524 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.322180361 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.321643024 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.781947504 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324837836 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328790878 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.321872114 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.320698688 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389355156 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499515934 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.866030245 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32233171 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815587593 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.379568016 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322249493 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323699222 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322430155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.675856969 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.322316816 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.327314816 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.329817689 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.323119825 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.330447318 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833906996 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.243389206 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.3240607 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479564969 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992152542 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.322794208 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.324632223 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.920579263 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.53306215 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864217153 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.352945977 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.662421555 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.332064557 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.365880621 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.145223617 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.396110036 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872309183 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32678438 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.324847323 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95495678 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.324317888 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.418384907 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.323647244 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324958499 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89766965 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.323657985 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.325113579 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.805613401 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323871413 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583486815 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.32496938 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.336978879 seconds)
  done (took 1110.086627762 seconds)
done (took 1384.626014789 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.32441848 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324781202 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.311658542 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329370282 seconds)
  done (took 26.555233897 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336533907 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.333159118 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.334639373 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.331612548 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.334472721 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.332437776 seconds)
  done (took 9.272725689 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.834193268 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328028436 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.328398354 seconds)
  done (took 19.75827699 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.571758018 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.738015189 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.741663389 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.776512338 seconds)
  done (took 11.09582003 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.335314068 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335048859 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.333444085 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.33604563 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.338679699 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.339935387 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.336078595 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.335441464 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339909312 seconds)
  done (took 13.297323927 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.624657605 seconds)
done (took 86.867171634 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.76911108 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.548992537 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.316905774 seconds)
    (4/309) benchmarking ("sort", Float64, false)...
    done (took 5.719192099 seconds)
    (5/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413663765 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.329103962 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.412414257 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.589334521 seconds)
    (9/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.084063513 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.221414647 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.389718515 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.358060834 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.461278626 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.82661814 seconds)
    (15/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.328559077 seconds)
    (16/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.460522844 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.26774321 seconds)
    (18/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.867272867 seconds)
    (19/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.052774642 seconds)
    (20/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.367135816 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.320347532 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.328724178 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.441096314 seconds)
    (24/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.473909703 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.321473347 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.334603527 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.415793826 seconds)
    (28/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437873364 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.454650493 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.969557183 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.357796403 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.975892251 seconds)
    (33/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.417375897 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.326750783 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.326762509 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.527499979 seconds)
    (37/309) benchmarking ("sort", BigInt, false)...
    done (took 6.348117631 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.610666572 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.432523359 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.44405545 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.782374553 seconds)
    (42/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.614963983 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.191287971 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.332282309 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.567931341 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.360246776 seconds)
    (47/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439143866 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.342922622 seconds)
    (49/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.391995222 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.009444821 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.330840064 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.340594368 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.558203068 seconds)
    (54/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.69287227 seconds)
    (55/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.754155679 seconds)
    (56/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.048664498 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.34297978 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.331149102 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.361341015 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.345531962 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.398060957 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.333744244 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.955581925 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.164552337 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.825146444 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.355557926 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.526034917 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.318329904 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.070281587 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 5.5827824 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.851889559 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.316201846 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.431873065 seconds)
    (74/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.367889035 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.475466459 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.488341193 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.841131808 seconds)
    (78/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.98086599 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.360452314 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.939739277 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.351348683 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.971551707 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438290488 seconds)
    (84/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.061427916 seconds)
    (85/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.763447642 seconds)
    (86/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.744067612 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.324715175 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.355178922 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.995552408 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.384021766 seconds)
    (91/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.763839304 seconds)
    (92/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.640438507 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.27634861 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.14121516 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.433133461 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.286600282 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.395937361 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.365832624 seconds)
    (99/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.881368795 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.34585245 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.332755927 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.35271302 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.755554437 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.573972872 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.97350675 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.316645068 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.441736959 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.332692592 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.400799153 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.047951533 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.37781139 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.333895241 seconds)
    (113/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.035853284 seconds)
    (114/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.318765864 seconds)
    (115/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.629857797 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.729993171 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.773128755 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.876942074 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.054059651 seconds)
    (120/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.181247194 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.856216198 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.361208432 seconds)
    (123/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44508562 seconds)
    (124/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.781257591 seconds)
    (125/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.374220275 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595081506 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.271116205 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.679613735 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.332215398 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.368122634 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.223736695 seconds)
    (132/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.67792947 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.7626143 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.182107661 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.614835333 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.345978827 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362123431 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.351041368 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.752964472 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.821142388 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.380831005 seconds)
    (142/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.784246242 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.066375552 seconds)
    (144/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.206550857 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.979005469 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.33566274 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.443568741 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.399855367 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.406222436 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.445012211 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.170950176 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.363044713 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.226260772 seconds)
    (154/309) benchmarking ("sort", Float32, false)...
    done (took 5.383520739 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.408730578 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.38083699 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359965918 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.369747521 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.34622625 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360247421 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.333552742 seconds)
    (162/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.037011091 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.040043716 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.437563256 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.347770645 seconds)
    (166/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.319286087 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.364177982 seconds)
    (168/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.399661454 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.398102524 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.889013885 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.562090995 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.080096584 seconds)
    (173/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.25903335 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.41950402 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.704683213 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.384795269 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.371334762 seconds)
    (178/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.739951038 seconds)
    (179/309) benchmarking ("sort", Int8, false)...
    done (took 4.364365161 seconds)
    (180/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.638574406 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.921405122 seconds)
    (182/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.362853902 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.921107699 seconds)
    (184/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.531946695 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.918065218 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.354416976 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36390518 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.318910709 seconds)
    (189/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.442344504 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.787010984 seconds)
    (191/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.363395316 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.452408583 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.478078549 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.349493552 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.38094991 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.761481387 seconds)
    (197/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.550081272 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.321127212 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.15004091 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.424836185 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.672313836 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.420874729 seconds)
    (203/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.264661215 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321920232 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.396363196 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.03945756 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.336116431 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.335988119 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.320672301 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.300149037 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.936494859 seconds)
    (212/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.633579333 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.743182198 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.005939758 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.550162654 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.335143943 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.707694964 seconds)
    (218/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.100462763 seconds)
    (219/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.508124103 seconds)
    (220/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.337179458 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.403956967 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.766413681 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.894422364 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.801711513 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.364051388 seconds)
    (226/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.323758769 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.030864632 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.330081551 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.630989798 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.383191397 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.381059067 seconds)
    (232/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.639587174 seconds)
    (233/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.786571752 seconds)
    (234/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.749347567 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.337509306 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.322907837 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.47055443 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.409263694 seconds)
    (239/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.343318089 seconds)
    (240/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.722002455 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.341125219 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.350773021 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.38153826 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.363936329 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.340733345 seconds)
    (246/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.388905408 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.862061244 seconds)
    (248/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.640640116 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.368642868 seconds)
    (250/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.19733089 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.64193206 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.420105521 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.777886864 seconds)
    (254/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.176206982 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.059582415 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.081617463 seconds)
    (257/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.441806963 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.947048233 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.474128187 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.565869198 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.479922773 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.183359301 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.319642347 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369069362 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.945355939 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.477916213 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.881085572 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.782108894 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.729954931 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.178323287 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.296764151 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.340066674 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.999519571 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.823598274 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.412788293 seconds)
    (276/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.916257027 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.234540491 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.437678818 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.947885462 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.956339667 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.447024263 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.340331341 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.371469014 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.093208768 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.427227797 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.340258687 seconds)
    (287/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.074533888 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.464947096 seconds)
    (289/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369028805 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.850125674 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.17818152 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.340607635 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.300436666 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.454256671 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.933759832 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.582497128 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38648101 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.353270468 seconds)
    (299/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.723674355 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.430078628 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.728939096 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.449887233 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.257797354 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.366925346 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.781575589 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.618534834 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.335881546 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.148875895 seconds)
    (309/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.342331597 seconds)
  done (took 939.431896004 seconds)
done (took 940.698137516 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.374333591 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367602867 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.352074306 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373771469 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.463449664 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.380223112 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.362803869 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.354725312 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.400308867 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40336415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.350725885 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.381124624 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.354680001 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.351962882 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.353031137 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366788884 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.498406726 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.352610461 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.369928728 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.362541107 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.369014432 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351008001 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.402455277 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.379100542 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.3567244 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.355754923 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.355474944 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372071206 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463874614 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.356457514 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.357299592 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365014476 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.499267514 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.351228547 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.348579851 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.372531032 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364079501 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.363288619 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357809057 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385108518 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.943420281 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.352922696 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.355386136 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.355156072 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35567497 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.358055176 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355685185 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.359703525 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366688916 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368341157 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.932009277 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.368850645 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35711811 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.356169743 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36549333 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354309539 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.358429036 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370909578 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.373210033 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371091815 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.489328919 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359725137 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.356898947 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371245863 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363304898 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.970950939 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350945055 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.358659188 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.948056504 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.359959799 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.975820121 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364036444 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.357363253 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.369415693 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.386273447 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.506815773 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.352138687 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.355550152 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.364050915 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.354875009 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365789946 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369021868 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.361774115 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.358262341 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370128861 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.384841846 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.365924104 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.357755997 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.365997051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.375178137 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.364028214 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.367132391 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.359667347 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.351560891 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.366681002 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360534111 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.359737991 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.359590943 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.362011204 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.368102466 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.94995173 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374062968 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.353375451 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.354134217 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.356591117 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371727499 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.953054631 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.357949044 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.379961914 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.405008349 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.359929052 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.495197061 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.362635454 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374305481 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.366858455 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.361520165 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354309314 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.495289185 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.945667223 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.372495316 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.359843235 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357159436 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37471 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.360632603 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.355676682 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.510766737 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.360613243 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372019119 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479498856 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.369239137 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.390027112 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.356416211 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.362342319 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.387262582 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373666832 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.38992682 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.362383438 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374892919 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.375965978 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.356198175 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.370702274 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.370787101 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360621627 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366498401 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354207466 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.392114998 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372218806 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372307702 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.381257683 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.481134216 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357619372 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.497567661 seconds)
done (took 231.025678209 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.423185868 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.356839035 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.43958846 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359964493 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.457875457 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470492888 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356678364 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.357301938 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.356618932 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.732589203 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.356995242 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35783496 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.350473639 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357131962 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.437898626 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.359842485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.356789282 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.696701559 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.357861247 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.427668294 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.34949494 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.356337642 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359603179 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.736601696 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.356861457 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.3548341 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432854641 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.360616379 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.701963266 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.353266495 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.356942886 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.702404462 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452819192 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.37819337 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371719073 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367704122 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470981906 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.381709993 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.450678139 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.438144617 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448718256 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.395757049 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.353735862 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.356183284 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363396709 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.36005544 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359965409 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.388473471 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.358314755 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.358958925 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.698320158 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371740004 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.368223414 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.36070749 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.358983076 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.378930101 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.358957508 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.360794939 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447910477 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.360434463 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.429237955 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.738131284 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.735941269 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.361760766 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.360211065 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360895986 seconds)
  done (took 150.190199887 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.425299784 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433304952 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479285744 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.360102355 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.41022405 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.482372983 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.362054845 seconds)
  done (took 11.243551769 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.365293843 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363296989 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.412746461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.410956265 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.360449152 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.5081887 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363928637 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371170913 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361218639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.421791996 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.361473409 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364666984 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.371032657 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.358475434 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410557038 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.37192551 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476094744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362326627 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361254299 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512002469 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362290496 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.371733238 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413528819 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37237777 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.362898548 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.366389867 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947338313 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361502919 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361940996 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.36380833 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36224999 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.399928721 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365266486 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.36237956 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362058465 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478120504 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.362319959 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3623651 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.365096058 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.361725745 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.365669852 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364795601 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365844427 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.362929718 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365076719 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.385521931 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366269556 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.364642927 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.365438909 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365835274 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.4191284 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.365618355 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.363314456 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36222026 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.427146915 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371850328 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36316977 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.363901922 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.36744624 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363936008 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.513599504 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412017192 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.366558998 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411848877 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366568307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36663611 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.365255447 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366569154 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422826302 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.366775411 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412600874 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.36442436 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535568876 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.386221938 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368069419 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.366589609 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.366411186 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363911213 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.362378852 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369046265 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.364042656 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.364388635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37013382 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365365823 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364401775 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.47015064 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472392011 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.365462118 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.376608352 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370117008 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.365657919 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.423263003 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.367297867 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.364924108 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422697196 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.479514176 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.418645907 seconds)
  done (took 156.268622223 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.370185006 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.374479777 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.364936505 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38046979 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364067403 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.365401286 seconds)
  done (took 9.515391184 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.367497305 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.371096356 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.368178369 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.368919726 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365533702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.366008917 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.366387543 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368164631 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.369540018 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369555715 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.365804776 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.366006005 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.366409528 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.367171672 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.366730441 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.369237213 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.366649266 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365920866 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370053983 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366909575 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.471585307 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.367165098 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366709108 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36809734 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.372368408 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369176617 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.374063947 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.368207789 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371058655 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374348856 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.369793862 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366876406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.367535812 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373265239 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.371270275 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.368343035 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374556344 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.369187332 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368935539 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.368244519 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36786586 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368109602 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.370274779 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.368905933 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369668492 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372944592 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372625028 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37393247 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.36785653 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.368649643 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.369669337 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.37065236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368265968 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.369193629 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.369623223 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372190515 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374741474 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368458847 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36799797 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369100569 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.372399428 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.369471692 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370006395 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372975689 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.369220638 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368485292 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.369108773 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373179511 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368751791 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.372451814 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36953368 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.369792896 seconds)
  done (took 100.99914816 seconds)
done (took 429.502378507 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.428552793 seconds)
  done (took 7.728310429 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.630174071 seconds)
  done (took 7.930906377 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.080311481 seconds)
  done (took 24.386117523 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.399013996 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.436126437 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.370973713 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.364942494 seconds)
  done (took 26.872014968 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.611554907 seconds)
  done (took 7.91128647 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.364419744 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.36460818 seconds)
  done (took 14.030369729 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.540142736 seconds)
  done (took 7.839831302 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.363136804 seconds)
  done (took 7.66812541 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.385826131 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.388010414 seconds)
  done (took 14.08491701 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.34703848 seconds)
  done (took 7.647770481 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.650818008 seconds)
  done (took 8.95048018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.37773325 seconds)
  done (took 7.679395204 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.440875627 seconds)
  done (took 7.741668851 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.257071898 seconds)
  done (took 10.556655684 seconds)
done (took 162.324047668 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.361847875 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.364882388 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.365076517 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.362567124 seconds)
  done (took 26.75488308 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.865933087 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406478336 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408613258 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.416905672 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409608629 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.407873304 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.398864469 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398977824 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.416407879 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.410000532 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.407927532 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409088847 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.408129149 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.398806576 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.410026388 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408208442 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.418760878 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40679383 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.398270149 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410169383 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373667752 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.418607735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.410109334 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.374446197 seconds)
  done (took 35.495012445 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.894503987 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.441593721 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530677509 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428115746 seconds)
  done (took 7.596235896 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425986764 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427995206 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441226589 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.479085236 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505503119 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.444332487 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.400584625 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.396070495 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.382357614 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.428716142 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.502281437 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443912627 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.514742767 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.373821928 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.556033516 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.374778993 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.373990565 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.428094477 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.479503256 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.493419703 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.37454757 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.427590179 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43042011 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.445860323 seconds)
  done (took 35.853946264 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.387887861 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382994669 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374635134 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373699912 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.396137627 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.373569909 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.374542442 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375904454 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.375160561 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.380734733 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.373958317 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.387316871 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.373853742 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374204577 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.379763325 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.375718792 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.380169916 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.374982251 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.374797973 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.379530833 seconds)
  done (took 28.874194172 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.365310624 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.304384854 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.717400766 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621895947 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.365328263 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.367601344 seconds)
  done (took 29.046173987 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.45365894 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.599171821 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.373013884 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.778872861 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.852747667 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.373981669 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372739621 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.641601138 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.992201582 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.006726751 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437854352 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44766552 seconds)
  done (took 20.635963825 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.378801643 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.366378819 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.376480697 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383384491 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.435818571 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.377824039 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.380442557 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.367237621 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438715142 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441623009 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.377019829 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.437496154 seconds)
  done (took 38.066814764 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457772531 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419213264 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.420105435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288131468 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096446426 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583667979 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292150133 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847720579 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.37522309 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645519565 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375814817 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461227642 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630619736 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379478165 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372143138 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.452353283 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598738464 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939555021 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375079499 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.754340128 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398705899 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381989052 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.868426388 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403269034 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584429271 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354560974 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.633474272 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.147889917 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695089985 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384124595 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38316713 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372286634 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646829073 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062929405 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468211937 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384495015 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322128812 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.921192634 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.371213958 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.804441951 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396437009 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376151074 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384280295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375852731 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308546724 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389306631 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864906209 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379717821 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.086791914 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375443902 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385855996 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468327188 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.376953871 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.947923196 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558355801 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380752954 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.373059727 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377584957 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943164992 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229958307 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377153518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.310385486 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.936888978 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.802410066 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119493487 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.479334966 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.37785059 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378551844 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309211788 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.851814611 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395016816 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513651561 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401172574 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036816532 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176040948 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386852375 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307079653 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007969832 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383090946 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.311129209 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605183795 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154973044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315172605 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.323975136 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31023956 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174273119 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384148804 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.824462835 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378766265 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.853244692 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.387017252 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393477787 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400308662 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601340557 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.256726043 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376977025 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.378197396 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493072497 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397760057 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861374841 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31195156 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381196672 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63521226 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.589254247 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383803116 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.453884068 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613541309 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381161868 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.391647248 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381403476 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.388104102 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.064933811 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39212034 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241421179 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392923259 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15576891 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20741499 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378199431 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.480514323 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376817473 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648740509 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.2386147 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27620217 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446560653 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383016896 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378265071 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.892043424 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230152592 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.537945052 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.376530113 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391162139 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.387523748 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.376002088 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339764086 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.385302849 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389494151 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.159113339 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603665687 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392457895 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65334673 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312941385 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516975759 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39645355 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.602657911 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.692189067 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.378678794 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640644562 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389814328 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379270985 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391138273 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397404978 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475827711 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400285209 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.393590061 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637366705 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.382840388 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.382714034 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.875223754 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.157440661 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382124747 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385608501 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355286 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070541553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350816108 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383396716 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273260764 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392712564 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447401891 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386026622 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.391686662 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.442223007 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420604977 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385265476 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.377998769 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605226426 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39196454 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.855864148 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46220592 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.612594898 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073694715 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396905599 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.31552977 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.091945334 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.073290374 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381341959 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.57222589 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381617658 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389972773 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391652336 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.109521504 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.076582158 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386416916 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.781285254 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.387598 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392146193 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.387116342 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381068777 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.414148092 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25392069 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396107423 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.392193703 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525469277 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.39492301 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317563172 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.899822801 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388397812 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383338192 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.157652175 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418037781 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.829148932 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901402651 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644332475 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.297435244 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3932556 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.89576872 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416342047 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.391801122 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382091764 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390274032 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.383415515 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391382444 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.39350305 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.84181097 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.83199277 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947526232 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201243821 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030674655 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394136951 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.391429451 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.265432201 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870334596 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318299523 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.043715472 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597155708 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867122016 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340332142 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619052016 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.706446993 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237850202 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395323436 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614728482 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387079123 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.402033953 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395343905 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594328918 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418740788 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391873678 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3141837 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.667977314 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676167946 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3968566 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464682994 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869162526 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384662649 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164238933 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.380714865 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.803003749 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575967362 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.933466171 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.7823838 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386274399 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396888642 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89522671 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387249628 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916161448 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114760483 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402307963 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.620433848 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326589209 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395485751 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.397042135 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.38310224 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.916895916 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.388317842 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.642948406 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396707442 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321434976 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385053487 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020993042 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.242761634 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392098226 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386178795 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231428783 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386154956 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712134461 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.39420892 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.402296289 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390298822 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322186595 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322465079 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.081269451 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396221974 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356318911 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973304535 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.896025776 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.55425547 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420922085 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238900416 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646035363 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.402666967 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085553379 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617390115 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.411509773 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410111027 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.487589806 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404789229 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369539321 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285712984 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623292543 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363521819 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612210619 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.416380382 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.290588561 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382678598 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599420265 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.284353173 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397175424 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660946707 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.097626185 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.396128283 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195492073 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413455937 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389783628 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407102203 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.952982786 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392450422 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45859096 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398796219 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.398757632 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399821648 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581136395 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393035363 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39045844 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.402984845 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482988149 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.282527889 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.409713307 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.163280439 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092800348 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216120202 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089381122 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403227876 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389418425 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398623463 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325567939 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537857446 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91819878 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664116354 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511594051 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.032502415 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412225109 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397885594 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393988863 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606649977 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665767918 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267098343 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393451987 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05530614 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.273115593 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400988896 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.60214917 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97966633 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043032165 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514080521 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397020207 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.879208954 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664062625 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.482239447 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391282064 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985614973 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.408342269 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.821190675 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.395427254 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399257691 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538877003 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400684753 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096459617 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.400723038 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.54647842 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.164211319 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.872371123 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653562902 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.982148606 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.403411343 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09475742 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.233616504 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664277655 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462251901 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402786586 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.49865666 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538297715 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.388360973 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277992738 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392213421 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239761141 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.102193503 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401773814 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101484493 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663389552 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.390558601 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.391595581 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415095422 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402307418 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616828432 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201064922 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617448374 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403609844 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402175719 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.966188127 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096635786 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406263462 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327720499 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.397667179 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664536389 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629262629 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417706531 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846037096 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.104372718 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031444373 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.369889748 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414149044 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40328273 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23589595 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097638533 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.427494069 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966298037 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.056684442 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396293585 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671319127 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.398754327 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41045529 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673660951 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.397515961 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411176346 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408810715 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.09667694 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272231932 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.415212589 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.832899267 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.331482693 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622113639 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171950227 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332094908 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397844521 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.596791747 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394717458 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516530724 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405641281 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.408503512 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395181762 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.150765162 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683522952 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401541928 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.392945639 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.384792066 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413035723 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40155129 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691010415 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400018357 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070110556 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.747854681 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653375639 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402847837 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.380501468 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.399826385 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395568259 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121913401 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373702916 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.140212117 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05712894 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.410571135 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.41105108 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399833429 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.613116951 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609695709 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397648409 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40827401 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410450645 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415235269 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.296536433 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.169761668 seconds)
  done (took 1627.139426059 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408947342 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.315960548 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.305851566 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.361267589 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.327094565 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.298576691 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.294434547 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.300831327 seconds)
  done (took 51.943366352 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.285701516 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.429263616 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.306564891 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.28396932 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.283060323 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.278931513 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.781865267 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.289857578 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.283295154 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.283143139 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.290855334 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.27362637 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.99864276 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.283226007 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.284132401 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.277264401 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.282224462 seconds)
  done (took 64.419059131 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.288866667 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.728599483 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.303400356 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.282830441 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.535471726 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.282741357 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.580590614 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.349178443 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.285942195 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.539867337 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.95599092 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.322800057 seconds)
  done (took 79.675659225 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.282596971 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.282310112 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.282561527 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.283273404 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.282728643 seconds)
  done (took 7.632145284 seconds)
done (took 2054.432566556 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.520969418 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.070913409 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.948661032 seconds)
  done (took 5.237712063 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.423652185 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.474234017 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.594557817 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.61870719 seconds)
  done (took 7.33081079 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.551304584 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.656230429 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.465838933 seconds)
  done (took 5.892546721 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.870518594 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.289335459 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.399655703 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.283539208 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.28553537 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.284539339 seconds)
  done (took 20.073404747 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.287024996 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.290070295 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.287191205 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.290380986 seconds)
  done (took 6.375888025 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.263229798 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.978518932 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.261354811 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.277318621 seconds)
  done (took 18.001085336 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.027448645 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046717561 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.030567478 seconds)
  done (took 7.324905478 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.281233254 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.117419496 seconds)
  done (took 9.618965564 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.590542971 seconds)
  done (took 2.810930464 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.41905959 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.614507173 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.497859745 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.378584532 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.512978583 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.604375579 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.133704385 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.656099259 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.344781425 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.787237156 seconds)
  done (took 29.170108589 seconds)
done (took 125.129739042 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.432130786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.588129407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.333590145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.355122452 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.348919329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.333956992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.539071489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.3135695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.941510041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.935860979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.357976142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.350014578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.487811544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.589360171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.487366115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.599071594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.351942154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.461262839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.888072462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.98360982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.539965661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.070777128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.191378962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.083902267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.355955722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.28806435 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.543378257 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.593198218 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.062473221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.548505925 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.287943985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.153156153 seconds)
  done (took 191.619536027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.285185536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.291895984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.27975335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.291928786 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.278991407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.278612405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.279055446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.279746055 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.2925426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.278736793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.279036429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.296487187 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.280823289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.305883308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.279009978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.296542977 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.287266469 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.278508205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.295819009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.278846516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.280612699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.279086514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.27927807 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.279919469 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.279942893 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.280501809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.280147861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.280014871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.279716278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.280421439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.281163291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.279945046 seconds)
  done (took 202.298958879 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.293855263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.279789962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.281462131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.292397218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.294188113 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.279366784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.300788799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.280251953 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.280895948 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.280575937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.312561189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.293416869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.282443919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.293967081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.283549963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.280755506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.291689823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.28024671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.284404366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.28057765 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.282698601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.281043541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.28044325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.303350676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.289955726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.281285058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.304194914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.281639765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.29798721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.293567313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.281963943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.297575451 seconds)
  done (took 202.447925016 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.474793249 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.295395169 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.296093663 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.143130138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.296428048 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.295041566 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.197228444 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.485775678 seconds)
  done (took 13.708571703 seconds)
done (took 611.290172676 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.685577659 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.390590269 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.500041034 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.316630806 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.14849475 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.309087782 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.31747256 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.499222924 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.246329697 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.505243326 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.627253372 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.304510103 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.769721339 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.313159296 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.581546925 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.419122294 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.218409774 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.341159485 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.645648618 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.898262818 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.586161734 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.829535317 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.497554184 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.242022615 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.765549725 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.821430097 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.06757578 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.224007063 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.315084215 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.651590146 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.079916423 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.310644433 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.377307471 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.356063317 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.417731673 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.400656341 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.304307528 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.354744672 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.497500205 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.588118339 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.912965588 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.060332286 seconds)
  done (took 90.925552362 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.279003903 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.279320532 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.278889808 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.279521105 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.280868339 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.279499811 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.279438593 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.278908315 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.279539101 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.279738062 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.279388164 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.280906494 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.279462372 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.281145124 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.279264466 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.279433141 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.280487612 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.282109762 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.279616179 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.279689246 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.28056746 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.279256766 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.281041784 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.281336578 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.282988877 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.282453038 seconds)
  done (took 34.513096916 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.299745022 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.558614868 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.731305264 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.29861756 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.293258192 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.2971779 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.378251307 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.301313002 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.296119572 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.29582205 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.470267407 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.30035022 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.325868 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.755430601 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.293695462 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.298553031 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.298710659 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.291679741 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.564327775 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.300710051 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.399458363 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.299188545 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.377740973 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.301061999 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.314051119 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.292488393 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.296560058 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.85837248 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.293961266 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.467677909 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.293181027 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.375376818 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.812152686 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.741234419 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.238303091 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.304240276 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.299730117 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.472499744 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.294668727 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.292434743 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.378383373 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.293331753 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.739912846 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.945411173 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.312563097 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.299911502 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.873176148 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.472848487 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.570375604 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.301240315 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.765029106 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.296860408 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.301376463 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.295100384 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.570363986 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.30071563 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.292920223 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.898286975 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.317394025 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.379571426 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.301594925 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.294472187 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.569993223 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.29468172 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.558116054 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.296170313 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.301958821 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.294606364 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.743010885 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.299476829 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.971440012 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.315910659 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.303282007 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.471472878 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.561522836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.910728689 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.299968842 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.576481462 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.828920252 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.380986279 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.301350271 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.844563276 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.386268983 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.300982979 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.305861684 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.306171931 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.304910805 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.356625455 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.380647258 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.901937069 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.958600288 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.919680452 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.403893397 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.311145227 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.298279762 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.899560815 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.324509644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.30473624 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.73924841 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967007136 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.317791228 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.305281608 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.961698655 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.319362149 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.385710908 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.304307921 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.755974344 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.299951495 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.359081432 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.305688194 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.304570367 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.302133817 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.384537897 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.302463459 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.306704247 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.942617446 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.501228248 seconds)
  done (took 172.964764874 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.293557535 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.301399446 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.291866932 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.292393701 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.2924303 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.298387732 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.292509855 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.293828305 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.298001236 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.292734208 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.292884198 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.29244577 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.293666891 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.302087304 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.301035013 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.299871378 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.887571934 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.29329987 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.293795781 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.293361044 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.092052934 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.295132569 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.294021674 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.294220544 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.294188634 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.295604888 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.310036624 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.295280471 seconds)
  done (took 150.904379329 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.308092604 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.930285583 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.301387652 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.446683328 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.330233277 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.304989082 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.444571247 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.364478727 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.30221149 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.304808986 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.304684538 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.63458166 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.306937962 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.879194858 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.514269924 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.452437707 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.871999863 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.307464998 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.304102484 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.303917621 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.447327419 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.308566023 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.635951715 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.930310923 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.307324206 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.930535421 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.287596514 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.306278207 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.298069093 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.932445315 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.306101978 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.645464775 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.385086404 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.364923116 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.932664569 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.875327778 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.883954041 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.469910454 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.299541138 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.304291141 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.30433535 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.287768722 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.964454094 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.312042551 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.299818956 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.958754122 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.32921509 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.307876458 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.315500846 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.304956271 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.366102992 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.367308036 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.658008246 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.972898517 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.3962548 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.328153035 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.446828508 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.710778814 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.302521587 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.875871217 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.288704366 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.976215462 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.314595251 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.289684086 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.307527699 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.31279197 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.475263226 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.453889793 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.878934579 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.302873207 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.877086815 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.47563008 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.306787236 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.306830406 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.309301933 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.970157862 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.87995104 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.475815647 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.451254064 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.520738672 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.291300862 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.300683576 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.290838169 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.387074747 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.306774033 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.978303738 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.880916972 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.309987105 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.310614545 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.309872477 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.310242575 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.500449455 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.972960673 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.393003823 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.873870676 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.679058009 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.665107301 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.31392298 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.374221785 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308547099 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.66217218 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.315180555 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.373060892 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.779272887 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.661656905 seconds)
  done (took 158.54330891 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.571353745 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.537313274 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.404715083 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.423737243 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.952333954 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.884460185 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.65488932 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.426510011 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.428351663 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.554865888 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.537765041 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.397985131 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.496663407 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.382031055 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.048002034 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.377891979 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.411268074 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.432708141 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.413638193 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.332952951 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.991991359 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.607329975 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.486610319 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.321952584 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.401405719 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.125829885 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.868683192 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.890757196 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.484402434 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.668429912 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.852786673 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.41798772 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.355557774 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.021708782 seconds)
  done (took 64.4058441 seconds)
done (took 673.475617006 seconds)
SAVING RESULT...
DONE!
