cset: moving following pidspec: 20195
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320708359 seconds)
loading group "string"... done (took 0.542412021 seconds)
loading group "linalg"... done (took 7.433835519 seconds)
loading group "parallel"... done (took 0.170874192 seconds)
loading group "find"... done (took 1.15800239 seconds)
loading group "tuple"... done (took 2.06503527 seconds)
loading group "dates"... done (took 1.307678371 seconds)
loading group "micro"... done (took 0.241340914 seconds)
loading group "io"... done (took 0.968365142 seconds)
loading group "scalar"... done (took 41.373702252 seconds)
loading group "sparse"... done (took 13.451727413 seconds)
loading group "broadcast"... done (took 1.036600456 seconds)
loading group "union"... done (took 14.399356991 seconds)
loading group "simd"... done (took 4.718361617 seconds)
loading group "random"... done (took 9.749271834 seconds)
loading group "problem"... done (took 2.008659662 seconds)
loading group "array"... done (took 22.32965936 seconds)
loading group "misc"... done (took 2.057190273 seconds)
loading group "sort"... done (took 3.410653396 seconds)
loading group "collection"... done (took 19.756826703 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573155223 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157112331 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149479821 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148808234 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.198954668 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143288796 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15834753 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097756877 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.9584142 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181099086 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156845788 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534844714 seconds)
done (took 5.189514729 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.216386894 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094595564 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104624722 seconds)
  done (took 0.873300506 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077876004 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146221839 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094179525 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07887041 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094898672 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078463103 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097132547 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078495919 seconds)
  done (took 1.348439495 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088214974 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097200333 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081320451 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096600921 seconds)
  done (took 1.044620464 seconds)
done (took 4.248005938 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.726203304 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273845664 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.208038094 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.470871485 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19277979 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215238259 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684488185 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.362741223 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252704969 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100776192 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134706371 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392800248 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13657594 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682154596 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089621731 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123905372 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.186456576 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436806563 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082246828 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108545663 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116062498 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140642917 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127152428 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090001125 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183981106 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08435128 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198778925 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110991835 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080357848 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.272046837 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200605675 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69022263 seconds)
  done (took 10.874519204 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111069726 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133316248 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09646412 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137089172 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135407509 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102045643 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085387856 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098044481 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123780653 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178323868 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132885041 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122804138 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09718973 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083160018 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117125473 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248435886 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121291707 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098055933 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101767756 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105278126 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122910164 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114059704 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109647616 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094272606 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168028427 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223742509 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110188312 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12534755 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096056445 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112397029 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142374829 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142222598 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09417351 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080930344 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175381364 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126079894 seconds)
  done (took 5.157817146 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.102361802 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190929371 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121716982 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169989229 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081242046 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143309021 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094999783 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113132937 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258221195 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.171979883 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.494807145 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142013355 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099160685 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098849896 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082412634 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097153598 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.661443477 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1605714 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119077786 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118208301 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10454493 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087088347 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.729402612 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097707321 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081574071 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100320292 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067428215 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165558811 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100351549 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132893512 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.203602114 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124584179 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101075352 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116805101 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20746705 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125090042 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117952561 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098120328 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079181439 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196398794 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091010504 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096009217 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081314546 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123416655 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13531579 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121352757 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100851892 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100233444 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.199246931 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081490998 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116721784 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.95180683 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179927745 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09090244 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09784747 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29083093 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119330632 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099905301 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079236189 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278384627 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191086989 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097999872 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080596077 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09859761 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082761768 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.759080868 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081921995 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.642312383 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084047871 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10848899 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08511265 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095287666 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122761886 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088473559 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104478368 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097463487 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099437762 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100164637 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081697015 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098055938 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083526415 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109974271 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.219821574 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098465771 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082218541 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096413357 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101395214 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130659831 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101687177 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080022818 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134038443 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100985023 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082641235 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137917572 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100676509 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093007487 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102310452 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145003375 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09836023 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.156342432 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079253491 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124261401 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099565922 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113889023 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111056148 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099251502 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.170691917 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079316963 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097536427 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079173603 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099717853 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079766327 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101676876 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083017375 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11425889 seconds)
  done (took 23.718693107 seconds)
done (took 41.53255083 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.329207015 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105696465 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106361274 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10565037 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103359222 seconds)
  done (took 1.50836639 seconds)
done (took 2.242301164 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283801535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173439895 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095178677 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164016108 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092652988 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.16255162 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15792253 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093902278 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217104057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0940987 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16043954 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07715133 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093642316 seconds)
  done (took 2.623146839 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094049368 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113712164 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083496927 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111832842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078182037 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111700706 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094614387 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118406895 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111234385 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087263567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095077771 seconds)
  done (took 1.828203887 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094310232 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11231386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083035035 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1108674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078701268 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112944083 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095008549 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117895865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111918874 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087941364 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094941581 seconds)
  done (took 1.826383685 seconds)
done (took 6.999159105 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091441808 seconds)
  done (took 0.813845657 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.923521906 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.593085062 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112874133 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150479751 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.318549478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.174399249 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.478798032 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129253835 seconds)
  done (took 10.811015692 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.143189361 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085128665 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103219379 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082663573 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099917971 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083807875 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097135025 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101823103 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082917816 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098517257 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084177149 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101034247 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098019427 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082970398 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101535885 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083014149 seconds)
  done (took 2.322168963 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117750307 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117496315 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106251952 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106045251 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085967466 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104389116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104691071 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088636509 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101382775 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102071768 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08940388 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104680554 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102986999 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078409669 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105823609 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106105877 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085559186 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104873703 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105879673 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090074726 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105430116 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094341867 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087143078 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104669227 seconds)
  done (took 3.237613683 seconds)
done (took 17.912293837 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157315592 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10769651 seconds)
  done (took 0.997485729 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095174328 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111673123 seconds)
  done (took 0.945315874 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097292733 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09468839 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120323527 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108501789 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081362793 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095485512 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118366108 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079755811 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095143885 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095352862 seconds)
  done (took 1.727966941 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08256961 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107949801 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099493708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094413116 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103620525 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093637774 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087755304 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098449318 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109352173 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077109991 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101792595 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113309872 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084691142 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11581633 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103721258 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098142673 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084783727 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097900378 seconds)
  done (took 2.492398284 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079228082 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09620817 seconds)
  done (took 0.915364731 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080976871 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09345229 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080703461 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097145847 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092789609 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076068202 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093965315 seconds)
  done (took 1.354732655 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.434272849 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135118614 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259635613 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100168899 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101989275 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295109663 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096641693 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084256007 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101516489 seconds)
  done (took 2.4044591 seconds)
done (took 11.57573605 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093293777 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114164249 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111893503 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.452625429 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106843282 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095908099 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146169461 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244151352 seconds)
done (took 2.115118394 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143138008 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.563065445 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.419885674 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229458894 seconds)
  done (took 1.963069126 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.399341876 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097716956 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081463985 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079610948 seconds)
  done (took 1.412264846 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079227458 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098843703 seconds)
  done (took 0.932133866 seconds)
done (took 5.202369625 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080299547 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09812523 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077354174 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096227217 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111620496 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09582532 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078187891 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097417341 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096607221 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080231246 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096541408 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080165948 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09600542 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077920623 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094247055 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079787996 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093081395 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077310251 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093767313 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078137429 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096654879 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079817649 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094429368 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077135507 seconds)
  done (took 2.914268931 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099940355 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097685373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102443402 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085348056 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102245516 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086702277 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103057947 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097223273 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086147368 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09996862 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10190001 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085357043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10067651 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084068054 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099539272 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101769352 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086876921 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097044203 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083366013 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100406823 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102789952 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081293025 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101011958 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101827599 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083983656 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103275618 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084428303 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099923442 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105192579 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08632989 seconds)
  done (took 3.607823253 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084802087 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09324979 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077593483 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101093877 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078226438 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096893434 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07794533 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095705752 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078384895 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094404129 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080139124 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093742835 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077197652 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095350363 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079278708 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09767538 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110957918 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079221364 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094094794 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079092293 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098005564 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078592448 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094630442 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077453598 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094737067 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078031464 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094410004 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078212383 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095779761 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077433647 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097522689 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081337159 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09480356 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084401059 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098312982 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094209928 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082258332 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093850198 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078868631 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093744729 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077772844 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094794768 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077731265 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100656111 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078030024 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097563438 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077887344 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096601265 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078795306 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09812571 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077102109 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094382859 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096523826 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080088094 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098874472 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07821262 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095492667 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077590959 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095330292 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077285666 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094680703 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077447722 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096842165 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078730664 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11123253 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085261033 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096568669 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081030536 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098464301 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099491502 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080580553 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109357379 seconds)
  done (took 7.152379337 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.129923931 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12511398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080740081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09716064 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077919782 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095031923 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082358532 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096379613 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096403132 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084004842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095963607 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080252341 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097497053 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095080293 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098087959 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099372958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086858701 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096648078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080590965 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101958644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081320022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101706067 seconds)
  done (took 2.841456869 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207214846 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103826135 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141208029 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106486297 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082923178 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106379327 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101630124 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086273925 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104779462 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08562579 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102723238 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104047968 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084661225 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10226868 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103026251 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086975644 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104785068 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087271454 seconds)
  done (took 2.663409385 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094156237 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098179811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.208892119 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098063434 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098538933 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083253336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105221942 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109665495 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085053411 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.1008717 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092018864 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102881741 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102412012 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08388438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102277056 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083436701 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103267021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083381949 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109093182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106803814 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089037441 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110116207 seconds)
  done (took 3.017646882 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096413362 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10038766 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118463491 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086403814 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098017654 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081592565 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107895309 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083396265 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108475899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102994258 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0836812 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098603345 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090531339 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100591159 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106818897 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083297293 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102307253 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083645162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102996589 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079508048 seconds)
  done (took 2.685217619 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10170608 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10023855 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09968789 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09097107 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100867225 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084044576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112320233 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101589987 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084929551 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126533871 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102127866 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085089647 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11146218 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107656919 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101980168 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093592939 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110241144 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111419284 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084520266 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103060312 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126921125 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085498746 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111195874 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102414096 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085073866 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102103132 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102070652 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090828466 seconds)
  done (took 3.590661093 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082481206 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098068574 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079439517 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09626244 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079435733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097958979 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081244584 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097950799 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08335813 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098039306 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083672253 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101293573 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08296499 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101360168 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083098099 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101389483 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084221595 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098312014 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080637046 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098985808 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084238179 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100841288 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082947575 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098645497 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080270055 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101268091 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08114192 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099299413 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08336749 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099422456 seconds)
  done (took 3.494780317 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090229573 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105720858 seconds)
  done (took 0.969580909 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078626984 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113576796 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079183988 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105781408 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106769415 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083593897 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109745959 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08874296 seconds)
  done (took 1.537517685 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095780784 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109922222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08299925 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113700053 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111843539 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099965048 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174312513 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103593232 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108050346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081914825 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115823914 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082917443 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108553132 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08491441 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107491061 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08973567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099142594 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107930405 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086268172 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100077546 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086030344 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111239415 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10693308 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079913561 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104169381 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093107652 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114614221 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102629198 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085007284 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107507542 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086840753 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094238805 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082989982 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103417102 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081917043 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11166233 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119229734 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086946843 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11093309 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103736051 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095443917 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09725984 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088400125 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108828907 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111690012 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084601554 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103526515 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079993168 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102394264 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086501521 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097627201 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083963218 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097120914 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109554757 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08754806 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113150923 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08251712 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103911188 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086952775 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105990744 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109335285 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085568501 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105014456 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084040932 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112830393 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088483786 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113521482 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098497488 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077636379 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.1006141 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094609129 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126318676 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108790059 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085480432 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103816713 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082107813 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105928044 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102903042 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090876297 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109032809 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084962677 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109271781 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110456567 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084382836 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104722286 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093351288 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10063211 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104111567 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081594384 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119890473 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082896938 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100743052 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081850204 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114044197 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106613438 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084017915 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.100132832 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092502201 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096924221 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084880476 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104359221 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0845567 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11446737 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108828955 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109050862 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094265746 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110545716 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083790804 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106194033 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080788496 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10410623 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085898285 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109683447 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097249126 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086651015 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103462643 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085544708 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112421208 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082321242 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103569875 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11012411 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090452396 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100737286 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081942289 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105424145 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08464247 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106424321 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111717959 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082951465 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098197659 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08005243 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106347505 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084790721 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10663835 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108412371 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087293636 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096970021 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082210805 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107923979 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113055579 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084911618 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103973819 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091482382 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104285821 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084085874 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109286879 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105881818 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083255151 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108392341 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08641818 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098522803 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088997291 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105764419 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101162178 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088791444 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107465875 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087016405 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103969192 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083407263 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109561869 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104454646 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083137686 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102709532 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08328441 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114182471 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085769167 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098269143 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099388056 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093129464 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100270517 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084756701 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102162095 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087044954 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103993178 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08305392 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102976782 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105374868 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096918875 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10912686 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10521435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089662167 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115738343 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085121933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105648823 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084201806 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104833996 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104517011 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093699617 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108710548 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090779529 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10590675 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099243326 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090458719 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11135744 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084060081 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100682658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083446243 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107682384 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108982316 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089080964 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104788822 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082797476 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103801263 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088863001 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106090828 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102411699 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083275149 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108887841 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083585231 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110695977 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104190462 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095470217 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106706684 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080225606 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108056387 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082799161 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111041304 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09881882 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082198243 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103078498 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086682164 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102356052 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088537837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097874085 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092702297 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112133011 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103240725 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084490536 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103162782 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092055837 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104445265 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08946215 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107778156 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110374161 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09594439 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103136895 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089135204 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114951821 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103395958 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079032318 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109211679 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084457258 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102852966 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084417434 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101678359 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088016206 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113593917 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111684173 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079257635 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106612217 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083577499 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102649996 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080831541 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108571481 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106243488 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087298635 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1111605 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086664936 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104532248 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088797657 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104033346 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104592116 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086843104 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106446764 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086260255 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106501996 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084514008 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107403711 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083877603 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101717278 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105656372 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085398666 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103881247 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0909344 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.1039245 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085595563 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106770756 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104524626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085563754 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103629488 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085563918 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10715798 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085810482 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104416932 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088139568 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100217656 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111303 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085149643 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112243024 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085880152 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101105957 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091144215 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107066288 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110611893 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086067208 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104880219 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086588406 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104514038 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088469356 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110703868 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101725682 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096093208 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113848875 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085410935 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108089149 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104569669 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08775497 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103717084 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086498709 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105117786 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08605016 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104738852 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090731976 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107946549 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10395499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087394158 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105239854 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08573638 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105022689 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079783227 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103267988 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085572397 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.1046311 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114993587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08721467 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106857524 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083943446 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105725566 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084878011 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101002372 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112893362 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095321911 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10652867 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111903862 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085056426 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106147478 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097296662 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098663376 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084245343 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103100427 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082780273 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112943883 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106152401 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095691311 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104282622 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085252577 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101550542 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087530071 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11234916 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07996677 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102880283 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108220256 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087765913 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103030519 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086378693 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108388881 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087521569 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117066423 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103873857 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086032806 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104651381 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083090065 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103196345 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084846308 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107981126 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08721228 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102736576 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083935922 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104656782 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104727818 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086844815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105027856 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087594935 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113730386 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084872212 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105598083 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105496354 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078291087 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103858594 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082436869 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101122329 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08233489 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105651515 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086911464 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102795212 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109611897 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083269328 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102241965 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083669401 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100172872 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082836189 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102248442 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101949745 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081994473 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102813639 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092034684 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09960573 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08594993 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100532543 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101946803 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090755419 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102860779 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085593595 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109890636 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103802425 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084222851 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108731223 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086576639 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104610598 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08361393 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103736233 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106931937 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081753477 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107642943 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083936925 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102094129 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084546088 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099411488 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082348621 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101826298 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100070412 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088928899 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103631212 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081371544 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099830665 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081058852 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102525846 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105131056 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091579461 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103641378 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086334705 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097610579 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080284013 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102766437 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080784576 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103421341 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105045784 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089212615 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103478442 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083658782 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100034938 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092640179 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108359944 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104778173 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080968654 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104995228 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084807751 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103836221 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084729563 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101761444 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10344879 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088772307 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103110061 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082927876 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108958667 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08569235 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103764413 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103609635 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084006688 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101510236 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078526461 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103090961 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085059236 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107800682 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086030506 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102811765 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114258089 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083729438 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103670134 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089716901 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104998689 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110797282 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081305301 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103754541 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085161414 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103470696 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07883092 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101097416 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080812634 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10437274 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081673901 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096971816 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112342139 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093610073 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104796211 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082896525 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10112875 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078379812 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098543401 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100818574 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084786247 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102983251 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093920041 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101463914 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083318098 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096824395 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083010526 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104860494 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104779923 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080603086 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09760439 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081803257 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105830364 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.08875592 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101250179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083023954 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10524395 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10369838 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082010079 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105097049 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080592015 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105535353 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115452313 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084514307 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102099537 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089574406 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109952904 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103118718 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078744672 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102716635 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086621701 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101824166 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084196677 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103626963 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118200694 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086264408 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101064096 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082489348 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104483261 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082824826 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111242288 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103468386 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084738403 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105945006 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085227532 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112023671 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105295987 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091877326 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106280874 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087750216 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102349807 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083709246 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100778065 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100431837 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084904398 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102823294 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088206217 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112712843 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104292827 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097775007 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111693009 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087933004 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099581578 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082326787 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101747735 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096699538 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084911114 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101433492 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083202408 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100421936 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082599549 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102411112 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088743388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103659443 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103146337 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084236198 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095860314 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085641903 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104895881 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084767021 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099488426 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084016415 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103620942 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087225377 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107006028 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102862927 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085480744 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103760004 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085160216 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098922863 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094079712 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105384879 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089383685 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105091243 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1049691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087819623 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105326954 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089490579 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10417849 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104521682 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095839769 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106615168 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082016948 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101554809 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092993235 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105049125 seconds)
  done (took 58.725435508 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14514901 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081261241 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097385685 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078471221 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111784908 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098211209 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078793211 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09848705 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080683661 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100848764 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079222255 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097992144 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108461104 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122753301 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092792736 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102985804 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097411284 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080405761 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097988383 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080837745 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109106676 seconds)
  done (took 2.864407148 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103905134 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119663565 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114000289 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119109723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089779832 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113824872 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113718508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114409268 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097970022 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110429414 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117955396 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113963524 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091333129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110045131 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109242586 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092820054 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118369998 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107873892 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115736536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095131049 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112167603 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113919079 seconds)
  done (took 3.217818829 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083492015 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101376601 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084529548 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097079358 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083062294 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097076726 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087920978 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100238986 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086138967 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102717018 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081338939 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101325173 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104068541 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078565439 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10189408 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081676687 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151124121 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105587192 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083427478 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1035789 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098190352 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084809334 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09826687 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080311778 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100946388 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0877294 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104649684 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082269891 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103583896 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082457828 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102414539 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099523613 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084647748 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102453252 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08273769 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101159858 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083736003 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10245827 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07899183 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.09989973 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084555267 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098398524 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083493996 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104884983 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081228262 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100349331 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.103625256 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083327365 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097523797 seconds)
  done (took 5.439361387 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103218707 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160794405 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085983365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142661987 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119699039 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113117221 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087493103 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142595644 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102331558 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085046969 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122698113 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120641497 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102764077 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089689093 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110400254 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104033795 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085838564 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102074863 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107262666 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083794267 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108429511 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.109475226 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099216182 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118107083 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107880499 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08265246 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103535288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107811435 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098088921 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109453066 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107414727 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089684829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120628928 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109027501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102457419 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086729419 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121283757 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104524148 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086897622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100814186 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086433395 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109159349 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110179383 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120803127 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084594787 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108773433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084392497 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10092092 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115707081 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086794334 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113070977 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118892351 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10794804 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084530152 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108793524 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11963249 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08506105 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102074061 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106476334 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097509443 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101400608 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10861555 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099134858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107059575 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111992454 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119134409 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.089585828 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108003659 seconds)
  done (took 8.109441954 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092694758 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109940162 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11853979 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119151274 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090554412 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110562331 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109423923 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090196574 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10983335 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115992279 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110981198 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132687176 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085499761 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114146894 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1102647 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089601709 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109905429 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110368672 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089958349 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11095329 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110842815 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118403696 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090201486 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11907816 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140711987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105074202 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090575642 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110392613 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120397471 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109885474 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12319453 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090256469 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109945649 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119387921 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122073047 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089639671 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103325011 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110219083 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09150254 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110727471 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105346002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120429127 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09153615 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105078926 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109938955 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090932294 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118937822 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121938833 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113951619 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11687752 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091968154 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120277946 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11046722 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09083045 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119747817 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14572757 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119826825 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12116702 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109702409 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119511708 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099691817 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12797675 seconds)
  done (took 7.622287651 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106228378 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114111239 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115862358 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099502524 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083168203 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108167495 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08147021 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101894267 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113546932 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093587647 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116898637 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108219401 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092866731 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116734565 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108483602 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110842504 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08896207 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108442889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113042353 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10775973 seconds)
  done (took 2.925409497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093820346 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122466573 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085030166 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112053254 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107566868 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091160046 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10771949 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107153899 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086467961 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107056018 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095346655 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115813071 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106326835 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090511175 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116398494 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111099458 seconds)
  done (took 2.492172344 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097062362 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116703463 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120069592 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085069433 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104205257 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080056122 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105615911 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099845575 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081091481 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120661163 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084502389 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108722249 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104592039 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082525178 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101377147 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087601335 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100993177 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082603672 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104656838 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11826832 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096523819 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103546355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10591615 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087104073 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10535843 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090161411 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106568594 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102663838 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083886171 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105609293 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084774298 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11270329 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102296257 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083693894 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102311222 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082297698 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104709735 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084799534 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109252243 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104254479 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083599098 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104351771 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085173604 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106403572 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080821146 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105615224 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10082962 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09210295 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102563476 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085643991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105025296 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106233004 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085498791 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11540868 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088344284 seconds)
  done (took 6.232749708 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09865373 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108250371 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08091178 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102939082 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088635577 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107726819 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108825539 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087614187 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106411129 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083048512 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106432201 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089777425 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107848247 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108755655 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087715485 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108496011 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080386201 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106790587 seconds)
  done (took 2.615328967 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090846109 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104802886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092512105 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105725307 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084854315 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108347935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080489518 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10418163 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103125448 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085392251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10554619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087800469 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104194689 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087160243 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105741026 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084636506 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107943879 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103429957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08637061 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101103563 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08775579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103379889 seconds)
  done (took 2.969306684 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118031564 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125082875 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092453722 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229827514 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103786819 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132209072 seconds)
  done (took 1.646742163 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108367547 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120421023 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105565032 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106523665 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114488304 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106874846 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087162388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107545708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117890242 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102081784 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107860399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117257583 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11729606 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097136852 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11430509 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114210612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10792864 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087119933 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106009328 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127825649 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087328886 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117896729 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106848292 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086376489 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107529052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11634304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118054681 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121785091 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087139488 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116692893 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114554619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087590643 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118079038 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12241228 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108817159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096708783 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108686928 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127367176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114481699 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097004554 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109732465 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1151859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117840189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092902645 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117049155 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10732062 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09298763 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108289933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106935284 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135677357 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11507533 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096111995 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11402795 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117783876 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118428391 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13437303 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100722619 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117543998 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11440426 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122462164 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116674082 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094323186 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118064568 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121575514 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114462334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119109897 seconds)
  done (took 8.123567018 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102184958 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125685341 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10766303 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122721954 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096338483 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1080366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10804888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08683548 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107000525 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106759345 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151962197 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08808859 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117300845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117074064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108268511 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087945865 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108186441 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117026327 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087272073 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135148188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107181064 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116970963 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116757072 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09643486 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122338861 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114744948 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107331986 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087949382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107837536 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107823141 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092813918 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1084115 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118063731 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08650532 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117120806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107299799 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108868613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094680242 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107623005 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113893107 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096843895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12890273 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109297687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107584736 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122499925 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088012007 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107549952 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086993234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108984682 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106697966 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121668965 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102378548 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122911805 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116214631 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10745999 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087785275 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107869075 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108680184 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086943705 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115877629 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117547362 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107922219 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134754102 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087925544 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107867947 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117713963 seconds)
  done (took 7.997975837 seconds)
done (took 156.207965013 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.217321664 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198394872 seconds)
  done (took 1.266119682 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087586452 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135701057 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097184649 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168980191 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086114902 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140286553 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139017145 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09698881 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106664106 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085519482 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106375888 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086880097 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171168595 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085405561 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106639859 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107730261 seconds)
  done (took 2.665770717 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113482826 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254724925 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122427332 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104965033 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090234139 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10987655 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084549596 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111061663 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088901494 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104398133 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088297668 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10630616 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083921214 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106886793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109135298 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088179061 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105038531 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087966443 seconds)
  done (took 2.817745738 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112661312 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146318161 seconds)
  done (took 1.118720411 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241684416 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162021539 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227172962 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.467336384 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.267693832 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.355016332 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.198289369 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209248565 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165920073 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.20930656 seconds)
  done (took 3.357495319 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11814964 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179503777 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316314701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155298035 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107194031 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126665804 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156191294 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13046776 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122736924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102138531 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121727018 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118097984 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138675644 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094885744 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114497158 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117360909 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120607966 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113271671 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114729064 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095609968 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138022891 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106101004 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094433894 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113331274 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118802029 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099550707 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105289613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085909766 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116606255 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11480754 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09266971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125445519 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118899865 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154482715 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123774528 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155116276 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11938219 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091569051 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115002248 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111060089 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097057852 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118994988 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124871006 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096651198 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106170114 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097323763 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105776259 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105942739 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094118504 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1189396 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114212681 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092555151 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154404189 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118973609 seconds)
  done (took 7.369737226 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.786852074 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157384085 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091613666 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880742284 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13871428 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104055439 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.772047177 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111687274 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256323366 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75037603 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133594044 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120972946 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205800606 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259022635 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956374031 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292190866 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.638815731 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124634247 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151629422 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153899182 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118330756 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137118351 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10970114 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452656562 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117337679 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112223492 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097143034 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119001289 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160777809 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124297916 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114474731 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178326187 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249138787 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205947845 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094501726 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112708189 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11166825 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168908061 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264636163 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193806789 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180025197 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108494984 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08832086 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122447328 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132356665 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108302519 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163117582 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175211174 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170856968 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115428416 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118807033 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098917291 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121123026 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16391499 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122184445 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320767421 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310311831 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089208412 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121555446 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125542597 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260337149 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101154593 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225481048 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140635754 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213212645 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090342412 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77442636 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168898127 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111312545 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094558842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120172623 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116051362 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121461547 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169495337 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368418108 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124278367 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114770013 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08972823 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253081963 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125266114 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090342975 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161670014 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117540813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121346076 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123714991 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10036321 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190968195 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230498877 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122751817 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098413319 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116162972 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124826211 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094514986 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211164805 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220452469 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183868625 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208704993 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121837685 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163855183 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169886105 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120167263 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17225795 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119939238 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124156203 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100183772 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217305287 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146134061 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124882804 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114484977 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096429242 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148030969 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12764923 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117727563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170607299 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478823388 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190394882 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086666559 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127567241 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119643624 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161538764 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117177728 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236572796 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122969409 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169040242 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120278911 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085947764 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121409656 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162324746 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122099191 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120996507 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122125485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096932921 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258679952 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194667701 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122927791 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243740603 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182734336 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095354113 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19251615 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098786126 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188699941 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098276063 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123549673 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116486603 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7600102 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125120789 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120102066 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09368433 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196455385 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112212578 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123460063 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10240926 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109209211 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780827496 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105643333 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121795063 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12396943 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095734934 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121526267 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117930213 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095421835 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183483628 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227283496 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097201081 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119986769 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12358449 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161261319 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115738275 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103355541 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125120878 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124547146 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100072032 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114939681 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125111647 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171138217 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162542332 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220593323 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.592721387 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089912265 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125156678 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228370424 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111931449 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266647137 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120108117 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223812633 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163659635 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120520713 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306750935 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165947193 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196939941 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128066481 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174500939 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108620264 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097326688 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186737252 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090926941 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118117991 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162702183 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125110268 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122776237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940079532 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111876303 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227013951 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108292007 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171474278 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11613379 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097847239 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294181549 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111895916 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106616583 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186832865 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092743257 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126280272 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.798466303 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103916804 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122383759 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118445547 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220691243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164153937 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119210063 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097265119 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11997336 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162921816 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207454033 seconds)
  done (took 44.028308715 seconds)
done (took 63.480848541 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278042078 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216787795 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268348007 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170495599 seconds)
  done (took 1.894241928 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171227508 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149223193 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122557231 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107185704 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150584928 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085528295 seconds)
  done (took 1.672775184 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361463268 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27468977 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242279654 seconds)
  done (took 1.769548445 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.314337977 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248237482 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474157902 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323810761 seconds)
  done (took 2.344169965 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208553215 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13273329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111498856 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103662005 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196316964 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245777166 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142341902 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20094529 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098837663 seconds)
  done (took 2.372148558 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197713676 seconds)
done (took 11.139902688 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.169700785 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.259386367 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.125542147 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.225069317 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125644967 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126605676 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 0.146525929 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137361308 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114313846 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.173571975 seconds)
    (11/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09922125 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125659162 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.232606081 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096091796 seconds)
    (15/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.193882783 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.148232485 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.189541132 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125745979 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.239954914 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.228158883 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119981009 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113772125 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.210131201 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138380481 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.186437028 seconds)
    (26/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.173481114 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.105917767 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.120897322 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.183343832 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.217314011 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212729489 seconds)
    (32/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.173181332 seconds)
    (33/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.12449381 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.192601702 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.117493759 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.076163461 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117469997 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120352958 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119479384 seconds)
    (40/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125613851 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103663338 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.174707064 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14069608 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.214853682 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115299202 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125179993 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085482433 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.235165928 seconds)
    (49/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121864546 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.153661882 seconds)
    (51/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.230914174 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092758394 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109388447 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093201107 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.188584141 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091061505 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116123539 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112876286 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087521476 seconds)
    (60/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117331124 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095942977 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.149908213 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.182150583 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.177922795 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.22119203 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153703765 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116012567 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166917286 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.220332403 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.243318502 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214246012 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154595739 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117192795 seconds)
    (74/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095523922 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.205067375 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071863577 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.188917387 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120974991 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066158086 seconds)
    (80/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217023724 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.110425588 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085706549 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119654737 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177268561 seconds)
    (85/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.162485937 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105271307 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087247909 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.140507171 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112985329 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090591634 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178361616 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.155699405 seconds)
    (93/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.155078612 seconds)
    (94/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.114811546 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113622267 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077334699 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.182051257 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118074387 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148791802 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122173832 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.151177637 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119598009 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.148021123 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.140068524 seconds)
    (105/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096043277 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175974636 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155004655 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116223451 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108104678 seconds)
    (110/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.125161782 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110189714 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076676655 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065825638 seconds)
    (114/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135647313 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117244758 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189996457 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194009618 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.184002862 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110144066 seconds)
    (120/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077304256 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.124714002 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124668844 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.284360852 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109869228 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11580508 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139562706 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.168464588 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086018781 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.13213963 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.180752372 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.11780531 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110480532 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117289247 seconds)
    (134/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.181588809 seconds)
    (135/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.120653056 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089935132 seconds)
    (137/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087031633 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114859201 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089217547 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109257511 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092469284 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204551489 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220512664 seconds)
    (144/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174467577 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067182602 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101424834 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224280647 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094826633 seconds)
    (149/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.089896503 seconds)
    (150/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066465617 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109346296 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065659414 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131156646 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110465451 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.104158041 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.152923462 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194888613 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109084445 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093897613 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065609116 seconds)
    (161/309) benchmarking ("sort", Float32, false)...
    done (took 0.17272389 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211917189 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11049227 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097550353 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089716011 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116443244 seconds)
    (167/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090724039 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076750978 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117939685 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111875379 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109412434 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.074917148 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118490242 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.075960449 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129226635 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087401675 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118224349 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154752922 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.166898379 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188788224 seconds)
    (181/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11107762 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066773344 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094528278 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100960992 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136694904 seconds)
    (186/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091960411 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.107156739 seconds)
    (188/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088210255 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.131310523 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178752169 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113936818 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117249933 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.147029897 seconds)
    (194/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083890373 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066991674 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120802669 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.114858074 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118540499 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087050289 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189814625 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123668099 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06604132 seconds)
    (203/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099341875 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066457024 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085216895 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090352594 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066258395 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119421178 seconds)
    (209/309) benchmarking ("sort", Int8, false)...
    done (took 0.187902531 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065964387 seconds)
    (211/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11671477 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086461428 seconds)
    (213/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.100575659 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097923894 seconds)
    (215/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111697679 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111004024 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119161004 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094502962 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090733054 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067547664 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110040068 seconds)
    (222/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101164608 seconds)
    (223/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.090782386 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06914823 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135823895 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084817469 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067457236 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122244271 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091850264 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109884789 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066187508 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184279713 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068202434 seconds)
    (234/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136433872 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.16290781 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086471535 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089967612 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085417815 seconds)
    (239/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067190837 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101775585 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100210601 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110161978 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110929039 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164831968 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.137331946 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13995452 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110979403 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090592274 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098707284 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092221221 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066413293 seconds)
    (252/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115996865 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077775041 seconds)
    (254/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089515882 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21511542 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119248158 seconds)
    (257/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067536038 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.134049521 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09311144 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11091605 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067634016 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109298283 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109337617 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117063406 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067402466 seconds)
    (266/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109491026 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172402624 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066647596 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110412827 seconds)
    (270/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067876971 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09352106 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119921171 seconds)
    (273/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088625458 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117927668 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09239655 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.163923611 seconds)
    (277/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112230895 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09617809 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111580819 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08688208 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112627004 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066867016 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115750209 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069222037 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134151277 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092875555 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117447081 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094825279 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109192971 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086312649 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109186959 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086398638 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109570874 seconds)
    (294/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089502718 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113269273 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121394739 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066774394 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.137916732 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092078842 seconds)
    (300/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.176085991 seconds)
    (301/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077963176 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067169036 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092269518 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138219066 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093116617 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067530881 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.091082303 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114344903 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09339251 seconds)
  done (took 39.785255885 seconds)
done (took 40.679438095 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099887126 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146824069 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096335219 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136273512 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123760017 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091490256 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118915349 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097874241 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123804223 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125656342 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09789638 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093321354 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096214263 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121069767 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097404341 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137835341 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12427929 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093503154 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119705263 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08613401 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118602429 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086632049 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111851872 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069761167 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121940999 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094996008 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116325408 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120447232 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086671034 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110471989 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090245451 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117605593 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086272198 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124729324 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093215591 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119283744 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120591705 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096893356 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112894176 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087703495 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118801041 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086770327 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11951923 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094576467 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118256431 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093306791 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121427056 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123876852 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115153037 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116363541 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095215875 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121170152 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096000692 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117581732 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090685148 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120361453 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116284434 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115722333 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120282481 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09244023 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118645502 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093994425 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115983973 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119668294 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094950805 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121741388 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098673361 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116940094 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097135502 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116608284 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086881264 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119238474 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115099771 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087113915 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120244276 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097220675 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109718576 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092493957 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118133581 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092979547 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110667956 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090036791 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112951248 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092830212 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11389879 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069455392 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11552752 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092988499 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110563219 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096387746 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11786666 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09351736 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113025569 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122302779 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086261194 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116843466 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087338668 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112228012 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089324691 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114604003 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086472595 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113649491 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.096697494 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112515703 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093779369 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123916246 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086984781 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118572358 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086396656 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111347769 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125884218 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096694268 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111865802 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091623919 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110039249 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.093591869 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111205057 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086180711 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111170077 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086520281 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11814994 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086635015 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11438054 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094948446 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126956525 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087485762 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115119961 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089773308 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111945376 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092205697 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111517965 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087499663 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112833106 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078449243 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114416961 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086968034 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118310336 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089574507 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118927307 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113827711 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096055605 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115905782 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093497767 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117124852 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086360815 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098645817 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092232911 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114261259 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088704601 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111340606 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088992385 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111245453 seconds)
done (took 16.99188829 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087211353 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185867457 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151635619 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143873774 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108110022 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112715524 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122279318 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118703571 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113944504 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144277252 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111221203 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133079814 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148880966 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087536182 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112537775 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091398485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113615214 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103302894 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146273683 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.1340664 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164809044 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087151143 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147898945 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135822947 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121875108 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114311087 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11303816 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091930267 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115653069 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103520219 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132601738 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115779624 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087700679 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134650884 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105035021 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120934356 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087311207 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118770105 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113045929 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087246545 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142954697 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133988708 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092304757 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118311224 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09194023 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114681627 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089397239 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121978593 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122661564 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091630679 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128653264 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157465165 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091062854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123086621 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086334946 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122395644 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12294035 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089675047 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.115803575 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091067441 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112690804 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091613792 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127920322 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143259189 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092488425 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121676812 seconds)
  done (took 8.656050608 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10374133 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14072309 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131042226 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105751003 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112779128 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087944102 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112695476 seconds)
  done (took 1.758386201 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088162405 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135063007 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128757595 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136183943 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132279535 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108711781 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124102716 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088311459 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132761543 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089565299 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134521768 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153713728 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090248028 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121061639 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137961743 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088470758 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138050875 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089029604 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117504345 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137560466 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091106942 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135653008 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090318574 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114065998 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10349506 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114164135 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163206364 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094222928 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11480413 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091517231 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112545967 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16703888 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103504585 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125137276 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113665797 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102848086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129578711 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087078324 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129958864 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09361177 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128657246 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114781647 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090535148 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112254268 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093493446 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125147012 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089644301 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11568689 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091125226 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134325519 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089616769 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127656724 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089182548 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118346416 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11509458 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094778764 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125202971 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089869547 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134095964 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090592512 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13189599 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132933158 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102236242 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131381137 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091304692 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128463467 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128865334 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091097557 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115286045 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092483054 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130515147 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08667261 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11530315 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100130116 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115845327 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137308264 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113109036 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115997165 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099916854 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114113522 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08917628 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115247298 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113380734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118328931 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115139116 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093063581 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117551531 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087713824 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113618183 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092979969 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113838743 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090344581 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117759479 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089603277 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117324863 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106249961 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115895457 seconds)
  done (took 11.867861157 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090002984 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11471946 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092349033 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114914396 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089350898 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115948095 seconds)
  done (took 1.586036303 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113518676 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118802958 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10468667 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120589732 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15719078 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129282414 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104840822 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12420709 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108559474 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127275993 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130541447 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105908118 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135867609 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122722638 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104306809 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121745734 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130080463 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099759517 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127331391 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096678662 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137818111 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122119438 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096865873 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132705071 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119283775 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094659531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127051421 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1029319 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127725255 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123971909 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096349111 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118409657 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120951982 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097532636 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130735039 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095583805 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121250051 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119470421 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101043852 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119178136 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130499191 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096544881 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128914638 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094677728 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123964152 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121861561 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094258824 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125657032 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130044661 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093682181 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120677358 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095592665 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119422639 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118954138 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096794544 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123673917 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095814156 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130387325 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122266167 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0957275 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119662736 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093710064 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123991682 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119465487 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10465253 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120666913 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121918711 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096585395 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123081824 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095926328 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119542118 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118220829 seconds)
  done (took 9.277611696 seconds)
done (took 34.098611051 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684776516 seconds)
  done (took 1.651876942 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.708322145 seconds)
  done (took 1.677353046 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.845825466 seconds)
  done (took 17.818716492 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502391302 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.58202876 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.814337132 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178819756 seconds)
  done (took 3.047418646 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.940619135 seconds)
  done (took 1.930433317 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295454938 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258807568 seconds)
  done (took 1.530169523 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76820603 seconds)
  done (took 1.748422718 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.34754952 seconds)
  done (took 2.323014211 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331560325 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184674587 seconds)
  done (took 1.502020282 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548325367 seconds)
  done (took 1.53366526 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.132570208 seconds)
  done (took 8.125544028 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258974593 seconds)
  done (took 1.260817467 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303641314 seconds)
  done (took 1.29325201 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.52494128 seconds)
  done (took 4.512970311 seconds)
done (took 50.930338825 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098456896 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12770364 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102335464 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124982618 seconds)
  done (took 1.436812899 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10068549 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121651178 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100212906 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120935603 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126437826 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096998417 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123495929 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101282301 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120867726 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096466298 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121441554 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120149428 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09870085 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123176419 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093624595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123397329 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124604811 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096457049 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125004974 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096237334 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11944245 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097960655 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124793991 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119209936 seconds)
  done (took 3.682350704 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100280617 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119526728 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096479234 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11855667 seconds)
  done (took 1.42407797 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100587787 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142213435 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138823212 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099444329 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142982772 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136623468 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091654348 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117194162 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094620082 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125400863 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090456229 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149321369 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137592682 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099540855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127094779 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113657399 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09241782 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137295592 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10084622 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126678321 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093675868 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125032246 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091608977 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139131527 seconds)
  done (took 3.806344914 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157708941 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151279043 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140184086 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095688412 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155777321 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141503143 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09001418 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141635173 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087790717 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130451737 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118604298 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132901944 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128580611 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088058706 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114247676 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087132194 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128636882 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128936572 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090789577 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145622133 seconds)
  done (took 3.457139395 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097374061 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118016433 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088357728 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117216659 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099002534 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121039562 seconds)
  done (took 1.640186969 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090249428 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114728534 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089814418 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114804613 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093807592 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116164259 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088619181 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11492512 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090246646 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115397949 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088633938 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114748712 seconds)
  done (took 2.230659368 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.458869618 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093557182 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121252157 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111697395 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096442027 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115248559 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10415973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119607106 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141387807 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089599385 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115638262 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092084722 seconds)
  done (took 2.660452916 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239367504 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125262724 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292496543 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191727093 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160549392 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173100464 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152753421 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167095969 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.227900697 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158662508 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209911801 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223010315 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126325925 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219595585 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111734434 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143838002 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228474716 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219614542 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155136181 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232504593 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201804291 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166801719 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179286253 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151801853 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139432479 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169501122 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121234996 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104904822 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23660999 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180080928 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217096348 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164285129 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147864047 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242756941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24931156 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19959005 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187300251 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136059433 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146610217 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164485346 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269351454 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13893102 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239794878 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159233123 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105154507 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222375924 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169145212 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176014805 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150532297 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139752012 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198687782 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243163598 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194582979 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138469493 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163596768 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161049029 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167933149 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152447866 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253579571 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19942078 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205495149 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094303549 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145335915 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191180481 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182221275 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167411327 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207221703 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147083782 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194061536 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186623514 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16662031 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219466494 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183413318 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138050742 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169113059 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175314539 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171027208 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257379111 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179391683 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122136896 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169221208 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149204092 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130747176 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167573509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124841715 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241305193 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123821492 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13412226 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163672266 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16186033 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162873365 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199358766 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220677546 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147976792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083913647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157076005 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156041832 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191364316 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140537006 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161324996 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162246779 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130015565 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179472826 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123453789 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176816881 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091982632 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178550037 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209982073 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100435761 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158726044 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153948671 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152074912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180191569 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200586361 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141002725 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133446191 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207161014 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201910889 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.123493558 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204672984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200533554 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144418737 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150006423 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199364347 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248404132 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113992297 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233103223 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157208002 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134718874 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10734042 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179528423 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156174834 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160056435 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13392515 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181625862 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240174092 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098982948 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139009504 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188659239 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134161329 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133022947 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161918949 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148719332 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11128367 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147617383 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151849504 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208840671 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179913677 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153562609 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167014309 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151858857 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250080058 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114698685 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150161271 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149587441 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120710206 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195043075 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19796528 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1315295 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205342231 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.199493744 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128920248 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198477501 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107832009 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17753301 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131157448 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094211739 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221234768 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167451922 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163676823 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19446312 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155167263 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182239105 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20916935 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174167664 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176572316 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164611649 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159830761 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138818121 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158520391 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164833883 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096288974 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144928913 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134391163 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157885581 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143045078 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10701944 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228798948 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172667513 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149666579 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159355583 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149596926 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178905129 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102241167 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205703897 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176603412 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147119022 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196345563 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192084126 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212054407 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116557871 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234146718 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120527363 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099236714 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142821197 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173417409 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133806022 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109154988 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193210036 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178878685 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187186607 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177566563 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164634857 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177605188 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189483409 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122629488 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167737542 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187012581 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176329043 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185708583 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141221738 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124694043 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174985825 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155406716 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256604089 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165459574 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203076777 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208616574 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149386047 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131341861 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151277351 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186324741 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155369308 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176480981 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147196038 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143279312 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160411957 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105813337 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160336833 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213949245 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16353122 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190563266 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151013153 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18596897 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127994637 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165415912 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15826508 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165701811 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108210579 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17678694 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204703857 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148350456 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1705246 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221278955 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105585822 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179300975 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241909169 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195524274 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139167221 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158940276 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159728776 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164820836 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175238915 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177562434 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160641033 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187810231 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157922569 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136645195 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139856554 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149678751 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12490651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133470653 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149308782 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174852343 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140410593 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188496606 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161231424 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157376068 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170416388 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15106723 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145469719 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150667582 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217064805 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174433567 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243562289 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148883751 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179132337 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204394251 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125599382 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132385011 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106342988 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177920851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136689423 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217760398 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120789942 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157531011 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181284756 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220490435 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112011201 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121675873 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156218827 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17586374 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16528241 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152873838 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159713413 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208929108 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143251913 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131928598 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172660686 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128795128 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148397072 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22618974 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080328912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149372115 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101120425 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134178265 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164631456 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235564171 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109748545 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185335591 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168766301 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169337849 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165267831 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149316619 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150218 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166477364 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20178569 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21192963 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104919577 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159340535 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176147338 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222914671 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161913188 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140988966 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206723527 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191766456 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226005689 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114552314 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194576892 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168247505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129151879 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213241458 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134810748 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206691416 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134730646 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19791489 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153257835 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143090077 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177251525 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.149593275 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14239914 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187534099 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172324094 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135632353 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133553593 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167742324 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176202616 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15451567 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127216344 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183883816 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12484676 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192551213 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260645002 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106086806 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153828836 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148150885 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135932441 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156234291 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158821335 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140047563 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139234781 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229992408 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107434652 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218897796 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202254188 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197069435 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175356823 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144641322 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694147191 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104197759 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219880191 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154939332 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207343209 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151007942 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173191613 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160023229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170494284 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195096594 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185710443 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203541171 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221781613 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177317871 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131965657 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159931247 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163056465 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144648739 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153441176 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166303741 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159344489 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124869868 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203456076 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170995766 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133947938 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113115254 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22489655 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128254718 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216789312 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179848236 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110413394 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200295648 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18740502 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134211592 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180966235 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236124905 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114737809 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151264337 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133475388 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156089693 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260089478 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097402542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228246951 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175312971 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157876529 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167184104 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148322707 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189907429 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157409805 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202982658 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118795785 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158684819 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155243916 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138473861 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130145929 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153424575 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166156072 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121067078 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185151258 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137636284 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192316629 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123339218 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14476134 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128725897 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218421682 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214916238 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137985286 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136473344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16300289 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151002141 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174816746 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176776305 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135728224 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108448567 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137404589 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155043191 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112450982 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156529204 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156810905 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166260859 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206888314 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137527254 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279639249 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140141478 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153567073 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089569946 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132391009 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15003608 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119057564 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15659299 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150628783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262463935 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146114718 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106288857 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149158567 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125453021 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108614009 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165902013 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191319236 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176161336 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144923082 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081226873 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159559346 seconds)
  done (took 81.105348066 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161991428 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130918553 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146684093 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202167457 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17651682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270481317 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209893692 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254159967 seconds)
  done (took 2.633559604 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092932429 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145223678 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152532947 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13333417 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09217849 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11961338 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.333313928 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132904188 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091666819 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140629261 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.148006897 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117039427 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.509308951 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117957366 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11864294 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083245261 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116380575 seconds)
  done (took 3.721079379 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.461721195 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.710021028 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.476399011 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124744199 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.081598978 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133083905 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.703926298 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.208096903 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094897419 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48440108 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771234105 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.185438174 seconds)
  done (took 18.518699717 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098107943 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120644795 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107439504 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135591033 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095963867 seconds)
  done (took 1.642727778 seconds)
done (took 128.946882611 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103926623 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403879048 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071628742 seconds)
  done (took 1.596782481 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106861515 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136983701 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109197536 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135902148 seconds)
  done (took 1.583350688 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097378446 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126542141 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108563189 seconds)
  done (took 1.42095009 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323050879 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192396777 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142480386 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105976002 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129416593 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102653513 seconds)
  done (took 1.425798206 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097821333 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128721588 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097682292 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129307616 seconds)
  done (took 1.545847828 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095134126 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070820028 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100997715 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074982627 seconds)
  done (took 1.42932702 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11408008 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131399807 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105066141 seconds)
  done (took 1.444016965 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130171233 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139005882 seconds)
  done (took 1.362605759 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105852115 seconds)
  done (took 1.195565939 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118519376 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170181688 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190857515 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164760893 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227843474 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166215531 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14141781 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114316708 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130438012 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143211622 seconds)
  done (took 2.662235408 seconds)
done (took 17.521515344 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10323656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418343366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412650533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116482072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720683853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380830443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032387024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146930434 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16590746 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09337665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139355597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671604553 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021512765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377863649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982703731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369876033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704020036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092463076 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120111961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093956417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018040896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091578809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121674704 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092553897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703665267 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426858041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094333509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.373973813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092606458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12629941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383077266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123097127 seconds)
  done (took 16.895683098 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094902164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174389924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098623419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137637396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124212652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09416748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124316588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094187445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17930237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122060414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110898966 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121249882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126429424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095184403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1416512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092361708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125532136 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093001593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121356179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121686651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11135917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120692095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095032344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122120936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094735457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135206432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124304787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093008562 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121234383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09899568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128673037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095633061 seconds)
  done (took 4.834428639 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141067777 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184004268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128760518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127361312 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168589865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123828454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20047283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147502013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15537362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123006406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139581124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092644566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156555806 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123865499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114606763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12120887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096368864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121599976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09226035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122762029 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140116839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092415661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123790718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093688921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122681823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135561543 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095673732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121486909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092817898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127173346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099842108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123367647 seconds)
  done (took 5.155318448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097532294 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127050505 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109408703 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138455102 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09558318 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125801271 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097504148 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124136342 seconds)
  done (took 2.01664771 seconds)
done (took 29.994318719 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110458585 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127429485 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106153553 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134220148 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103418124 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131384809 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092321755 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133768061 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133408075 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101912757 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138244305 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092834353 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123465649 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092386729 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136100278 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097656363 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133008895 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102608152 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132937774 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133317753 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093938457 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133604911 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103405324 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134049583 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104700933 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132649064 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13782419 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099833361 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124290886 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094938735 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124929226 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104254151 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125087745 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105756053 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127271422 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098379677 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125016511 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09411147 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133703585 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133753171 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099372058 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133806707 seconds)
  done (took 6.016276181 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107540499 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140599684 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104244746 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081839596 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117570879 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081052808 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138338469 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079709519 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110448248 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10823106 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077067062 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106173904 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07890005 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102629464 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076719778 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075748633 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108967131 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075586689 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076113348 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106580724 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079315785 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07314054 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108771819 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078800063 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104214976 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08140305 seconds)
  done (took 3.586177701 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099976493 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13582495 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11271943 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184064744 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162253404 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099626018 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133002109 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140780201 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108340035 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121229104 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095749545 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149512134 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111102848 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128506531 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092374873 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137570482 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136109706 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093853979 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129174874 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112113099 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138516016 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103638604 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143166037 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133759513 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091678905 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123465866 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096265789 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135127559 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09788039 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131905582 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126157642 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09573366 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123141681 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104805404 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135209837 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095163533 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142019365 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132018745 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101624961 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122167992 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095832567 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122403599 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113186883 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167656529 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121229887 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.099444909 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128997359 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102368409 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121666968 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11072079 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131959167 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091799677 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125032533 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091452784 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12095392 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135711521 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094529298 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124552483 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101894196 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124940554 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105752879 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125599336 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109139685 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121839764 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129964468 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091740081 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122013452 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091291684 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144157728 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093882843 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163903139 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123587655 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094437045 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131746039 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100481276 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127968724 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092867501 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139104737 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102091558 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125585975 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130631527 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096839389 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125068689 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111344565 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12515754 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094409168 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123281049 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099246413 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125266277 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093386333 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136399597 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122450949 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095862689 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138935909 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092748654 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124062199 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099683265 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126960183 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09283957 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134989011 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127868858 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093619562 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132034919 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092380929 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125229478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103584064 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127372482 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091608572 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127557002 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128739247 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094564259 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124072249 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097013074 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123464569 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10353241 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129728608 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098196928 seconds)
  done (took 14.848876409 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227171709 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216602142 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.248917899 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.267481621 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135272464 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146395578 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212081136 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125377566 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123723112 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160791919 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163158822 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187117845 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170133996 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181147682 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110447807 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120962169 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14195569 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134728636 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214789261 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290285883 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141932421 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101991353 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16140349 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160494054 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136723431 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10232587 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140471367 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13337699 seconds)
  done (took 5.786298883 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107508995 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156345573 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.128554515 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.114819849 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149338772 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093284996 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127117576 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.123432401 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.106390834 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136219015 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093642876 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129761699 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.129762728 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.102780847 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123696162 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103491757 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133195366 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094630856 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126130393 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096852783 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129676135 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131641002 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097460174 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122165061 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101322393 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121966912 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086620358 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142423686 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122294518 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115273431 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12097648 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09962896 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133288735 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093625916 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123277251 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094918966 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124533587 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094912793 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12490787 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12131426 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.092591233 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077501684 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122495498 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136020052 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098788531 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109327291 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.100111423 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12871499 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098316857 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121330318 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096749479 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124527307 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096596533 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130103347 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097592804 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129276864 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09667617 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116126159 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100339325 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125418362 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084545994 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121506314 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097763563 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118558428 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102081656 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127296275 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091731181 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125450119 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097801379 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128742391 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12542967 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09661553 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120667516 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096187031 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12749817 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098127181 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127507641 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092586972 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123271968 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094113519 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105536178 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093688919 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07404426 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125868232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121963687 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09295419 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125449971 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099783014 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137835108 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095300556 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129374612 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123585892 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092121875 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126360002 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083260688 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.125895654 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109098042 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142159262 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093498691 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121776877 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137196293 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099163064 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122342107 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076693491 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099642916 seconds)
  done (took 12.962958981 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127419087 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153522797 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095187808 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143391132 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156179427 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158026373 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100354 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130052303 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095549213 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142333342 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093303156 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131477106 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096894456 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137292001 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157540266 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103134931 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125905828 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106951467 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131895484 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17103736 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111963604 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143171232 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13862467 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094053077 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129891679 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110468666 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161775534 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138939807 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107365693 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143240663 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108605915 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161915939 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14391216 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098629087 seconds)
  done (took 5.492429366 seconds)
done (took 49.795862415 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225771706 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.427454967 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.200471709 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.077931303 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.233461696 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.222197554 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.214424765 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202639815 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.760066458 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206183982 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436540573 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.82672016 seconds)
done (took 60.170278182 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.255054469 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.337041953 seconds)
    (2/2) benchmarking "String"...
    done (took 1.469075156 seconds)
  done (took 3.939504925 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.566871799 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.15308981 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.466449295 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.202152553 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.21841141 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495247426 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.832473276 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.550108624 seconds)
  done (took 28.051307772 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.204463634 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.596042769 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.874737909 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.863719894 seconds)
  done (took 18.674361367 seconds)
done (took 60.61909384 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.198085024 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.266078421 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217883432 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.182767539 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314833829 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.233761234 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.468587396 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.419531494 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218235052 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184676862 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.224230297 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203087639 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.221849085 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.47663675 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.209389356 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.221085412 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.274208467 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.656326073 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.611709436 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210657099 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.232207759 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.264257105 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.208188639 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.211975658 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.268696168 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.208010067 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.216846963 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.203607951 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.793126969 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209037356 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.210586387 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.688636713 seconds)
  done (took 191.863795981 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.204515239 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.219058944 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.300011193 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246642848 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.64148768 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406003223 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343601041 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.719127554 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.227291317 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228730461 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.470290522 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.209973096 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.540875546 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.234213923 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.213694665 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.307706298 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.541148673 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.523226454 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.395937337 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.475389427 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.232329353 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.480352543 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.392837603 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.410884911 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.249711741 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.259768625 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.237940364 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.244413141 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399512298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.466742281 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.212187991 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.249569694 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.832781601 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.069790533 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.20663423 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233746484 seconds)
  done (took 150.76466389 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.481306956 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201567025 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201561826 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202809775 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235087557 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20108612 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.77529942 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782395761 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.704393829 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.627791759 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26866042 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.446130827 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200394643 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29475858 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211493285 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.20140866 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216553823 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.241765805 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204364861 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200076669 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761635781 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.215314095 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.345547613 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211627358 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201420648 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231315686 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59026841 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200459436 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231513818 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199700384 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519823638 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247978444 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200523369 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.512948747 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.038932045 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310009455 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202290243 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232065597 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200280561 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470344393 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201553425 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200601321 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201636392 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203798059 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.790002254 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201410408 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.764345693 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204819531 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.105809461 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201035779 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201612267 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.943251612 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.706893956 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.216062644 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.202674922 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203458365 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.202526676 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203779606 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232871284 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.620958475 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302860696 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216963925 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206733347 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232562957 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201740231 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.339333996 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204886027 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.640639853 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270083458 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.414264158 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.739847145 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199825033 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200506367 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294227184 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319923723 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200713931 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200815093 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201447748 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200608506 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.306867069 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.200925237 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.602995612 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206852498 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.202764135 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.262017321 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294927465 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201570838 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.507805356 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201441318 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.201125004 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899261537 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2938508 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201193388 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200478988 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201216285 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.602760609 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.751792994 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.393780032 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205556334 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.633719963 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204370168 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.620750103 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729342746 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.782560077 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201790263 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308421902 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204408191 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201514517 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.201849545 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201482344 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231238345 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216379907 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260050728 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201351926 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.59849243 seconds)
  done (took 345.816191553 seconds)
done (took 691.058520165 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.889632223 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.839009924 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.966811535 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.855945443 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.836776826 seconds)
  done (took 10.520989693 seconds)
done (took 11.65038663 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383759923 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38274411 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259830442 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385682037 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230517837 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400640689 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362956954 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226566772 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302407218 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280075131 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299543665 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254316604 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228491553 seconds)
  done (took 18.130444769 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524253848 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509900901 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270867303 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508781754 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241621511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515172893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426798531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408690221 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410375503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233554487 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215352752 seconds)
  done (took 16.400506153 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507493048 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518659713 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271091548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521471501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244540847 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507372742 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399462428 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414557318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411399709 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235245318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216776585 seconds)
  done (took 16.381998406 seconds)
done (took 52.043523861 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211311227 seconds)
  done (took 2.344928805 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247085133 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.409094875 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.23025931 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.217226969 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214034257 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214283711 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217110511 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213496594 seconds)
  done (took 11.098446223 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211976219 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211969776 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.213118931 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209475924 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209305645 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.212442028 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209385285 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.21325214 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215132591 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209561109 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21204215 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212213717 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210825197 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209630557 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212170056 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210537459 seconds)
  done (took 20.524690979 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211817194 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209428236 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209024222 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210565724 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209664186 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210540496 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21093533 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215246699 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209108786 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209573818 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209747085 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210259147 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21017384 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20940537 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210645743 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.215665315 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209725375 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209084516 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214849907 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209821309 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210640484 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2105962 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210268913 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210616002 seconds)
  done (took 30.197294045 seconds)
done (took 65.297275399 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.259585076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.874213247 seconds)
  done (took 9.269088511 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.211753619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.211426708 seconds)
  done (took 3.559469707 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.211821233 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212534814 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211454395 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211863556 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213854766 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211327408 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21099981 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211784153 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211181922 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210556724 seconds)
  done (took 13.251687633 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210983153 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.211541639 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.208983592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212758308 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211251619 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209072108 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210604377 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210814946 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212088396 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.210602205 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211984557 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209417723 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210859084 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209818497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212802336 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210018168 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210097968 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209288811 seconds)
  done (took 22.92754217 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.212342661 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212705751 seconds)
  done (took 3.560126651 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210606971 seconds)
    (2/7) benchmarking "second"...
    done (took 1.210017255 seconds)
    (3/7) benchmarking "month"...
    done (took 1.210460718 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210537706 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.210688636 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.210688288 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210735031 seconds)
  done (took 9.608519654 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213491 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381391625 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.459611098 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.819185866 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216878962 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.215693068 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.086292027 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217100203 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218353663 seconds)
  done (took 13.963565094 seconds)
done (took 77.277116862 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.207415211 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.220334302 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.349294266 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.212718747 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.242591301 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.54946439 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.214388801 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.342654878 seconds)
done (took 37.473261044 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.208863971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.943074355 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.943992914 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.212868827 seconds)
  done (took 11.23513803 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.19026363 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.107295024 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204455097 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.192999238 seconds)
  done (took 17.831608572 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.192810783 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544021435 seconds)
  done (took 4.873179945 seconds)
done (took 41.281818902 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214974493 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216783108 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.210874473 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212887014 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.210866105 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211789436 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211876345 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.2132226 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213583081 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217013705 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.213993745 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.214134813 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213677979 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211511127 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211273317 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213878325 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.211687481 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21151826 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.214644931 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211883591 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21442895 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214168031 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212035762 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210329037 seconds)
  done (took 30.249840424 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213130888 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215536356 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.213379544 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213951943 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211816263 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213537978 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213086973 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211679301 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214225243 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216123168 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212579314 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211403704 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.213780425 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211201057 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215254796 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212000637 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214619336 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213790293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213035647 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212319144 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214546452 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211817378 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212191566 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213919797 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212526231 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211940727 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217646509 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212410675 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214947986 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21190167 seconds)
  done (took 37.537183898 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218238776 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221362286 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21444998 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217129892 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214821665 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214381866 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214563657 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21497584 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21430881 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214333779 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214967486 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217684388 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213517046 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213741116 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214334201 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213990753 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214257624 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214502666 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214244365 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217955164 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.215080924 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21417518 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214869866 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214347185 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214761902 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21452465 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214350772 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214193179 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219321235 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214052092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214882912 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213765884 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214617345 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214306966 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214566767 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214700142 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221724357 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220947216 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.213463708 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213323478 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214331858 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215368863 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214855396 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214948425 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216318733 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.21495229 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.21484432 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214764593 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215093319 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21506917 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215090946 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215670551 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216458658 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215877955 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215617583 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215890376 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215352129 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214776852 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214881481 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216612919 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.214662389 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21612886 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216727517 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216414906 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215773383 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215675789 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215934881 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215814759 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215926171 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218008242 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216969062 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216765876 seconds)
  done (took 88.654481059 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217245843 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214259774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213369264 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2154332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213870896 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216519593 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213958496 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216874836 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21475193 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218305288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217300731 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21463666 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21440852 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217427091 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216992648 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215155079 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217714999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215276954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217040106 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217203908 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217623977 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215709798 seconds)
  done (took 27.890394723 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218178617 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219993412 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215405122 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217423448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215456074 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217820847 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217877928 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219757681 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219140426 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215849934 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216051209 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219208533 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215782918 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216171574 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215823022 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217611969 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217936064 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21747407 seconds)
  done (took 23.053575497 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216847559 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215511072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219070963 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216869499 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216930394 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219601735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216860979 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219596293 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219334181 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216504091 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218874468 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219785386 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220301555 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217428234 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219970204 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2175974 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220741897 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216843024 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220142026 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21821507 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21718875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220509101 seconds)
  done (took 27.945884208 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220456945 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220617288 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218096483 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219000296 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217209697 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220614738 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220371456 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217292458 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222074079 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220181802 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218203065 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220205295 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220157527 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219292052 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219200855 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219394744 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221219557 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218929842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220443338 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21794428 seconds)
  done (took 25.533634324 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222674015 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222576958 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222395925 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221296788 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221965058 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222208349 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22210696 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22266243 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222787521 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222872795 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223143234 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222068689 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222726186 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224316319 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223988393 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22340222 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22344577 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223527183 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223525725 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223520173 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224760195 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223784787 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223941667 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223329858 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223835784 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2236167 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224387219 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223320374 seconds)
  done (took 35.391258879 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223601247 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223417414 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221708802 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221548395 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221532787 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222122426 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222633717 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221686413 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224904302 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221393266 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223788254 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224401558 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223984127 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224267936 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224323121 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223863443 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224196044 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222807999 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221901982 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223063096 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225633582 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22527487 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.228268959 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224164155 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221686226 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225425001 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225228313 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225737554 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22722627 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224113257 seconds)
  done (took 37.859986191 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245230856 seconds)
    (2/2) benchmarking "in"...
    done (took 1.245389364 seconds)
  done (took 3.637305209 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22308198 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226449272 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226003249 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222635246 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223957001 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225618903 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226601615 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22519702 seconds)
  done (took 10.946119144 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225773675 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226288576 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22999248 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226061764 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226857889 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.22739312 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233327545 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24362942 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227894618 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228013878 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233316557 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233909345 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230336713 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228020056 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226774402 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228504959 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227521545 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227132186 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227155445 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228449302 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228777116 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229679176 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23142244 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.22497664 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229178506 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.23766566 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.249392497 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.229231582 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228424942 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232136054 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227896357 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225933923 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228011104 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229374839 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229950357 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229571904 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237139722 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245398382 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235401027 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246723094 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228034956 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225828963 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.229922168 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.230387839 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230126109 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227965332 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229861617 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.226882077 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.228684595 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232371488 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234352347 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228111803 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.227693486 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233077703 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.23034171 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236266126 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.2469836 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23141594 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237835903 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240386712 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.259904339 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252683798 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232426407 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229641755 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239787182 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25144015 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236983574 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245259839 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.228426634 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230368654 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238215577 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260800008 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.254047803 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231447579 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231438949 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.231446124 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231439218 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231879875 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238785501 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.251280545 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.23193535 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230512388 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241206611 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25166334 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.231658386 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.232449044 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.231781385 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232506992 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.233564308 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243231959 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248238587 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232459896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.231955362 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232167822 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.234033449 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231956811 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230108257 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233467452 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229489367 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.23307115 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232400188 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234967147 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239279964 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232142492 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232725548 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239136792 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.250463562 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232124713 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.238846552 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.232530438 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233662177 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234708786 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238304706 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231298094 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234781552 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240533587 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232897537 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234386274 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234526008 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233525598 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242575887 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257399878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232821771 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.235484899 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.238844255 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244085037 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234507841 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236373725 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234741297 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.23215278 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.233305405 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.235123279 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.235192693 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.236647932 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234315662 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234586999 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233022868 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234585306 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.234214295 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.236132154 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237002643 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.235527606 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.236352782 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.236274984 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23573358 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236298568 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.241129819 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254052583 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.237272119 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236609535 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232184815 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2359149 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.236660486 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236226201 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235809878 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236745717 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.23536684 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.236485007 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236617498 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.235773373 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236365218 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236064773 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239359964 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.237000781 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239613503 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.235359075 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233257737 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.237539395 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236593546 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235849008 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.237836626 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235489074 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.240488319 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24402927 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236076226 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238021584 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239425551 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236307766 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238205264 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237830647 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239310019 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245423206 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237533736 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243964294 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.256213481 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237751621 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238787015 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237815428 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.238186469 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237980374 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240457291 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244337942 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249320975 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260798755 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239876131 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242371216 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239174161 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241758985 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.242649571 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238694088 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238182148 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239354727 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237858951 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239064156 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240490154 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.239294706 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238511473 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23957861 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238686334 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.23929539 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240691865 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.239561915 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241669179 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236543698 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23991565 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239688333 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.23973488 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.237215942 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238600256 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239722912 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239596185 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239871422 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.246808813 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.237677785 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241118051 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241462551 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240319279 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23927177 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.242136269 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242075 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241357432 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247091157 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.257622013 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.241822861 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247745782 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257637354 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240068123 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244722527 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24164874 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.239206462 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243796063 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249372782 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.241548208 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241922603 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241707392 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241210785 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242521177 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.24945834 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257672147 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.241848321 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.243237055 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243792881 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.240301445 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243419721 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.244135687 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243532277 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244325772 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242813656 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.243029647 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243771763 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243618408 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.24335337 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243698027 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245820437 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248837207 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.246894389 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.24250729 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.244814531 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243309784 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246881113 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243784192 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243109213 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.243727233 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257337584 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.264616809 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248555505 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.261564991 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244744946 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249135353 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.261799669 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247072757 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244296712 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244037293 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242513012 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243935587 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.240770862 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244589176 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245126734 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245291888 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245548482 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247269415 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245603534 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.244820059 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.244486465 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.244512689 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244852075 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243911038 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.246140624 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246889869 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247254224 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.242773094 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.245272543 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252562359 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263249661 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245856051 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245485972 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245049057 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245317592 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247774949 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245972993 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248342286 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.252762925 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248891927 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253769948 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247446723 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255313853 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.246346946 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249598752 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254792649 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.242695996 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245399026 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.246988909 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.247452714 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253508242 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.263804449 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247469366 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252225472 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24658395 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.247270267 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.24738597 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247502196 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246995171 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247267331 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255085406 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.265266757 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250914996 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249366856 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.247466756 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249696632 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250195977 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248794223 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254628361 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247861921 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.252598171 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246893584 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.247330663 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.248013425 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247624484 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248474215 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24630577 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.249523347 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255316751 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.267184798 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25253201 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248625685 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256518706 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266945295 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25594505 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.266549472 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250003431 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.249568141 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.249748106 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251893595 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248962042 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.248802544 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249236947 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249124936 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252394354 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.249963799 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250534569 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.251375835 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249317416 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248346531 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258342536 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270736805 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250645464 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253662066 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.247135758 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.252040469 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.253892422 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.250067008 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248680266 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253021309 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259843278 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258453146 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250501931 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.251240424 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251477014 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253176719 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.251025655 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250999375 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.252169284 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.2508419 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252069764 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.251872156 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254541556 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.251648055 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252903833 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251968308 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252959821 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.260708125 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.270203619 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252746637 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252636684 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253529771 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252434025 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252833756 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252234268 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252870168 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253256871 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253066388 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256855594 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257421257 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254612017 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.251511745 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252808927 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252302876 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252876944 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252944264 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252211238 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252725051 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253864713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.253854107 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.252692774 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.251317894 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.253951538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25332212 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253969209 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256929295 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.259663421 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254061912 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251460984 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.253391116 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254375621 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252140803 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.254661466 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.261568426 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27531477 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.263231149 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261265516 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257230954 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.25441954 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257661155 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.261628197 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.253179265 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.255538833 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254472577 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255648959 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.256317792 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258023782 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255687356 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261614704 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.274395399 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255843181 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264070238 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.273097325 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254615588 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255765628 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259370936 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.2567347 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.253650173 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257140737 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255803768 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263055449 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.27498138 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257054118 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257501404 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255545351 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.257754935 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259600185 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256762232 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25816071 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254444751 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.256810632 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256944377 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256875886 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254834266 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.256847839 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256381799 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.259665882 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262002324 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254659469 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260222068 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256888851 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.258211146 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258658238 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257480408 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255026798 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.255026591 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.256929775 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25850537 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258133653 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.259354828 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.257362818 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.258545084 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.258105252 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257827893 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260075749 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.266881775 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264065769 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.255826871 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.258436471 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25858768 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260760705 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257871744 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.257581309 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257883637 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.259773232 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259154795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258865838 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258889146 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.261501296 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273582248 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27620357 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258351818 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258958847 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263937282 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259085546 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256605859 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259054674 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261055307 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.26201942 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265994263 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.260983308 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266271516 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276131016 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.260996469 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263314864 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263089133 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266055142 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26244732 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260653345 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260577423 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264199598 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273887552 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260638819 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269884975 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286697643 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.27768382 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262359075 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.261488091 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25962783 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26059743 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.263147703 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.260916575 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261546933 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261867044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.26088038 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.26180138 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266816729 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.263207353 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263368184 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261277118 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.261471617 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263699947 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.260004322 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261945723 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261978965 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262099194 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.261744898 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.262849079 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.261157562 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273877842 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.284943421 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262956161 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.262427369 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260233796 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266437627 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.264202828 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271799402 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269967405 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262096473 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263524172 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264328565 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262309682 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263296482 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263047628 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.262647382 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262165106 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.26057208 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273898037 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287307134 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267641495 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.263654619 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264215628 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263504059 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264970081 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264356737 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263966692 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267802328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269438855 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267641764 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264932606 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264668436 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266150531 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.2711991 seconds)
  done (took 744.974911708 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263164333 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262168236 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262092447 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262279909 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261748613 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262189543 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263048319 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263000319 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263205372 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262117486 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262701372 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262280634 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262905036 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263006171 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262645611 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262674495 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26330901 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26246632 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262332114 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263172865 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262777174 seconds)
  done (took 27.69876117 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266035825 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.263188788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264146071 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26556911 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264440897 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264771429 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264422911 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266263246 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26668391 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264364648 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266000287 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266270478 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263036974 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263892846 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264355562 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266872605 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267099963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26491927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267404765 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264801855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267621804 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264715183 seconds)
  done (took 29.02143484 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.266891448 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267960588 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266771983 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.264865311 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267548122 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.265797522 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268685603 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.268625719 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267122902 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.268793137 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267396311 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.268694654 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.273563205 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.272207376 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.269886634 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.268442183 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.413692983 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.268825208 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26856173 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.269163972 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.265449768 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.273276001 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.286236663 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.266325181 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.26817247 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.269757989 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268454469 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268438333 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.269170929 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.269151343 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27297379 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.268577463 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.268286282 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.270264959 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.268132213 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.269775851 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273042545 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269666743 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.267732205 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270217123 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279113058 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.28788375 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269970135 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275200919 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.290201448 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.270412239 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272759063 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.276943429 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.267344741 seconds)
  done (took 63.593508956 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270925618 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.269136376 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267786743 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271214431 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.27152369 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27032265 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270945137 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270300938 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.26804411 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.268697515 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.270261358 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268734789 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268764045 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.270653269 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27187929 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.268833976 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268148364 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26853549 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.268729122 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268977202 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270114647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.272624232 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272188443 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.269379694 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272358922 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269896428 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270034395 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272228933 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271063953 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269149285 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.273717787 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273103715 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.272226761 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270289489 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268753774 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.272222359 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273309919 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.2696455 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272820732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.269387692 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273083384 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271878462 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.272763332 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.273907984 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271123856 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.271106223 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270564859 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.270091906 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.272333763 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.273330963 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.273067208 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.271088742 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273881481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271200843 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274269664 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273455828 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.271080971 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.270768465 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.274205365 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271162804 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270557659 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273938143 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272152032 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274813524 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.274128006 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272340026 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.271316803 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274787024 seconds)
  done (took 87.636136915 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274431365 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274257514 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274442057 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274226918 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273189689 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274533183 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274342622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.27413452 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27353982 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274203041 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273888403 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274068745 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275101117 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274485916 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275473391 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273889362 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272928943 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274426676 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275460173 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274323807 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275380277 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275109878 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275404244 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275077269 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275293151 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276317863 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27516187 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275242636 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275582801 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275411578 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275596308 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276006521 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275376996 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275822567 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275337753 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276489529 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275512624 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275720409 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.2762469 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.275788228 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276173403 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275761624 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277088808 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276885801 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276585211 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276662076 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276266802 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277929234 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278075077 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275925723 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.276486488 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277000548 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276843726 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276915458 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277356442 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27688543 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277818864 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276557614 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275609884 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277551598 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277182272 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277323163 seconds)
  done (took 80.282271572 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278215606 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277788091 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275264956 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.275391833 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278342451 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.275821445 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278024221 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.27745999 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278933295 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.278246226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278405045 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2762489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276048895 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277967264 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277387201 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276701924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275578009 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277094775 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27852202 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277353673 seconds)
  done (took 26.740249496 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275695268 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279940928 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277196339 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277340604 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.279460554 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277152906 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.279655415 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279456086 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27713496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280064319 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281662108 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279862303 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277715277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27707956 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279542319 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277821453 seconds)
  done (took 21.65238932 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277612066 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280123368 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280365807 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.28020252 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.277322439 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.277742513 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281179305 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278116778 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.277939378 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282200468 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281723036 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.280797698 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.280965174 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280822729 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.278516337 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280008008 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279046402 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27887186 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281136927 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281636966 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279481578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279103947 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281397179 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281817685 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279087811 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.27986814 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.27898527 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279352577 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.280415237 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282394419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.279259517 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280369183 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279350164 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.279195689 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.281766036 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.280474399 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282490171 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282136233 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282503397 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283394627 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283287665 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.27995661 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282773303 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282181056 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.279456445 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.282686432 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280279509 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281312801 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280995422 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.280869229 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.283656879 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.284191015 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282831483 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283896659 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282453019 seconds)
  done (took 71.638282546 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283513407 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28437034 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280613306 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283747445 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283868107 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.280660703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283614827 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282670291 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282125634 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283619184 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281281123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284867506 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280957365 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284608297 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281938948 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285278009 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280530527 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281465629 seconds)
  done (took 24.28982974 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28196517 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283361116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.284072222 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.282140422 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.282339795 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285163113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282041249 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284691209 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285437641 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282760373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282511955 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286056742 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285328801 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285687609 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283574192 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283177921 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285872774 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285105146 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283518161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283026706 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286686697 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285449988 seconds)
  done (took 29.451065923 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.284541791 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.285248914 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.283674791 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.299433457 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.301245955 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.307067223 seconds)
  done (took 8.963082609 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291609599 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285891776 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284233926 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286490522 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287907907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284780716 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284296287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284207918 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286586623 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284718232 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283874845 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288344914 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287141116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284466958 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286596121 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286690709 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284134787 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28484072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285362009 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287849612 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285602012 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287392634 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285593962 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286003658 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285290972 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284444543 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287408179 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285881877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284827469 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287579148 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288384189 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286152895 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288994855 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285854437 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28984763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28813533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285784723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288866373 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289031857 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284840145 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288250854 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287860741 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288746215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285424695 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288454353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286267648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286150441 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285695652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285845805 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28900071 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288899085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286126966 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28863783 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288806239 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289077397 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289240179 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286377635 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287051505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290879179 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287283622 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286930579 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290327248 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287669529 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288442881 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291368712 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287106351 seconds)
  done (took 86.167861496 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287902354 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28635129 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287569543 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289869613 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287806432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288780897 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288698938 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289419177 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289014511 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289101849 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292259239 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288488277 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289428515 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288107661 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288338404 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288203951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289375565 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288121476 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289968204 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291173377 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289199742 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288695063 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289200222 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290134844 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2892911 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29131366 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288972638 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289843603 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289438764 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289609338 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289284783 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289273375 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289011914 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289992739 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290480589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289193162 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290349829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290172534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289839242 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293174364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29034581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293768406 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289797141 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29054277 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291044213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28939424 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289389303 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290408676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291093658 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291672893 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291257745 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291631408 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29026765 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291061756 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291173936 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290657561 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291607474 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2907595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290942593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294280646 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290839309 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291149276 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294983757 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291158882 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292371531 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290977906 seconds)
  done (took 86.356806779 seconds)
done (took 1738.300164442 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.317939416 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.347586011 seconds)
  done (took 13.875195868 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.455017806 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406603998 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293555184 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.320663479 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29293725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.307052104 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.302771119 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.29239414 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29308097 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29325631 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.292350973 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.476944168 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.347107213 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291498528 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293588866 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.385264728 seconds)
  done (took 42.563746758 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319539904 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299890965 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.403935224 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314032517 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.319131606 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.472605574 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353823614 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.296708731 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.459516612 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335586382 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.78659728 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.319450771 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.297169211 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.357073565 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314761541 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.473426637 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.53443757 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.793398394 seconds)
  done (took 29.662142516 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.723798369 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.307664616 seconds)
  done (took 9.242566851 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.326855961 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.30222014 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.307366079 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.307992071 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.305733813 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.293125197 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.352778099 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.365823845 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.351110962 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.346743129 seconds)
  done (took 64.479574808 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316116724 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29842522 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.298972879 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.297436463 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290564152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.291808618 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.299883066 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.30152989 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.755160928 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423379903 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.317161438 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.306246737 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.315761723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.299984837 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.299275365 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.337182145 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.434873311 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.316422552 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297114757 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305033887 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.299298185 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405406671 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.340159404 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300883752 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.421695668 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.784449796 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.308991389 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.306862035 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.416282916 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318418595 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298656686 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.300942289 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.301649128 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.851525668 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.740890049 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311082544 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.323735307 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.309899018 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299517082 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.434989613 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321078741 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.307004997 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298358197 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.709957925 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.451967491 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.408178617 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.472302575 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.301887857 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.302527279 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.361751295 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.302556261 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.301118539 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.328903483 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.039080026 seconds)
  done (took 108.999083823 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.337255086 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.781733283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463944316 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317202352 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.143954364 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.030650115 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310646838 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.566809741 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.33187526 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294189227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.580672951 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790511513 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31197888 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.314017224 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.848728919 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.381033445 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296501443 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.170109196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.311777591 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.299499897 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702927299 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310524445 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.311979593 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.590778226 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.334069622 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.74532743 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.798244085 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.736502936 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.312392477 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.295190004 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754610986 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312245466 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.341748986 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.296242746 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562586634 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636811948 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629683747 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.313623166 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.296036619 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.29754545 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317270729 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743146764 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642921287 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312902864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.296466574 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.762375411 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312440464 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.302280316 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299453973 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506983121 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.224721649 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.297142305 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.788756049 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.296076953 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.55447442 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.377818972 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350233327 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774634197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313801934 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.395125506 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326328678 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297635675 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297377279 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301876221 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300955793 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.631971332 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.693232796 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297885304 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633511258 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76502532 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.313669523 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825950688 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.176281099 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326928943 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.333188611 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297869864 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.002880417 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788760643 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.337214856 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297744636 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618049716 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316284061 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.569365064 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.312937843 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297964474 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.714526636 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.324091292 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.336835169 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.300114883 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.298939688 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.087413035 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299367753 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.576203568 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.341889286 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299746223 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.299635663 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.336879953 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299915717 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.302066504 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.300436622 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821742766 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.32037623 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.612212075 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317567657 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3033322 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299857478 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303006808 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299718203 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526758221 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.7259438 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.307896451 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300754993 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.301450034 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.303455427 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.540922462 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.304465846 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.594534661 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318327584 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301553707 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.318300207 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.050329958 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360595041 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300824923 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.320287414 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.146003077 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.525345512 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320620421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.303291883 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302366572 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316856487 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.76051828 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302762875 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.320376347 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.304832776 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998699384 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345454982 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.341331047 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.891090982 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.307163753 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302502309 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310709593 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302830559 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.619458519 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572474065 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.572945205 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302176576 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.319847269 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.989700017 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.329799038 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436901161 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322439555 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306727463 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500113999 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548695029 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302805339 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.86130303 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.304336924 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522129704 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.315915146 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632047574 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.785231828 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319169987 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30630084 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000484014 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.011993725 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.984675607 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.305707582 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.575384206 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.277583644 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.753039109 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.303952198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310167079 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.911503864 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.30661834 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.31420206 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.306638785 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.306075132 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.373962136 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48022961 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.433189364 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305457592 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752668689 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.389430795 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304591559 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.328053524 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307202092 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.65676716 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37817713 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305657567 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.342291714 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.306697358 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.30950996 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.765153 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.218817953 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.30766694 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458774506 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938750986 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.328139025 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.307094257 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.923469437 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.52479065 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842878679 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.358852932 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.603875912 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.327053595 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.34602491 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.084603262 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324396898 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.76343882 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326499814 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.306594553 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899281182 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.322648398 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.424047672 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.306752967 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.306905703 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837870716 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.322994098 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.307960819 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.769009349 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306689575 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561775602 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.307294606 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.351216511 seconds)
  done (took 1105.487672709 seconds)
done (took 1375.516351878 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.306826488 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308838281 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.295125892 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313326113 seconds)
  done (took 26.453589496 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.317341642 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.31401652 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.315450405 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313771933 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315812029 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.314771463 seconds)
  done (took 9.121435084 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.381194581 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.30880322 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314434258 seconds)
  done (took 19.234925764 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.52713499 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.565747362 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.676681513 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.469011505 seconds)
  done (took 10.469415389 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.315558542 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.3167723 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.316917014 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.317594257 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319260234 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.320468242 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316196478 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317635684 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319919509 seconds)
  done (took 13.091093145 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.153198136 seconds)
done (took 84.749850604 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.589907203 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.56246921 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.374929652 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.656924201 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.331534177 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.042411197 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 5.569364903 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.145376615 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.58366596 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.367767015 seconds)
    (11/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.352445746 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.353694684 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.702355489 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.359361823 seconds)
    (15/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.907167812 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.720125546 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.535436933 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.770084924 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.594341404 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.327905451 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.338769977 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.93527895 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.948272557 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.221437267 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.414418858 seconds)
    (26/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.166031257 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.371565509 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.337947964 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.314633661 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.296269138 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.292625381 seconds)
    (32/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.740732786 seconds)
    (33/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.330847485 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.667654143 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.053530814 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.867559092 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.44282012 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.321353909 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339060844 seconds)
    (40/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.013153741 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.483386589 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.928889837 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.357136442 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.633449957 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.725777387 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.39839742 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.945122218 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.594187453 seconds)
    (49/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.340489004 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.381078647 seconds)
    (51/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.293619132 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354688302 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.660550634 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.439133537 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.306238045 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.520779152 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.578866391 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.377218258 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.371138499 seconds)
    (60/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439010696 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.397747394 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.927005667 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.293755011 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.316578036 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.045812444 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.883858425 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.677596698 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.294941037 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.314450167 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.339544673 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.402210515 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.887100455 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341418745 seconds)
    (74/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.34948398 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.798047837 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.146958687 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894982452 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.314625687 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.713836368 seconds)
    (80/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.332400407 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.481375831 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.720097906 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414749422 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.600378437 seconds)
    (85/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.512760398 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.648964876 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.314748025 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.678826845 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.856029048 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.842141901 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.574010733 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.31555964 seconds)
    (93/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.358829125 seconds)
    (94/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.520026996 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.397447047 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.687052601 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.200028597 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.316645101 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.450674488 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.421036917 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.156745466 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.400978448 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.733227752 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.699790343 seconds)
    (105/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.345731624 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.690419688 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.054157923 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.433332254 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.398076537 seconds)
    (110/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.597553421 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.317266528 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.480597789 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.611765218 seconds)
    (114/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.366218227 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531265207 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.316863681 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.334817629 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.3317732 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.878571077 seconds)
    (120/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.058973713 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.556328121 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.51043159 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.791567221 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.317361205 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.346284758 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.388244892 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.431825723 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.890340769 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.357558307 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.832917086 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359006888 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.333528199 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.597527827 seconds)
    (134/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.194692325 seconds)
    (135/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.670661357 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.067345799 seconds)
    (137/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.340607046 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.055000697 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38282363 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.317707491 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613273936 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.650526627 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 6.31969405 seconds)
    (144/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.784825681 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.336397649 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.724953707 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.333232673 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.421907161 seconds)
    (149/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.914935306 seconds)
    (150/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.921116514 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.324541845 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.645177065 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.759230646 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.718267741 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.851164917 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.435335475 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.337523349 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.081373254 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347690748 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.725785463 seconds)
    (161/309) benchmarking ("sort", Float32, false)...
    done (took 5.326698643 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.336825272 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.185685654 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.345212872 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.073310705 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.636046386 seconds)
    (167/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.87668092 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.148361439 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344219054 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.337418664 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.228096009 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.667174821 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.352606837 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.561179034 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.664357834 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.417541281 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.361096659 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.085392681 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.301550262 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.322052511 seconds)
    (181/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.327847848 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.307192255 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.324735711 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.683894172 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.77091594 seconds)
    (186/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.407003424 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.878073786 seconds)
    (188/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424579116 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.263100094 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.440356417 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.321821544 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.403725233 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.69180202 seconds)
    (194/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.86571554 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.608517793 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.381614991 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.120292743 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.420519696 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.322710856 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.761751082 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.541178929 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.566998833 seconds)
    (203/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.740132164 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.498565187 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.396751519 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.310652753 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.892861477 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378306925 seconds)
    (209/309) benchmarking ("sort", Int8, false)...
    done (took 4.373445834 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.17291058 seconds)
    (211/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.429352607 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.725960196 seconds)
    (213/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.071365923 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.332063728 seconds)
    (215/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.422975231 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.367840622 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.950404466 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.540850837 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.307958873 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.880005631 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.767230032 seconds)
    (222/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.693389804 seconds)
    (223/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.505152504 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.304639145 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.373013167 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.086962367 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.888898386 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.328311039 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.346897332 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.734309053 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.532379337 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.358642046 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.072483291 seconds)
    (234/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.421591163 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.343570607 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406949439 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.177912472 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.371872181 seconds)
    (239/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.357875154 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.318718725 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.051817069 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.177616081 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.367849833 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.326735676 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.166069862 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.379211085 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.421675576 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.846530942 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.469716162 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.306350789 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.601911231 seconds)
    (252/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.409869583 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.604598525 seconds)
    (254/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.432879543 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.326209903 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351975862 seconds)
    (257/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.532792333 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.801062213 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.343429887 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.225389571 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.311811195 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.534010222 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.755419138 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369660622 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.538082683 seconds)
    (266/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.708839443 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.417825938 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.666486592 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.230734371 seconds)
    (270/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.921292743 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.37067351 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.335798151 seconds)
    (273/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.432363749 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.335948695 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.155223472 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.358987015 seconds)
    (277/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.342526306 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.711464754 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.957280533 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.327026614 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.454700331 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.651450866 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.35368098 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317230852 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.281557646 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.41313584 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354141493 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.410706067 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.05945637 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.41027793 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.439107896 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.091819469 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.579236599 seconds)
    (294/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.46750535 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.381198131 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.163415626 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.564653819 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.825273471 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.376989598 seconds)
    (300/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.159079862 seconds)
    (301/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.321288336 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.994464973 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.31541199 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.330202934 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373875073 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.512289729 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.774661939 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.348837036 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.146397671 seconds)
  done (took 915.745083706 seconds)
done (took 916.974986371 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.362521783 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359024322 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.339616618 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.361623942 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.452637606 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.366114906 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.350798119 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.342608349 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.387542566 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.390977222 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.340032051 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.364109034 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343559367 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341513922 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.339961905 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357121751 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.368132051 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342824467 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359388596 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.351294456 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.357889111 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.34071871 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.390761105 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.36472207 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.344723523 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.344388782 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.34703503 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361722563 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.453617069 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.345649479 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.344903909 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.353255726 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.369658509 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34633887 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.337296648 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.36217453 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.353821805 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.351586643 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.345173029 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376102954 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.754960174 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.358636841 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.344135378 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.343168217 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.34456777 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.348349663 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346095011 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.350368414 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357725451 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359261215 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.748607552 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.376059207 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347744521 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.344158186 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.354270903 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343875405 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.34724622 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36246369 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364075527 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362410601 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.363824069 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.356028874 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.345256694 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.360871207 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.351884379 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.787928157 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355483703 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.350188051 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.756367402 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.365813966 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.787626347 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369266273 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.346670913 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.359310966 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.377614984 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.364654201 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.339626471 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.344623302 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.354689319 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.343850063 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355034999 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359945177 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350927744 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.345753118 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36231753 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.371084172 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.356808731 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.347705249 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353748801 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.366228078 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354551628 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358572506 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350332161 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.341873024 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356415703 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.350264585 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350345001 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.350240578 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.351909353 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358943436 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.758796988 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382120958 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.344114735 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.344055153 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.347300824 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362125584 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.759032763 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.365944919 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370727553 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.394862162 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.348958782 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359413764 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.351862019 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364565812 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.357123788 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352183914 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.344086362 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.359654104 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.755850671 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380281965 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349654093 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.346781483 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367151256 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.350369146 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345233564 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.370004828 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350794528 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364676313 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.469377686 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.35869454 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381527303 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.347593149 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.35279552 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.374122435 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367877987 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.38026028 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.352207103 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366511103 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366032842 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345134105 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.360687515 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.360164241 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.349839939 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357093274 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344881894 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.375199333 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363311183 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364337446 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.371618553 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.47102776 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347851097 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.361013765 seconds)
done (took 227.137018676 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407987816 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.34236747 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.429790609 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346581104 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.444340686 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.448213644 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343921373 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344278735 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.344501886 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.722766895 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.343878569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.3453952 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.342735432 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345074453 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.428674361 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34628018 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.344557732 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694932067 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.347363483 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417419593 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.345758813 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.345239665 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.347433595 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734991479 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.347133009 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.347532545 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419092361 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348525852 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.691520464 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.346444402 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.347106404 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.698665086 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.43910841 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364971721 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.358581352 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.35563965 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.449166454 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.366361111 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.429021519 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42860644 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.430913647 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.385665748 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.34780762 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.340832882 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349527504 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.349082243 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346640906 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.375907199 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.347121785 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347597917 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.689970713 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358431398 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346826561 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347536073 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.3476008 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379580707 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.34845544 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.349877759 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.439731273 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.350070082 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412514096 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.728473914 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.732571274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348903207 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.344464972 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347541604 seconds)
  done (took 149.39727594 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.416884762 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422992521 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.459903277 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.367943248 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.400922009 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.465687935 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.367198734 seconds)
  done (took 11.164827373 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35798449 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350617881 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.400336712 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400053282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351691064 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.497402733 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351370592 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.364193446 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349746598 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.404423011 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352134095 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351828569 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359063 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.343799462 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398195437 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363502844 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468057605 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.353111187 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352086267 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502788191 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349998569 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359306324 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.404033315 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.363300394 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353227438 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357997359 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.916399614 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352098254 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349992252 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352385671 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350904496 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.389526812 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.353568398 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.351809459 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351097286 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469312417 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352137197 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351410697 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353624966 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.353649745 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353933978 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353730544 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.355140116 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35133089 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35478475 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.377555183 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353829368 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353909276 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.354120506 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353525391 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.404343138 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354263013 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351739368 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351439766 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.408056994 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361093557 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354150626 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.351399394 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354817563 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351678553 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.506208668 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402445828 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.355003847 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.401419268 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354685017 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35463278 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.355201385 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354904291 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408880494 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353760442 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402247348 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352619945 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.508010752 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.378317441 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356617572 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.358269626 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357684948 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354710401 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.354716073 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361104501 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.353893304 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.356030636 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362417841 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353193839 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353520748 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.457710292 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464351534 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353385345 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368224327 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.362522735 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.353962781 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408950256 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356526651 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353686597 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407687998 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471032789 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.409589084 seconds)
  done (took 155.157700909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361386076 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.363902221 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.356575923 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.371852789 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356498297 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.355822616 seconds)
  done (took 9.434103869 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358845268 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.3593907 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358415673 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356822495 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.357174558 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359277233 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357119567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360018817 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.362580748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357317491 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.35936838 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360238907 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359375008 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.357914502 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358132614 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358792387 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.35815052 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354293236 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359803102 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359727552 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.454275955 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.35826236 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357559979 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359198835 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364148615 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35940925 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366730012 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358341748 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.36019946 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364983999 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377539901 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360251929 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.360354592 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.36573763 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363402152 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.360923971 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362840799 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.360594111 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357118063 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.360658688 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.361647826 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359796027 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360503779 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362068181 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.361248957 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.365720475 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367030923 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3671577 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361049609 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.362214428 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.361128479 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361217838 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.360639596 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361182246 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361722807 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382127991 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.365873243 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361032602 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360925287 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.362047595 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362514447 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362309823 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363262176 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.365778907 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36853993 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363219729 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.363975904 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366075951 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363276767 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.361172211 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363436767 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.359356956 seconds)
  done (took 100.405454226 seconds)
done (took 426.814476078 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.709695424 seconds)
  done (took 7.983425706 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.445309041 seconds)
  done (took 7.720456066 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.746532405 seconds)
  done (took 22.024293282 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.371173994 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.368725618 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.37041358 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.376177381 seconds)
  done (took 26.760924651 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.775987755 seconds)
  done (took 8.050035957 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.354927964 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.373466394 seconds)
  done (took 14.003723695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.973455791 seconds)
  done (took 8.247709864 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.934877964 seconds)
  done (took 8.214380137 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.361405235 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.370896584 seconds)
  done (took 14.276941111 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.335496484 seconds)
  done (took 7.608839286 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.233953028 seconds)
  done (took 8.508205064 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.369119052 seconds)
  done (took 7.644787848 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.4335602 seconds)
  done (took 7.707248521 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.372314463 seconds)
  done (took 9.647375761 seconds)
done (took 159.669704193 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.356362133 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.358968925 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.794238078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.356445651 seconds)
  done (took 27.140789054 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397407664 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.399112833 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398427469 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409858867 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.399914105 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.397477117 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.389798519 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390223288 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408522225 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399992424 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399342198 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401159082 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399648259 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.389723126 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400862278 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.405136456 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.412612223 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.403582477 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401638817 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.404023719 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.366606462 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.408845178 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401394266 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367851591 seconds)
  done (took 34.827928226 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.885552557 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436009326 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.519775846 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.417303806 seconds)
  done (took 7.535201543 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.416867981 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417947375 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.430536692 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468663952 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.496255273 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.428875767 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.392818573 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388231896 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.374896645 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.418536158 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494690337 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434615896 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.504950659 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365869139 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.562667207 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.366002278 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.366351081 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.420442864 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470580175 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.483677572 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367789726 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.417997435 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.422547437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436148519 seconds)
  done (took 35.625863092 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.378837873 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.373555948 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.365692093 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.365875386 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.38769087 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.365764814 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.367162677 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.36760643 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.365878678 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.371994148 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366232883 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.379168784 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.366513685 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367336896 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.373427992 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.368244854 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372725047 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.366741973 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.366995484 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370869162 seconds)
  done (took 28.687094459 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.360358621 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.215118934 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711479407 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.616612202 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360434596 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.36099023 seconds)
  done (took 27.90417016 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.437580577 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.593160394 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368465342 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.723345333 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.815477606 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386953688 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36763997 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.60799254 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924213395 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925922893 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.433011482 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.435603264 seconds)
  done (took 20.301609579 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.365611163 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.36666273 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.369296994 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.384562722 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.423561612 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389639684 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.375017914 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.362634302 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.430320199 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.444472421 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392048774 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.425000494 seconds)
  done (took 38.009738272 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450502934 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409226327 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.349496781 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.108379218 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090174676 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576830506 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36411925 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.79919768 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.376880362 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638186391 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374906194 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453737433 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620019498 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367419789 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371608866 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.340704723 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615185296 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858099709 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367331137 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.328240204 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398216605 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374594738 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.410668719 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403982876 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576300604 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.342976389 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.626261583 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140947282 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651058178 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379744481 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376804342 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367351066 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639585854 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030655029 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481377965 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376802567 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064029247 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918948938 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.345317496 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.327662619 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3027427 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368976906 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377586537 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36577869 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299885544 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366765099 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805962854 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.380620774 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.078619345 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367429128 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379002664 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462586705 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.372151739 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.93621997 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391381755 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372867341 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.365425495 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373253625 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940507216 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.812572613 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38802869 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.309827736 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.748833321 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.314749368 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008165623 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.488306598 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.372013851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373918519 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303051925 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.382478624 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391427292 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516388231 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.394299864 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016613125 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080310106 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399243758 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.298952323 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924611943 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377430308 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.312457804 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597546365 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145348006 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306201289 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.315653103 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.303220504 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107980092 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380537574 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.767107999 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386211823 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.794965067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.389112492 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389247042 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394325785 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593690998 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.256432819 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371649872 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.299828011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516589329 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391218009 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.799491968 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312959195 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.374573881 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625430741 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.582391766 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370501024 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371878766 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596833166 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378984426 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.414709076 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372172445 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.388719762 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.946858966 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407950372 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.807828042 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396234934 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147472644 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142004676 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389369087 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.478727763 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375310012 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616907518 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154783507 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259251025 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439542598 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374563655 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370822348 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.43296473 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223159345 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.254016948 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.368846795 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373637521 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.390110134 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.373471779 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325807997 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.377121789 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378353382 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.149337952 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59679154 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372438217 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654131871 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306898194 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52134923 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382807734 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.594987134 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.574701699 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.389039304 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632194665 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380681947 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392068025 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390937762 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391919969 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470154739 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39561849 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.386089278 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637326233 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.376646587 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.378735585 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.492690546 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.153856713 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37841602 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379894212 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.213256155 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955541431 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368187366 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383601771 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.264422595 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.389391125 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442310115 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381539895 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.385549796 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.210329779 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.232730617 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.38594877 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.385474445 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5974473 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386450493 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.371783388 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45406683 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.571318033 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96769782 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406204754 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.309728482 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.086777682 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.067530781 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375600296 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.571886534 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376158229 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385242773 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387676333 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.906226857 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967659306 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395573045 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.382083909 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383842973 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388796175 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.382450838 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37675308 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.191479425 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853122036 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378164573 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.411669566 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520281977 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.392116993 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312455255 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.893941828 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38223192 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377555881 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.158514492 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41255888 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.367818752 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849063581 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637346741 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.117591925 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397594054 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.561064968 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.410489961 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.381046601 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34949116 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398400752 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.401747783 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386178885 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.389285708 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.483151155 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.817602161 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947959492 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09016258 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937718857 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345988128 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.396595896 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28963375 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.812038649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314018974 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.035142797 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568668368 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.830430889 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322763524 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576431566 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.579575772 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167135788 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389032489 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607162717 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324396984 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.364213579 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411613555 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591858753 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413877767 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382844495 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316356483 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.660438067 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610563584 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370632975 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458168929 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818131449 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360905084 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.177178443 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.379161866 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.741861256 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571261739 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.017618877 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.77059012 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380873603 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406020366 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856409185 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389756711 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906905542 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000478896 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400615581 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.60424344 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325339348 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.393137592 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.392018583 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.376325863 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.693279588 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.39600755 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.635771918 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392887695 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315705078 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393522188 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919013909 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253386785 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387934513 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381822519 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169421981 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387139402 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69353422 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.383585217 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.186548034 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402694831 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317495706 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317040169 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.075115194 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385418511 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358401846 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895131016 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.751956795 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.398225021 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417508221 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237402224 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640061787 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.397335386 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970362957 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625490684 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.189340973 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413186593 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.48425154 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38377666 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.365385402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.266501047 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619331368 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224978705 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608400482 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.381823618 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.285203786 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381966495 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599943826 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.266603261 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394170642 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628148106 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.112848347 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.39338644 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096261765 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42700902 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396368809 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395781509 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.771528506 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39895939 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45549034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397110994 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.395349258 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396833406 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556279872 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4086512 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387744285 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.399839958 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480120056 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.855426455 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.18868322 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.176742732 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981512966 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127979114 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.992355175 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415906867 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386646703 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386765257 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322147207 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537431808 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911796264 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661688632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516873316 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.85098481 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410150721 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402598463 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388655471 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598718726 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66255488 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257864144 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398286882 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046505923 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.285686753 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398448807 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.599838156 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901930399 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965332481 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496640729 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388475138 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.816269772 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661701455 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.480150795 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389846497 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977645245 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.406572477 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.788878335 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418226953 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391912567 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53654987 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39756575 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052946909 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.418133853 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.548535897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.161550689 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.508553482 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643156527 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.854821946 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402023888 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981571292 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11610063 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652161469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459533659 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401510217 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.497289347 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535220526 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.39365327 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.2798866 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390335675 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234240445 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.099313261 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.400709505 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982405875 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670444865 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.387848 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.396327373 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41471791 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.40201418 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614143007 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123788283 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623458611 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399899605 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39263963 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.382305828 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987190025 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420667363 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325973088 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.393976924 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633639746 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645446834 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417285666 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.845284239 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.10229449 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955261025 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.363630271 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413088621 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39265599 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108266366 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983231895 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.219276806 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909487054 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051130905 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403935796 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672977112 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397983799 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406358958 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676130298 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.397572145 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395461823 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410865111 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.983845864 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189370605 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.40986141 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.457152808 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.330124749 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.618861316 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050983117 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330838782 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393030274 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.569994851 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401562025 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523985842 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405269988 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.401976592 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396508393 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.134715982 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705471833 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.398398799 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.379748661 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.386160498 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396302599 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408055227 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629098543 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400400368 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.0697798 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.744433481 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650592394 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405423261 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.381784662 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.400840062 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394037873 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112011524 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364763646 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.928859665 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983891648 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.402628158 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.414301147 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400334375 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61217175 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607028466 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.4030762 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407353922 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399405398 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418963294 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.302680045 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.163318192 seconds)
  done (took 1608.853591461 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429908544 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.43091199 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.424383191 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.458981139 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463124767 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.499425002 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.5024387 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408320888 seconds)
  done (took 52.92941545 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.396263335 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.546635938 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.427892664 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.396280513 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.422390741 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.401766402 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.867134837 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.413795445 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.4060896 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.406459172 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.410439601 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.398205651 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.070287012 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.407386072 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.412031987 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.380940144 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.405525593 seconds)
  done (took 66.487821361 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.398009841 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.420006771 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.500188352 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.397318226 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.478997595 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.425329445 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.305318961 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.462148965 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.411723727 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.412104653 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.076476915 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.443918941 seconds)
  done (took 85.045811979 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.406599793 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.407631641 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.407377417 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.405840272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.405755074 seconds)
  done (took 8.347808596 seconds)
done (took 2042.969562433 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.668880294 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.105020053 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.045314585 seconds)
  done (took 5.463793165 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.543631553 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.593441347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.714160321 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.718746143 seconds)
  done (took 7.881639887 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.678738772 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.774370069 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58932934 seconds)
  done (took 6.354295024 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.837038489 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.402702137 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.539428696 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.396512485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.403874506 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.404418791 seconds)
  done (took 20.517579511 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402098271 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404839867 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402509098 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406271506 seconds)
  done (took 6.929411396 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.377547199 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.089953178 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.380977981 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.393207944 seconds)
  done (took 18.554723075 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.148484263 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.162046242 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.146238794 seconds)
  done (took 7.770383499 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.412040718 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.24341916 seconds)
  done (took 9.968678281 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693986517 seconds)
  done (took 3.006466661 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.535968079 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.730176802 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.439317661 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.38904798 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.474939333 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.278663652 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.056527851 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.637362622 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.361622494 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.603300772 seconds)
  done (took 28.821840661 seconds)
done (took 129.028071449 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.246338657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.642642597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.604233352 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.219805296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.636187932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.604714107 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.620542207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.191456547 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.728701161 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.719960816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.220564006 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.634427559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.568986271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.644528935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.57115221 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.646142733 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.633500305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.284312683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.903752644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.104862146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.622182095 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.858724653 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.054680115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.873144884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.633665682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.55692453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.453610231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.644123131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.078804403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.467417818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557469434 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.285579426 seconds)
  done (took 196.828058779 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.408364859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.401737793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401156635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.432154467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402505325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422514971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.420294086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423265351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.40553346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.402020911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.418994841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.431059665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.401718265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.420547091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.403252734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403553315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419753467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.403811207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419523884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40386888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.419513599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.408841153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.401279532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.419575913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403565495 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.404758194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.403672365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43214003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417657309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.403117842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.404240719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403791398 seconds)
  done (took 206.484388468 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409483622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.409609078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.403002522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.409642037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402590328 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405338812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.405472693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.404131996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.404978835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.405086956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.412439489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.416917943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408211468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404776707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.405386193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.405053602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.404233781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421830305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.404221137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42657818 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.405722019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.405575742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421842548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.404335049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.404142328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.423992704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.405716883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421201488 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.418178032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.406369486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.405702798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406200655 seconds)
  done (took 206.417523112 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.60863967 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.412851748 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.414287834 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.368974664 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.414415462 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.413348209 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41039505 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.604186463 seconds)
  done (took 14.96697447 seconds)
done (took 626.009449965 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.730331219 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.440473069 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.614957325 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.43539135 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.220656149 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.452235444 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433927953 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.605390088 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.328747733 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.611298299 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.694393066 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447992346 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.836583188 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431715222 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.688135003 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.53551659 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.312530973 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.436765309 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.747894592 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.975362883 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.697508615 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.915056458 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.62451951 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.323300818 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.845105045 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.909918614 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.140897246 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.303154604 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.450598075 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.759570034 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.085927337 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.382525489 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495856106 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494974607 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.553060469 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.53127378 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.374605733 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.492663178 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.635462046 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.68825552 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.971787652 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.149976261 seconds)
  done (took 95.129436674 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.399704619 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.397721771 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.398685157 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.398849823 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.399862225 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.397955147 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.399037657 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.397746228 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.397321832 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.398412409 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.398509775 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.398783942 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.397692248 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.400419463 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.398904614 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.398475844 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.399373651 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.399848335 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.398024895 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.397696252 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.400756905 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.39922231 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.398481004 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.398760166 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.399409367 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.397603791 seconds)
  done (took 37.691532386 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417347815 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.669581821 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.826862793 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.424454133 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.418320804 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.422006421 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.496544184 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.420121334 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.421213435 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420289442 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.587797371 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.421725724 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454544347 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.85641912 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.420372792 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.420457348 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.420481964 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.41911454 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.677029472 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429957985 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.51903663 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.420342969 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496539698 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.430078159 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.442352366 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419956814 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.424676173 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.935867126 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.438490424 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.590217831 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.228561626 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.503290168 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.88842568 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.86004849 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.249557169 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.430089222 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.420964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.594979001 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.422800926 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.420596126 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.498212366 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.420784113 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.839978778 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.048113409 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439470998 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.423005784 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.95941382 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.613020588 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.667787417 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.429111076 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.862608022 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432657818 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.424062825 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.422438315 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.670375598 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.428974591 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.420538453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.956031057 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.445940982 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.500216048 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.424484544 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.422322755 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.6844622 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.421613966 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.674376858 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.424538222 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.430606177 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.441356719 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.841022274 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.425202597 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.068905812 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.440730158 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.424036908 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.592329935 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.675263275 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.000524438 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.445237379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.691679097 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907103243 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.517740717 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.426704677 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.927782666 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.521652393 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.428190231 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.427498935 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425916616 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.424364623 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.474822982 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.499209473 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.993906287 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073412863 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.982275065 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.524143007 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.437243194 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.424729357 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.9574068 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.443330241 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426296076 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.840401052 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.070062587 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.451238337 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.433036405 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.074478685 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.446995351 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.504031351 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.429811411 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.851624593 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.433763355 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.475224853 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.426393174 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432301268 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.44669454 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.504724389 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.429057036 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.426870479 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.040079493 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.617446596 seconds)
  done (took 186.519288768 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420965673 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.419468652 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.425057806 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.418061747 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.419539149 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.426802 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.419648858 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.41814015 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425292307 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.419266763 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418443859 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.421386885 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.422762451 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.425335162 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.432162634 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.426571208 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.075098994 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.421093585 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.421342701 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.41924529 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.221252621 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.420944328 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.42240489 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.421605506 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.420898562 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.422366705 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.430004326 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.442582015 seconds)
  done (took 154.631215793 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.428097164 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.992483717 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.445751287 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.560893269 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.449984775 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.426267135 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.55800292 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.486062161 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.446750829 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.426178237 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.426343817 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.73127748 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429913063 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.944877904 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.622200974 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.578885513 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.945690259 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446021266 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426058901 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426292579 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.560982164 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.432199818 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.73203919 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995276451 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.446640037 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.997141063 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412674963 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429437032 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42790616 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.998701757 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.444709454 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.735528246 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.507391465 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.490677041 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.015096786 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.964270043 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.963819628 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.579307974 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428700146 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.427129762 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.428418095 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.41368719 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.014167238 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.457163368 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430861455 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.002307521 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.45741339 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.43185219 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437405938 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.42793101 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.490733264 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.508253028 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.763621975 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026932224 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.534640651 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.451067424 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.563705994 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.818290765 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.431237407 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.948975414 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412329406 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.003735513 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450898499 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413829985 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.43179638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435630712 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.582217018 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.564011702 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.950156268 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.450874374 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.949681252 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.59944726 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.430229022 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.429768999 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.434368994 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.016340363 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.972048847 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.601412623 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.568681774 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.628607164 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.416325832 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431770438 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.416360545 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.510067348 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.430974924 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.008136904 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.968884209 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450495125 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.433985214 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.435276715 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.433729368 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.611196399 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.02469054 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.527505999 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.939559927 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.757336654 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.741407422 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435749305 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.493159727 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.45040213 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.744564549 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.43712885 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.491822389 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.886756065 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.7434106 seconds)
  done (took 170.114053593 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.678397125 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.648480655 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.524011094 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.565597206 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.03208755 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.995241572 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.679548132 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.57408541 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.544567537 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.694013119 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.590627504 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.527671553 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.603439796 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.507879559 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.158825713 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.520736669 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.54289314 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.58713592 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.5475608 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.460957365 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.081916221 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.716539067 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.604124189 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.406983756 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.527817411 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.224401857 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.996193124 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.980907659 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.611400127 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.761630065 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.973663569 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.576618277 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.395365382 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.112678062 seconds)
  done (took 68.296119685 seconds)
done (took 713.699819146 seconds)
SAVING RESULT...
DONE!
