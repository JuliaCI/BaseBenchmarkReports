cset: moving following pidspec: 12065
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364392475 seconds)
loading group "string"... done (took 0.580825065 seconds)
loading group "linalg"... done (took 8.209333294 seconds)
loading group "parallel"... done (took 0.185222372 seconds)
loading group "find"... done (took 1.268573546 seconds)
loading group "tuple"... done (took 2.044402307 seconds)
loading group "dates"... done (took 1.316006798 seconds)
loading group "micro"... done (took 0.200766862 seconds)
loading group "io"... done (took 0.948459607 seconds)
loading group "scalar"... done (took 40.724030339 seconds)
loading group "sparse"... done (took 12.602440511 seconds)
loading group "broadcast"... done (took 1.041153451 seconds)
loading group "union"... done (took 14.825793026 seconds)
loading group "simd"... done (took 5.002299888 seconds)
loading group "random"... done (took 9.902193331 seconds)
loading group "problem"... done (took 1.623557275 seconds)
loading group "array"... done (took 22.482730961 seconds)
loading group "misc"... done (took 1.850593493 seconds)
loading group "sort"... done (took 3.454202924 seconds)
loading group "collection"... done (took 19.112653609 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540061197 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128763061 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140157324 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123550504 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153497681 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119256495 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128143093 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086345953 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.886454687 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150436253 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115727705 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434119474 seconds)
done (took 5.40341479 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17187222 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090445276 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079344029 seconds)
  done (took 1.231891501 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067183677 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127714878 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067318564 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069224551 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06910059 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068520776 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068392974 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067999922 seconds)
  done (took 1.60002859 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073478593 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070172595 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067780177 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070023822 seconds)
  done (took 1.344298166 seconds)
done (took 5.48582085 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.800606004 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215345357 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190188546 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41041667 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139588279 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184188409 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659575993 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342454702 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204411805 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098423166 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116078788 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.368744382 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12745418 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650164957 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078510184 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098009304 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142466169 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427336693 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072346543 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089126156 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093330002 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131401824 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091806633 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076371634 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151060288 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070306003 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143286779 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084399731 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069241795 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224376921 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177484275 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677884572 seconds)
  done (took 10.50533829 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101836984 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099522572 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07119769 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127487652 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101740674 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072598014 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077523359 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069735978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092704265 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132734892 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094794468 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111242731 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068694791 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072276462 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085509896 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200228392 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080215371 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081799638 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06874516 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08441853 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111295312 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082409773 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082612618 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082467217 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13225941 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173407928 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099166224 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098596731 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06977141 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084257713 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118315036 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130526639 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067240477 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068503388 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128826834 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097838649 seconds)
  done (took 4.621981206 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.101018252 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153446742 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093695179 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144311837 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067464413 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115613707 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067989778 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085840027 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243244908 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.401565084 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.639950382 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152822099 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120512444 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108643235 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073369644 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072008883 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070208312 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.260552023 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104603513 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121097254 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086832445 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072867634 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072324133 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067176147 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074205547 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066176429 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071271366 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090989234 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078238321 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333512889 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130797358 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07092193 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.842654411 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170456669 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06993512 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107905722 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169282801 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096706318 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145862453 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069423021 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065882204 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161817099 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066044766 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.210416947 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069787413 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088556776 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112875354 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12284381 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068008853 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069160992 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170156485 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06744668 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084116433 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.26325494 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153303719 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066447272 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299667668 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097337053 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074713228 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067574554 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.197383947 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117837898 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069363478 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069830233 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071111007 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070799863 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.391945586 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067760012 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.936171961 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071474259 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079234154 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073099937 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073083055 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081467564 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081930582 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095231229 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069919384 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07663286 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06886257 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068219342 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069224008 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095785952 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096425785 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068012996 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.398251678 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070045521 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068527552 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074403515 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066641931 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09615358 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101417893 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069929849 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068064999 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104198316 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065412074 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072189614 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068421144 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069894791 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121996376 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072585428 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115217083 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069421188 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183386371 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09778676 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07074888 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102168154 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079231904 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073630184 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.469433489 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066345478 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074408977 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067804842 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069650345 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068960612 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081528643 seconds)
  done (took 22.076222281 seconds)
done (took 39.367265307 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246727089 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085147534 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085899125 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086255398 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086314314 seconds)
  done (took 1.739161232 seconds)
done (took 2.872257883 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129850907 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105173582 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06618397 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100086412 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066910929 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103401715 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106171646 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086073774 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102247105 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066842519 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100008068 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06690216 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066501899 seconds)
  done (took 2.312173029 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08198836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084336474 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070643134 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083614197 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063982805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083452314 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082591169 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09080553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082911212 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074202763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064899393 seconds)
  done (took 1.98903685 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082458114 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08524267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071083559 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083434462 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064525097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083653869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083493248 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087212151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084049166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075607816 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064650597 seconds)
  done (took 1.985812221 seconds)
done (took 7.406904013 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079122153 seconds)
  done (took 1.189584556 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.539272868 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.587922789 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079606355 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103989204 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197491134 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111831776 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238539854 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086501028 seconds)
  done (took 8.233433974 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096892244 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071406012 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083247209 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071655798 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072698633 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072263392 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071068078 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072799664 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071315627 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072445625 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072053111 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071082039 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072383545 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071098418 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072118456 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072909176 seconds)
  done (took 2.37921224 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099129177 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097470909 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075740978 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077208697 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075061448 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07454556 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076608926 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075908859 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073433617 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075040517 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078065767 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076099547 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075414864 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066189334 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076601494 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078916847 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073964444 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076515161 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077184874 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078306021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078011891 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066369446 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075573812 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076684154 seconds)
  done (took 3.078283077 seconds)
done (took 16.001279657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11661747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080366248 seconds)
  done (took 1.315727658 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078140403 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081658967 seconds)
  done (took 1.28599274 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077493295 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064375636 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086108878 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076160111 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065687369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065114302 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084569522 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065811915 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06504363 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065261443 seconds)
  done (took 1.841762006 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065059066 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07496188 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071231385 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080965165 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071944132 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066022489 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071089232 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067591823 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076359204 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065508547 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070671171 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085884114 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07061532 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087246186 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071024719 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069925301 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07188596 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069170659 seconds)
  done (took 2.435383397 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063431536 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065220663 seconds)
  done (took 1.26052967 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06638379 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065371114 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068215158 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06765036 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064993732 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064466451 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065510323 seconds)
  done (took 1.59124879 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402902393 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125241419 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328394614 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072264465 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082639236 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256067433 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066629186 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071559067 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071739429 seconds)
  done (took 2.655136222 seconds)
done (took 13.524053244 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080487008 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087984581 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100580711 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418527051 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095660979 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069900687 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115813448 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182489782 seconds)
done (took 2.297883885 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217759683 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.860672414 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.482892751 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213972675 seconds)
  done (took 2.696740517 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345883594 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08299136 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079316852 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069334843 seconds)
  done (took 1.726142466 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066832133 seconds)
    (2/2) benchmarking "read"...
    done (took 0.186668781 seconds)
  done (took 1.399817035 seconds)
done (took 7.188123241 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065435682 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092297506 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065532844 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06636463 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066440433 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066225798 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06614556 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.066288685 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066743114 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066007229 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06631712 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066324125 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067325835 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065971563 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066472789 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066734384 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066481785 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066686526 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066653892 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066412033 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066629451 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066220019 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066691266 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066505202 seconds)
  done (took 2.798383442 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082007231 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068620164 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07012036 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069944407 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071136343 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070155054 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070524472 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068591363 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070560157 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0683287 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070820493 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07080039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068399428 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071461257 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068428099 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071613167 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070558733 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068838443 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068244455 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071296482 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070134862 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068537546 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07104278 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07043911 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070800958 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071151288 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06862587 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068819839 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070315919 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070758722 seconds)
  done (took 3.261649806 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066191409 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061192582 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062832516 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071445465 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062713592 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063382831 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062898743 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062526205 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063176865 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063058208 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063819703 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063220617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063667356 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06311071 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063217062 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067201173 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080174472 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063240503 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062719259 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063024923 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066952162 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06238891 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062553275 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062608263 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062259347 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062116028 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065691362 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062762049 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06316484 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062565096 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066418706 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06685405 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062380722 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067646783 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067191422 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062926156 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066785405 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062824598 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063132132 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062084429 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062315543 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062827179 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062456227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071791686 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063199407 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063911504 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062792917 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064208537 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062758469 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064603506 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062101585 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062018908 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064279608 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063972554 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068109845 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062298942 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063117363 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062138059 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063567656 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062623547 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062717011 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062090754 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066366325 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063353197 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080038821 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071464761 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0627187 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063707309 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062803346 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065558409 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064128208 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078025113 seconds)
  done (took 5.804893463 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085314483 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089334676 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068048565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067761443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063272547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06317646 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072084897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063292459 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068096929 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082901809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063854761 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067674848 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068034917 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067330138 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063576205 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068307668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072097804 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06383843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063540072 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067326508 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063623331 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071482531 seconds)
  done (took 2.687984208 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149787346 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069188963 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108331338 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074656181 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072250188 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074363471 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069528224 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069758466 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069953757 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071009167 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070496282 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069382093 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072360201 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070383105 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070612871 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069935998 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069676401 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070243597 seconds)
  done (took 2.5502279 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078218293 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068890894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088233395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068689713 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069249814 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068442489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073178779 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073907249 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068785779 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068823823 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073689698 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068627238 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068499558 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068854434 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068543781 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068938926 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068148842 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068807736 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073940425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072920603 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073541649 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073806024 seconds)
  done (took 2.734029107 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07805308 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077371613 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084574108 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069921835 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063309425 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063683402 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06960026 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067866261 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069793698 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067708286 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068183848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063092871 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071098443 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068340959 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070840244 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068462313 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067476322 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068645847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067587645 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063407753 seconds)
  done (took 2.546650821 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083424305 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066376821 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066301666 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072057262 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066246345 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06609753 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073196792 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066275564 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066307978 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087439437 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066975472 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066762182 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072967674 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07035419 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067006771 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072935201 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073248726 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072883593 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069827446 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066846119 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087667878 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066642917 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072793009 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066665901 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06642704 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066696102 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066495951 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070688129 seconds)
  done (took 3.138135256 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064863288 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065637745 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066337893 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066102753 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066426763 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065997135 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066258917 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066148813 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066048791 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066557162 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065999459 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065979313 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066470065 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066291061 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066156394 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066542441 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066867656 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066451976 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066544738 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066256665 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066072243 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065799999 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065946659 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066198471 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066294838 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066374941 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066461012 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066327238 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065753013 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0661655 seconds)
  done (took 3.149132099 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075076307 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075560026 seconds)
  done (took 1.317357038 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063579659 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079756739 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062242793 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074249958 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071684104 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066634224 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073253414 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072209993 seconds)
  done (took 1.723952509 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08610289 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077479561 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066397031 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078420346 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07649813 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086357722 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128660702 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065296695 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075772448 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066159562 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083917358 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067638899 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076205161 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07056009 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075893823 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07976363 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063020589 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070730295 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067088746 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063647826 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066479232 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079513263 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075068284 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063583726 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070670715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093356039 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082335784 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064860354 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072665681 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078371035 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075685202 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062315493 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065781363 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065758941 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063532815 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076738844 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085002926 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072665478 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078240523 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066062459 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073601421 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062992962 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073953038 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076001987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081182277 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065922835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065077652 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062839383 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066105806 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071674641 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06289363 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070029707 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062955076 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077506417 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072792402 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080366802 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063728476 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071006884 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071547393 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072431673 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076466177 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071294409 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074573495 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064926553 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080988916 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075274506 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077326957 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063118913 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062428682 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064018099 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079669429 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094543229 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075312124 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065550761 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065759872 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063010614 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072272784 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065557853 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074491168 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076534558 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064960344 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06954232 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077231539 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069815613 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071649964 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071514304 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063531218 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068198089 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066217107 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08564268 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063909653 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062932733 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066031766 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080261557 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072076698 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067086772 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065975387 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076732639 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062607108 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065128242 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065957685 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070921405 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078870131 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069427867 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069690625 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078363355 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07426885 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070374743 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071472685 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062235205 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065203952 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066840149 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07609186 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061723624 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071427607 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067854358 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064386215 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076277286 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062631399 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064176223 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076549737 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075795567 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062549198 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060912044 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070648781 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064092647 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06589981 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077534607 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062461087 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062441928 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061876457 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071816736 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063250175 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071835085 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067576584 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071850679 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.188718592 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064288898 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070611994 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078955525 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069367403 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071635563 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076042658 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072108822 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064772197 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078188572 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072306111 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06737887 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075122356 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069469463 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063331316 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067894508 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072089285 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064239694 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072560613 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067782041 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072277651 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066225419 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063650476 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07172345 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06598736 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068187553 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070767583 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065264464 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080663423 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071613691 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063481426 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062294107 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072113312 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066928308 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064668124 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067671938 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071916283 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065270677 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06377893 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064819474 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071203039 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072819241 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068233716 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065635585 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074529274 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082988244 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065116645 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071826167 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064855082 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066108974 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066060417 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08034505 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075755599 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069353936 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072012028 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062576398 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075011082 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077424327 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067703341 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063529776 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067576728 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068815079 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077389021 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069105811 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065510179 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06401424 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07082295 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067543752 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072472926 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064563316 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067543395 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070655237 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063732078 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071129855 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065624959 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079849744 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072340982 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063200651 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067710691 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06371593 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07620618 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063134726 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066533099 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067530164 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065666584 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064286564 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072441747 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062167713 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077818135 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07849446 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070736706 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067291029 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064726687 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077292288 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07063888 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073044377 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072333759 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074892566 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08049677 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067290413 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071878988 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080998279 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064716776 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062582797 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077007314 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063777942 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063625594 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064098526 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063449974 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072028486 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072025329 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075409071 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062670912 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071889927 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063930204 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067373891 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063305991 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073908894 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071908161 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069245794 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077069498 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065544121 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064450772 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071420807 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063761724 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064728642 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064769236 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071233717 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06423992 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069999589 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066448801 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070208287 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066311143 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062326964 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070540196 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064024603 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069712815 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0727136 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063565279 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069884926 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070982468 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064383191 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.201622116 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0702498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068538291 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073417365 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07196668 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070596018 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072582881 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063430885 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077311465 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065638961 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078315883 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070364018 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062972559 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070637137 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072032668 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070052304 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065929473 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065742177 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070628377 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064401233 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07233374 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077178973 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066616715 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0811438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077328805 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071140186 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072039218 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070742181 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071126996 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06766827 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069089012 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065211891 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070366477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064971797 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073614044 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072248787 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070998387 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07132456 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065697798 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070902242 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066329629 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06319034 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068171898 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067550686 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065026222 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078272269 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065843959 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068064449 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064148696 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066411169 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064979348 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063257012 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072570467 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073232699 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065855647 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076067315 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067927368 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071660041 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08156217 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063060804 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063934696 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063262917 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066870935 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078047306 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06563879 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079289642 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070877161 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067789197 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06279633 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065721218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064060781 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062877871 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063373712 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073701111 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067882744 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064672235 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065355238 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072511309 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066052918 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078252312 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06448229 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069424195 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065237032 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063294618 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067469953 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067575516 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072059564 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066004973 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066830795 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06283607 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065362006 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069558571 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07118866 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064940579 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070701921 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077443956 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064803583 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071889684 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067593797 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062901636 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072125325 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064611138 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065002991 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067415507 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073379541 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072817376 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065871883 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079669648 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068073364 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071592055 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065137695 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062860429 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064529325 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064507133 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064548927 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067722005 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066683279 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078598485 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063894123 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071961132 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070384433 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068599959 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075491997 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065830824 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071565408 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069398406 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066185708 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070649919 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077738944 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068039847 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071797765 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064384905 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069950967 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073911352 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066801163 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075753431 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069254643 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06462083 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069638994 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065191623 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063783337 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063943157 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063171847 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073706855 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064373982 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066541884 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066879679 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062886249 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068482045 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066340692 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077020415 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071380305 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071521472 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062383517 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062495331 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064903136 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066413328 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070229628 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072045641 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074689128 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071113465 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068620067 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063749072 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078686528 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074289044 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072347378 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065804135 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072296904 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064849886 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071322046 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069249454 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069429977 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065687464 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072077516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070702478 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066962247 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074915058 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07226438 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065457818 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07070916 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07050091 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069606294 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062674548 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064381356 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071884144 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073410176 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071488712 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064019616 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079472379 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065121569 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069007046 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066611232 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063914086 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072462382 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062033628 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07060998 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065117355 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064911741 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062312664 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066605885 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065511288 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071307884 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066295516 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062182204 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07935868 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078255103 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070529437 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06318698 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06317872 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0624036 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062083148 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066874383 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065404781 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070604983 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079065059 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066484652 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066296608 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062150123 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064483102 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072117236 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072263069 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062135197 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062451216 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066737913 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070718492 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075556783 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062852436 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063762746 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071537049 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070581151 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062029985 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066850229 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061649893 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071364537 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080329445 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064199089 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070601384 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073755466 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076418254 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064157843 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062561764 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064301736 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070389278 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069797162 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065109024 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065202729 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083554408 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071918269 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067587147 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063774229 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071819789 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06675168 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078154357 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06456808 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068345411 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072533432 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070678127 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071035606 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074564995 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074941594 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07065276 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070229802 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063853663 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069523407 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062985157 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067046056 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065008369 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064591579 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068613968 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07014284 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066957167 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081728913 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078034494 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066580289 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061532607 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066900725 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066987481 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062922078 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065567858 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062587419 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063120596 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062724932 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063399746 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070379469 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07431176 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06865402 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064981746 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064530371 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062289981 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074196706 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.316417257 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073794253 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064573407 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067715596 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068629105 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076010169 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070732993 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069615167 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075241532 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075377359 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074763989 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066158086 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08084397 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067812919 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075609089 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071156667 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069143381 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068158758 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075504619 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07180049 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068883507 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074833824 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074951054 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069337033 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064909254 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065073414 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07664762 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06560675 seconds)
  done (took 43.132644178 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104443368 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067835517 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066339856 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066410844 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07591334 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067379542 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066230117 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067778847 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067710234 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06940156 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066662664 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066494158 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073962956 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081279284 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076428136 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070123286 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065710493 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066868177 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06562594 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066901987 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072816358 seconds)
  done (took 2.796885419 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07022884 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080948086 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0771715 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082323914 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07373292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070004691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077975388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070067306 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078029198 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075927893 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077834955 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070122694 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075433324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075510362 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075749897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070990969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09650352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074356166 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069507268 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078279089 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070281465 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077996506 seconds)
  done (took 2.945735657 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06453059 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065416205 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072577286 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064038318 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065908157 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063857237 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068404375 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06424837 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067618734 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068406362 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06794491 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068028797 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07289336 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064483374 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06962306 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063786644 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11029046 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068264315 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065843867 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066491819 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063854498 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073377953 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064365942 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064256411 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068385098 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068684088 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066092962 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06417308 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065776453 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068301535 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065838139 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064420368 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072735585 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071955857 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068618514 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068316807 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065474063 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065823364 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067097334 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065046378 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071914188 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064718893 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066166922 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072769435 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064106644 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064000895 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07234007 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065094446 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063837163 seconds)
  done (took 4.627992736 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074626388 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113685783 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070459337 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093429041 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079237537 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072076223 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070520894 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095039533 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065690275 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066557192 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080334424 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080956023 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068094145 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069467427 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073036979 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068419259 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068897358 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067407847 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071269953 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067727148 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071414816 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072370049 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079322385 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080089438 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069057322 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066986994 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067430831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069453015 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079275672 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072072704 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06977678 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070525679 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080151497 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071731236 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067385291 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06718024 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079924937 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067648072 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067387303 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065715856 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067127635 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069298655 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072072334 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080904439 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067919834 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072990199 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068049569 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065436565 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080106674 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067984111 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072171045 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081384744 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069031559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068419231 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069758981 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079725357 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068093471 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066454771 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06789104 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079460409 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065797432 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0690108 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081413793 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06770204 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071928665 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081337545 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073589098 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069436744 seconds)
  done (took 6.40580436 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072996645 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09734609 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082537167 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081808493 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075810658 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075971706 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076624074 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075820853 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075520186 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079318317 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075799446 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118072518 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072005573 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07766008 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07624816 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076572724 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076095578 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076796758 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075962612 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076467848 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076337516 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08250583 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076708839 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083083629 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079609679 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072276381 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075885536 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076302448 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082478505 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076008022 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079229767 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075918027 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075822426 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082616815 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079214061 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076082245 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065514158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07649079 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076042724 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07615731 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072089614 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082509601 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075848271 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.0716262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076095068 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075776287 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082285422 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079285321 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078088219 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080579277 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075841364 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082785666 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076671489 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075752878 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08229685 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084457541 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082118538 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082048521 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075952815 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081865691 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081912152 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084922577 seconds)
  done (took 6.205052561 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077599575 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072561891 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084390656 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064251394 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066420744 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074996471 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064161726 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064056832 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072437848 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072814635 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074718156 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075052237 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077098797 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074571475 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074639788 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076825221 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07536918 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075186164 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072461907 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074502719 seconds)
  done (took 2.790653433 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077028216 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083361767 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070053263 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074733427 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069571682 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074734423 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069386148 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06957065 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070232554 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069820623 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075810092 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075737991 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070404364 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074828584 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075519392 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075091679 seconds)
  done (took 2.490021877 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083273456 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.0725382 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079742921 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065670247 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069359522 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064610081 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065433524 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064160487 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064928541 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078404033 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065351246 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07670844 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065309137 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064357363 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065020545 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071641012 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064281196 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065397783 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065096761 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078340731 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073403386 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067004873 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06932462 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065744064 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070702085 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073067767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066763238 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069013396 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065229672 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065678314 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0714101 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072377915 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065048916 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066617267 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064773432 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065487295 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065274118 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06591709 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07162575 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065550786 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083890564 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070430288 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06517887 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06609167 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064312594 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065611511 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064408551 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0715659 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065887339 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071440216 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065544216 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067599881 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066013317 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073713611 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068335358 seconds)
  done (took 5.093282096 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078615973 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069377145 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063935039 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063347792 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069304498 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070235679 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069204585 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069699304 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070478843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064552399 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070360062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069241116 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070321577 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069962106 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070455944 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069736684 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06378276 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06966852 seconds)
  done (took 2.569755639 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073267164 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069017483 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073915301 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068846797 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068702844 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068347608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064027392 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063868233 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064630432 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068847618 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068812098 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06853506 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06403744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068513133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068763184 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069099227 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068434466 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064435063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069020045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06401928 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068866828 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064393463 seconds)
  done (took 2.808430662 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097116771 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085777155 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143920796 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081562009 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08971664 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074738902 seconds)
  done (took 1.893497303 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093083857 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100948445 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069427797 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068955264 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075450745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072430853 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072648886 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072795687 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077096791 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077913716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072919029 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079950856 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077142158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079116602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075048743 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075107354 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072712114 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072792911 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069770353 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082580165 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073044266 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077626389 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073115341 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073063936 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072903561 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079581139 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077477407 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078181081 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072726093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077692471 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075212081 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073202168 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077655166 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077720996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069399026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077388194 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072727533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082573581 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075384923 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079219522 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069363474 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075467553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077248485 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076474049 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07762245 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072814471 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076635567 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073044431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072986935 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087693324 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075055244 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079870961 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074987982 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077784404 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077768501 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084224818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078227797 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079599208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07561052 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077821128 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079270108 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074925829 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079252869 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077764295 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075253762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079222477 seconds)
  done (took 6.382582954 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104589564 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070326187 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073325181 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07764317 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079328248 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073192988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073250563 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073207878 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072911212 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070074025 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10879352 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07350456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079782849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079724243 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073704441 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072820303 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07300068 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079977517 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070077829 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084336198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072955524 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07913884 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079421274 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079078981 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0775837 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075899514 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072751061 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072998385 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073109308 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072736291 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077257854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073281505 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079902408 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069756983 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079637107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073519263 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072863672 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077453032 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072799487 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075060114 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079510988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082537143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072642899 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072653047 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077631288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073014846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073040482 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070172016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072619039 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070464694 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077822029 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077975505 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077554552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079836931 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072776625 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072980575 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073020294 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072718287 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07313579 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075327184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081211355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07304944 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084161969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072974382 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073074706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079788068 seconds)
  done (took 6.377693957 seconds)
done (took 129.379688882 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210545566 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18489453 seconds)
  done (took 1.70462986 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074075398 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107699601 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085703003 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136434315 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071781892 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108087802 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105087581 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083956588 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073806687 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073966551 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074020504 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07629 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139305757 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072017585 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073629423 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076573464 seconds)
  done (took 2.763495332 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104899272 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.221681393 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111895392 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071104607 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107486476 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07985453 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072170988 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088616811 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078489478 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0732614 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07964838 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077519208 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072852055 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077855306 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077775148 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07969867 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072970864 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079954212 seconds)
  done (took 2.963839247 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102636341 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097164779 seconds)
  done (took 1.53646432 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.17996299 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136135379 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204180989 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345767515 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153521728 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.432563675 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144867679 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139613347 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117532022 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135478276 seconds)
  done (took 3.319037527 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104258439 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.203813349 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30422263 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124840123 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078266531 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11405417 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126282714 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084206283 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083971369 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083513734 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083576535 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080915146 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103409581 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07918125 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078379953 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080896401 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107198832 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07776912 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078671692 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079423515 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107659227 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072898345 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079293191 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077562993 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081844547 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08154798 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073826263 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071913031 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078822686 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078595697 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082577116 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112462315 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081432396 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108882719 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076903638 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109993833 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081812764 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077712175 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078497959 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077468504 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081052261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080454592 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081344467 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081347028 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073644718 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081674989 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073612923 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072541874 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083594449 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073805665 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083353559 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082683972 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109120692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074076119 seconds)
  done (took 6.334887403 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110148259 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111014315 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073836722 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115886245 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108092084 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073390626 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109521516 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102456643 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111721999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073618483 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071844801 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07410789 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082968427 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085433565 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117499328 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109616987 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074108142 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073118941 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111630394 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111888218 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072662435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1050898 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101447774 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11170698 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072378616 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073980618 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071960854 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073260843 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07943046 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080595275 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073527933 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082164348 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08924677 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078080997 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069056176 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072227621 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072310372 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081329141 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08164539 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081406424 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079565929 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071173086 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071558317 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07234448 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072453875 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0709506 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080318252 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081398489 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080368488 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07213661 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073696074 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071689687 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072657123 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081009063 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079087576 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08202481 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081374271 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0714941 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071389054 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07368764 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082094617 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081177894 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08053247 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072934798 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081563302 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071560322 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085106149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084636169 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072005082 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072793767 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071043885 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071391961 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072142039 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078322193 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079802255 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072763978 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071186718 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07119047 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08101877 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079465401 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071272337 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078159875 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070061831 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071338425 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072299174 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072840575 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079197759 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080918689 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073226369 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071174071 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071514089 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070998038 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069998503 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078713493 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080571592 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080426687 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079908448 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072296505 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080650411 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079181696 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073021843 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080135481 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071156633 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07279434 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072091259 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079178912 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078201128 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080609822 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072015595 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070873564 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078706934 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081271245 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071604302 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07821238 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080770122 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079518244 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07009328 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08193243 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071682524 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080398078 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069277739 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216141355 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072878164 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081341339 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072499614 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071866536 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072548968 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080867925 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073307621 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072187446 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072244296 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071745154 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079878284 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084131355 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074621016 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079889024 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079930909 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07322792 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080040756 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072115245 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080893963 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073058933 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072379888 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070939766 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082945969 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072335866 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071353007 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072789509 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0818622 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0708265 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081278937 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079720389 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07134468 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085398364 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082343425 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08038843 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081658667 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07336269 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071685844 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071770507 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072754825 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079324523 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081263956 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073396433 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072006797 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079386383 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082813403 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071794335 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079810466 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079880015 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080138318 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072435715 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073148332 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083014313 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083283347 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080838935 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080814584 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081304821 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072740805 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079815738 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08047195 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072837089 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087819262 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072408293 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084619579 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080928875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079234826 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080886973 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082305381 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082519609 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082356672 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084450547 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071940994 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071276918 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080287096 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071798669 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071823364 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079265693 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073355957 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072721841 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085280288 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07031032 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081198599 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071351094 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081119737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071057844 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072646138 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085376639 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072518292 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072866268 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080404789 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074687913 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079320128 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082495527 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079959475 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071277976 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072604629 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080609449 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080906416 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071542987 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071547422 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073095313 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079426074 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078554628 seconds)
  done (took 19.101555766 seconds)
done (took 39.07151757 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215493059 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160501055 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.195759821 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120413937 seconds)
  done (took 2.124236463 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.109025929 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101091763 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090524578 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068061861 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09695337 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067974561 seconds)
  done (took 1.89789193 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.295690271 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207323436 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186150719 seconds)
  done (took 2.052805435 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213837304 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201967729 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475335849 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29114632 seconds)
  done (took 2.64304674 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144081617 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085188671 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066638244 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085810236 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126909524 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152235334 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095835493 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120525897 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078312794 seconds)
  done (took 2.374429844 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152480152 seconds)
done (took 12.629479756 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.123076347 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11267285 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.156183722 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.120928921 seconds)
    (5/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081488708 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.105567998 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093133147 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075404052 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.279723511 seconds)
    (10/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.261604037 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071126658 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080685367 seconds)
    (13/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07818188 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126572854 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073797721 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18707433 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079511048 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.20350507 seconds)
    (19/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090249583 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110411947 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.302385402 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077839495 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08104648 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106876574 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077076711 seconds)
    (26/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.170865695 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09191583 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107247009 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.225621435 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.218343067 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.215440937 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088018271 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.140962915 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096456996 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.201915501 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079156019 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127191134 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.235840977 seconds)
    (39/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.135541816 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076307417 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090808879 seconds)
    (42/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080202372 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066700164 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072491761 seconds)
    (45/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076948273 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067045099 seconds)
    (47/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077420324 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067597264 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173864407 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.218393133 seconds)
    (51/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.142291043 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208182352 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.164489568 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.235135072 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091387289 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.103595943 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.198729767 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.221759379 seconds)
    (59/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129789487 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.069033538 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074198931 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074747435 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075693641 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080650688 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110428918 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.202343746 seconds)
    (67/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.17090941 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06738474 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076848044 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07599517 seconds)
    (71/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095263864 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.210030624 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066531822 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068304576 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069036668 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.213733382 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.130651529 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183838324 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077274743 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147902831 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069134734 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070803255 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074121035 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 0.181530345 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078501481 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067727935 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075978609 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.174127968 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067916521 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.17857797 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.235008287 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100113929 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07721781 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11096045 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144257142 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070440329 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13222225 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070556121 seconds)
    (99/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.133641915 seconds)
    (100/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.178757694 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069562634 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092600232 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077068502 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069298574 seconds)
    (105/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.090688515 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175830898 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075219972 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075487365 seconds)
    (109/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178412074 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097058971 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089851583 seconds)
    (112/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.183073065 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068009435 seconds)
    (114/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.130095756 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187808459 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122538742 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068940486 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068587561 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074754685 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076952973 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076393446 seconds)
    (122/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.231883264 seconds)
    (123/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083642431 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076797074 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219360874 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068418964 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090973414 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068423654 seconds)
    (129/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080855901 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070901641 seconds)
    (131/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068991007 seconds)
    (132/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.095390525 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.179602629 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069917449 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078049299 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069141105 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076866961 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092088064 seconds)
    (139/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.133368324 seconds)
    (140/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068351921 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069291893 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075196376 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07786294 seconds)
    (144/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.081250039 seconds)
    (145/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.129393228 seconds)
    (146/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081081503 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078834823 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068828149 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087192516 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076003817 seconds)
    (151/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081339225 seconds)
    (152/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068507611 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076386494 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075314543 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126050483 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075845634 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069244389 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06967812 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067494653 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112811284 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068432332 seconds)
    (162/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073280228 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068671481 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066945228 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068706882 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177674664 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068561944 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175184498 seconds)
    (169/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.080982172 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.198382057 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141651034 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.185181479 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081948805 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068899414 seconds)
    (175/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07080427 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06918912 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068308699 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076472688 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.155669827 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126912311 seconds)
    (181/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076897694 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075149552 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093519493 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068337688 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068313993 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068648367 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06817593 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068524276 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068484723 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21586333 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140980985 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067119824 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077430418 seconds)
    (194/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089524809 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066671851 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069901073 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089489495 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075514982 seconds)
    (199/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122471117 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133804994 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136268685 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 0.246806255 seconds)
    (203/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.068952993 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070379011 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073895012 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172180345 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070712027 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079294178 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0697144 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.259810622 seconds)
    (211/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070650053 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06980497 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077760138 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081149198 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091344234 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069233105 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069029832 seconds)
    (218/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069633001 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131774808 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068368133 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.068528527 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075037514 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068648774 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081508984 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079151096 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077488795 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068725463 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140445172 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184922715 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.143302863 seconds)
    (231/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070843564 seconds)
    (232/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081223266 seconds)
    (233/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174402184 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076519221 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083722881 seconds)
    (236/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076485573 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187583618 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094283395 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070789909 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.069145692 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067885629 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077259133 seconds)
    (243/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067801225 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072938835 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.081620049 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14732817 seconds)
    (247/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090660901 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072077923 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11652669 seconds)
    (250/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096327751 seconds)
    (251/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071389076 seconds)
    (252/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074765114 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093349095 seconds)
    (254/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07692964 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184595481 seconds)
    (256/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.069251339 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067337224 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076869194 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147580193 seconds)
    (260/309) benchmarking ("sort", Float64, false)...
    done (took 0.135901599 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179500312 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068851648 seconds)
    (263/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06921324 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137659185 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070077562 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067924703 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081875324 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131355429 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068169189 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078004408 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068674293 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071756107 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091749291 seconds)
    (274/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.13979093 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075130828 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06822078 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069770231 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068965266 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067915198 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071414411 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068016007 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071768719 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068493097 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136451057 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092287918 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068379426 seconds)
    (287/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069201079 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068392614 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069147098 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067792031 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139331603 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077240503 seconds)
    (293/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069149627 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069295641 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075075733 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 0.135210205 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072309545 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068138167 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069588843 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093207318 seconds)
    (301/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.080435958 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075916511 seconds)
    (303/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.080540822 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067919071 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120786303 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067939366 seconds)
    (307/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067475403 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068317801 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071032358 seconds)
  done (took 33.936216909 seconds)
done (took 35.314037631 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084199155 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101569044 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076025206 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095772087 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083351348 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098688196 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076474357 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081113726 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083824418 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082333362 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081368885 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074983003 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077838391 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077569061 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075846898 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100695545 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082768958 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076904939 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076740469 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06800409 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076555666 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068504576 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067465749 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075554736 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07990247 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075981792 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078393245 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077818478 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069695906 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068917786 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073638494 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077496641 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068813235 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081011103 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07719793 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07692029 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078591904 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08116771 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067948129 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068922443 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078093384 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068248338 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076313514 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074879881 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073060205 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075073323 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076760201 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080728844 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100306858 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073553258 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078574425 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079032302 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080326385 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073913282 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073101611 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076276484 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074427566 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100391009 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076758768 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073726106 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077746392 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077535018 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075012995 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076237557 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076396422 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078805278 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08020367 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074260077 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07847512 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075071764 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067960622 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076017291 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073088187 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068046941 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082025268 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081122367 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067538336 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072475083 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076480804 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076799335 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.0678692 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073296903 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067399503 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073406342 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073373153 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074972389 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073502143 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075564975 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067675804 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076641731 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075379005 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075714918 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067848542 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081013488 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067938325 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074165468 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067912125 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068046394 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067499193 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073379449 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067659786 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073346814 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076447692 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067364897 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072947581 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08148266 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067971634 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074912564 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066881583 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067422647 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079545556 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07828089 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067853568 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073577682 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067830699 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073865743 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068267036 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067599904 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067600815 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067854517 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072356769 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06809992 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072915449 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072909738 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080232785 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067783541 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072642568 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073296101 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067606766 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074707664 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068650233 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068063839 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068100673 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082037021 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073411266 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068042941 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073443455 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0734501 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076216675 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067339603 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076502655 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073932759 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072538412 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074153105 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067322373 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078619588 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072997314 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072777152 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067366689 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068081955 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066636205 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06738651 seconds)
done (took 12.881664925 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069581398 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.120958966 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09626528 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096448382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085903757 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069446596 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076724435 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.094940786 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071117762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099830496 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091238165 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092638359 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113169413 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068337861 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069295222 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070404793 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070174914 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081083912 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097389188 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092441292 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.110024563 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06915689 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089253087 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090328435 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087069203 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094640474 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070357937 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070469058 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071835529 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090456219 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095493119 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072037574 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069816985 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093642311 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088650229 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083481998 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069738695 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078436645 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0701427 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06866945 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070676107 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090846204 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078436369 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080774543 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070798653 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077957268 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070285356 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085968599 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088665466 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078429869 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085467184 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09436387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073347281 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086595852 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068118311 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085688959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079045175 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070061359 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069627845 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074366195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069462774 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071448666 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081155938 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078677566 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073989859 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084334837 seconds)
  done (took 6.826516489 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084735505 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09966935 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086151088 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086667335 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068263123 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069404431 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069372965 seconds)
  done (took 2.035219375 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067086858 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08743566 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091740683 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093638547 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085966951 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094262425 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077046193 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069811477 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098768449 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068345723 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089616513 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101255476 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073244046 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081616468 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094699671 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069547516 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094692705 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069151698 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070030373 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093890572 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074416639 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096751975 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080881991 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069351296 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082703075 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069635402 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102960736 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077686032 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070850036 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070680151 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070717779 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096976563 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081826007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084136189 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070757491 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085085727 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083495848 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072468926 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080527919 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079199315 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083330093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070573681 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06823195 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070711281 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072329124 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081258541 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068302883 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070783838 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070852782 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089173644 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068281655 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082231724 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073451883 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07542561 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075280123 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074451203 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078140824 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070936428 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089344386 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07079801 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086986926 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086406005 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082810665 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086515627 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069540848 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082170114 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082978658 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070462977 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071757774 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071258228 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086395649 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072773601 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071165677 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081362585 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069162907 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095375596 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094190228 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069141278 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083483968 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069877652 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070894672 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081038227 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09370695 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075227377 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070445291 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073938207 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071675395 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072467193 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068258288 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073073053 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070795473 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074616889 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070190722 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073054626 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07168357 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086336831 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068404758 seconds)
  done (took 9.08276368 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06926203 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06997937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071810368 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070603967 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070703516 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070256189 seconds)
  done (took 1.918846551 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090484142 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070214244 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083101327 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070428485 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106449291 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086252276 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08676899 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080284843 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084131824 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082095294 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08684013 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089512087 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091284641 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072736957 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086397624 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071915732 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086030356 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075121856 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081235216 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073309989 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084088864 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073429174 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073147769 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090414016 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074878408 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071801938 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080157352 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081902863 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081944579 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080616041 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072568166 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074388557 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079063294 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080160239 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086341159 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078844144 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073276244 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077047431 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073480461 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074158209 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088833038 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073325344 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072747236 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076653907 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08025498 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07929035 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076705911 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079231484 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085653085 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07713334 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077500377 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070932765 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074321874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077039221 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078925276 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080008694 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07679887 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086818804 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072476398 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078737593 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070127418 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073980559 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079666743 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073888152 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077877938 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076995524 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078413665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073307519 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073021088 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070264628 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076888789 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070149746 seconds)
  done (took 7.143099151 seconds)
done (took 28.496159582 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.519294631 seconds)
  done (took 1.970032734 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620384969 seconds)
  done (took 2.100213928 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.676034898 seconds)
  done (took 8.147467795 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398416362 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468673698 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.751680566 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136099479 seconds)
  done (took 3.26420471 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702394947 seconds)
  done (took 2.186396277 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23394268 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23141335 seconds)
  done (took 1.958265318 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.345968526 seconds)
  done (took 1.824040738 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.065522991 seconds)
  done (took 2.543073411 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.237707411 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161485656 seconds)
  done (took 1.878661033 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448965865 seconds)
  done (took 1.927092783 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.245699187 seconds)
  done (took 5.725046655 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21449682 seconds)
  done (took 1.733535273 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235854035 seconds)
  done (took 1.722755074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.738968044 seconds)
  done (took 3.223751382 seconds)
done (took 41.697401538 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082711001 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085230915 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084905869 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080777434 seconds)
  done (took 1.800182402 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074451687 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073168 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076434614 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072389868 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076709604 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072847287 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074181637 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07555109 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072471242 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073020845 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073005287 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072926035 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076160879 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074497612 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071639715 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07616665 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077020887 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072821561 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075944193 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073039014 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071257057 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076222387 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075671008 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072203374 seconds)
  done (took 3.263944248 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07821049 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074906727 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077649648 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074323175 seconds)
  done (took 1.799604607 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076912602 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090853463 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089593584 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079475624 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091187616 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.0865576 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069751439 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069190098 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070420252 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079255958 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06846259 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096256977 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089133055 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079571464 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081282932 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065880833 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06814019 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087601046 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080194332 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080311608 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070716741 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079475725 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068303651 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090123612 seconds)
  done (took 3.397758522 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083665157 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068204398 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086139837 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09566929 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095927716 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068565365 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085062648 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096218236 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141413057 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068466355 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074048367 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068537704 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108289659 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068581069 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085652955 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111738826 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11514844 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071970778 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101986421 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068729336 seconds)
  done (took 3.261823389 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083564092 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071312673 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072561198 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067852923 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077998028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075199028 seconds)
  done (took 1.94913911 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068402938 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069955542 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070382218 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069129013 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074730236 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069303561 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.07100831 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070174796 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070109405 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069958857 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069564973 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068554225 seconds)
  done (took 2.338054823 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209013169 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073278054 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073990048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068992841 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075039316 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069243648 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085229789 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072102284 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088835133 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069395935 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069738291 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071772959 seconds)
  done (took 2.52379559 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18921404 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076516073 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224409058 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146086125 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105357378 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112217617 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112089866 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110223001 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135451807 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099739815 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155364142 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162213386 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106229423 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129465457 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090210483 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123898636 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146437268 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155897976 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102312214 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156015472 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138532468 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122578905 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143022495 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099539447 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104303773 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119075545 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073676024 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079434144 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160360109 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125337568 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137978823 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107097544 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09198789 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170832539 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158544775 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13437554 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140756068 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083956626 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.120246394 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131151598 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194693626 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089645548 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153619247 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105414335 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080370212 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124259378 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112823801 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116265162 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102349318 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088546921 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277239771 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17575207 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130618561 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08655661 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117748211 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106866446 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111537316 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114218514 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171085111 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150663733 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121086724 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071570179 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107265649 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143928395 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12644062 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106609954 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120118593 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092466003 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126542767 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150180254 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127984209 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135655852 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11394439 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087426693 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115858901 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132809799 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123493738 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161774684 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11588441 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072936619 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11841485 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098347853 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079982445 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145435568 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076279897 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165828965 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098532322 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.123270045 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125898216 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10747825 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107081367 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152299134 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136516629 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103870482 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08645937 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101942518 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117427865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139147665 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087220353 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106725845 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112631025 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080237441 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12961591 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07512925 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114487819 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09513663 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115220985 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119957328 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079321179 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264576677 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102241649 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100738086 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12513588 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14929263 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087933659 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081025073 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157815591 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116457074 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102524515 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137406357 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150823132 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120903783 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097024803 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143074562 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165781046 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090432009 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153601849 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101690954 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08368948 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105532678 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117602804 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108986971 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121136155 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081264632 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115397566 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156246536 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074928726 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096295814 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126291917 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081076203 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080658141 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103177299 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10291124 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096312528 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100330339 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103160403 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132539192 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11719574 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10307134 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120278543 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097031276 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159068236 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087240985 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100576841 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10349028 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072614464 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128834872 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147654388 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079688479 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153004628 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119828874 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113238283 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114918474 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082191705 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132036899 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07898402 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073600457 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134939928 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109305296 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106230279 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143013852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260887027 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121858786 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114679541 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12708951 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124354187 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123655881 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105551257 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088851795 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111307142 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126199564 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073289268 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09164609 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082494806 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101357185 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094028068 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084328371 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134910383 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117737343 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105226362 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111633547 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095456682 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142633521 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078676364 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11958422 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118273135 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094248435 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146618515 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14450369 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125636321 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100315472 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13215498 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073456455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075050007 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089001955 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120157336 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084162735 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084417744 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11184235 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142989263 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122741481 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131586659 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119326086 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114000448 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150413263 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072896783 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118393196 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138078167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115308622 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104228992 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091229806 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097302381 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136725947 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102686353 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172950638 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109962373 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1181656 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148145171 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099071013 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079137712 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101474346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124933488 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250039426 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13863378 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098911635 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086435882 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10604205 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078327233 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09671997 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123135016 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114645256 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130956961 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109939232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125954399 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077902396 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109873994 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11746663 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118561497 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084620021 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114217909 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158254826 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095782052 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113299843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14379044 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07928798 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135902901 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16503972 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137759986 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08478197 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103810067 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116075462 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122798945 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11498609 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133537639 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10303647 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131409808 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108132033 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084850682 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089777703 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095067463 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102396669 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112443465 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103244504 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11025375 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096140159 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125303332 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101930563 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108282889 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113808014 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099880012 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09615014 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095591196 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165734458 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112641378 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161096889 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098315386 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135510224 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151629312 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075209489 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078678086 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.0797802 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131379587 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083583944 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26976944 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109305892 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11284685 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116905411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132909276 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095826421 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071455162 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1065488 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12818196 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1181995 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09624811 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102315964 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152162054 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.116847825 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079444636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110910953 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112225577 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103521726 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165794777 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081446912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106459738 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076965737 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079774917 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122405476 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144983346 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087050342 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104031916 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11654062 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109534631 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122876064 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097372834 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108018915 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126125333 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141271987 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122984868 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089806575 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109125895 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125707291 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147951568 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103066976 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100230348 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166576071 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143916437 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15276995 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08778553 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110899849 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110890544 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106762772 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130430864 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084801738 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153237506 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081521095 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129917683 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099823858 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089351411 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124287672 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108908394 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087070473 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137477808 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110847308 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082176713 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229945138 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110319019 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114162606 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101754793 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075631541 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133341981 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074326302 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127255906 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158519264 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079800174 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102143598 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09496927 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081732281 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101715862 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099994526 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085626638 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098861871 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162935471 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087213726 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141007882 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127416964 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108251016 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132316818 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102923378 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642890718 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080204957 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14418438 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113759432 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169014187 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098553781 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114484855 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107643411 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117392255 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136696807 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100883213 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177958901 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125604585 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112990514 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079499883 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101018404 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102041108 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088595413 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105214006 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110137163 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111532998 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094815639 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112272062 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118512738 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083121104 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096552433 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147164904 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113859899 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134759685 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133429264 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084020184 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112750833 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128453111 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079662554 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114285234 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296656458 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104598944 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100365508 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082736746 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100013865 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161923647 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073528406 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150877688 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113726668 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1071042 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109547057 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107907158 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122961803 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102089024 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115159312 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092717511 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107728899 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109488967 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121569199 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079001515 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102440327 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108356544 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096079195 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095457189 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098878677 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144735058 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072589422 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097621411 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111641807 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137361835 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161543172 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105200232 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083842703 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117038942 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117286346 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109615023 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116207102 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081371748 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081044667 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081924919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.100523996 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124757496 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109388024 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114661151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107283158 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152280644 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083963021 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22518127 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095707801 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102434071 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090036508 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080272793 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095466471 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096003475 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102761291 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107598406 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162829638 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093635797 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090275997 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092290174 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074862424 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083033859 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12316892 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107887134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111149133 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101857544 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.232645709 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10323459 seconds)
  done (took 57.669768347 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.102711302 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080129959 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101071103 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143720784 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120487508 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198955607 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150086633 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188001744 seconds)
  done (took 2.673911294 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067721205 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097037195 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104401766 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08468311 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069476286 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070201502 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233744054 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083311731 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069109631 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093328563 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079418363 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071226083 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.463107446 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068892038 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069704654 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080075797 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069915496 seconds)
  done (took 3.456124373 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37530362 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.596380882 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35339358 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078064741 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.857081054 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091799262 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.140346477 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139613275 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081773198 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523062108 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369616667 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129728747 seconds)
  done (took 18.335824778 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080852304 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077831972 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091939668 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09155794 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079673886 seconds)
  done (took 2.017357822 seconds)
done (took 105.991949461 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080634765 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.557043598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072042177 seconds)
  done (took 2.251239698 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090042963 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091380202 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091782095 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088564943 seconds)
  done (took 1.973105299 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074414529 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078535395 seconds)
  done (took 1.755115136 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236619906 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17743273 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09676357 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082358854 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082947391 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082854291 seconds)
  done (took 1.850036007 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072386878 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075200936 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074780971 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078173854 seconds)
  done (took 1.896670358 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070080055 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068410989 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071330029 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07392806 seconds)
  done (took 1.881061283 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084054072 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086690305 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081017664 seconds)
  done (took 1.85021079 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100051378 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096589203 seconds)
  done (took 1.796242786 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080694173 seconds)
  done (took 1.683047752 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090612808 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104595922 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133552589 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116900206 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144328404 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.120842213 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086641349 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091383847 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080977742 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088319825 seconds)
  done (took 2.659372094 seconds)
done (took 21.782876541 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078235005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374319533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363262823 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094585623 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673302988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359975997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99130589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096404994 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111205699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07178778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089683392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651903153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980668324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33351012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97021157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33273042 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657149467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071924677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071435612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07203739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9779684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071182759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072576567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071301327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653366016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377931188 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073601704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335268222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072168466 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076792896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362493584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07379299 seconds)
  done (took 16.244782641 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070160075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121699763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075565352 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088606525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073528319 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072879951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074724834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072405097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120647416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071843625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090834013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071056049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075616555 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073511013 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093199321 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072277538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076139944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073614379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072202601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073567282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092783854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071959877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073072737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072896956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073534207 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085997021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074584648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072447885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072957143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077726304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078343691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074581353 seconds)
  done (took 4.152305408 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116496798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129940302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076793181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109925508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120720596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073316299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150467904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096559783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123931255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072592656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090775487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07208095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107333047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07368807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094700007 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072874651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075741476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072993246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072026974 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073314213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092734348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072867998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073434568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073490073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073696375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08765311 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075012392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073276682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072474413 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076914262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079085402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074641861 seconds)
  done (took 4.422975854 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070242706 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075158798 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083615513 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084455372 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069820817 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071939245 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073143653 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070950754 seconds)
  done (took 2.218645185 seconds)
done (took 28.648243509 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078885374 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070203753 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074166909 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089497948 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076280466 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081544515 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067682534 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076869349 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073806902 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07427452 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075672586 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072097991 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072321454 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067811609 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07448305 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068572394 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084012039 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073500099 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083422108 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084288785 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072736201 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075734686 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077696622 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083617949 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083870244 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083308658 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078838766 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075541151 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070704339 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073185126 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074205682 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082367836 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084263337 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083758279 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069993197 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069580843 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074044879 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071372162 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084845192 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078929839 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071183115 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078719079 seconds)
  done (took 4.811076778 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083812041 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08821752 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082953278 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082143924 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093212631 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085347092 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089753399 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080863087 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.080417685 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088763205 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076601643 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.084730351 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081508059 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075738258 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079986042 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077399323 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082638396 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076700406 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079576715 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080787368 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090516184 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075912073 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0898339 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082520952 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078256198 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084181887 seconds)
  done (took 3.785047319 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073713349 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087481369 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095188533 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146472879 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114062324 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082708418 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08418571 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095046153 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098552977 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070536744 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07561422 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094724574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095582225 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077043697 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.113619838 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08652502 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086765924 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07242107 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.0779079 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100135205 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092285777 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088051223 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096701368 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087645424 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070367221 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073142327 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075776188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087391912 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073202475 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082331549 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073894122 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07490883 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072282273 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081854177 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07373201 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069933776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095281873 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081724174 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083524938 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070651515 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079877145 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071455607 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096317546 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130481163 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069428796 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074709214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074636204 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081421767 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069703832 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098079856 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082385812 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06953693 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070537889 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069233167 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069424587 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073503726 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07241794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072766343 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080350988 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076866653 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092388608 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075138012 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088364479 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069950489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080000909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.0696839 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07147574 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069009818 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098555711 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071874451 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116110152 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071358682 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068934566 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081352582 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080559235 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076770293 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069843885 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087900615 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081701548 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074579756 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078759955 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073437161 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07400058 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100406075 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070494599 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069510066 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068932726 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07404968 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076354325 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071054818 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083184338 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069356211 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073859545 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088402165 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06965721 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071168543 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074219646 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073138954 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069401477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082136882 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074127238 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071160751 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080551673 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070982001 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073890874 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083237126 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077173446 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069057591 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07253582 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073999571 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07149895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071524852 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074139964 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072163154 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077185885 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076935507 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075998134 seconds)
  done (took 11.023364066 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16209005 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159238746 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073244099 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150657087 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079664716 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082628476 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15441734 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097969748 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070789985 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07204243 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071214398 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112894509 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108415647 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120817598 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083993584 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071507363 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09644673 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117682614 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157001479 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150708342 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09343648 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079777951 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073214225 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072736848 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073560852 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080279268 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090164076 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080628287 seconds)
  done (took 4.503878704 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077580019 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10533598 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075014489 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093162046 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090315239 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07115316 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072653477 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072292393 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086856166 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079964103 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071256386 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076652174 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075072977 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074318311 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07181594 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077570279 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077998953 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070192837 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074779796 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076330514 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081050588 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095682196 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075040337 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070530532 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073718065 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071077136 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079034794 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083304451 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.0712908 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10754919 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068882922 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075928468 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085451267 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071352642 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070443368 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070879197 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070830476 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070687622 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072222784 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0692388 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069992819 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074851413 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069772161 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07948582 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08380455 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073041794 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073037913 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073413664 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073774281 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068326623 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073446126 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073448673 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074151978 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078432896 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075418032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073524993 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071645667 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098739521 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077001138 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070597642 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070330664 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069753939 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072949749 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080442203 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085978067 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073142829 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06970978 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070905758 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084230771 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083658211 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06995971 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075611279 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06870081 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073030329 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07333851 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073278735 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071568984 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069483758 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070421792 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.075118505 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071692894 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070408155 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070050769 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073776815 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069139444 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069603076 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071244471 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072830255 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082667844 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070362463 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075107311 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072140576 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069729621 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073811976 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076881998 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073754175 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081744094 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081900247 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071413763 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069632286 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084973851 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073584437 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070036299 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077110045 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076252099 seconds)
  done (took 9.597709194 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090422071 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069462039 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087279356 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094066952 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081188842 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076971069 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080506003 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070489318 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087389831 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075596653 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078507258 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069706371 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081722519 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080499859 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070946709 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081365652 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074196536 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088455296 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085182001 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069578319 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079918869 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083778124 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082969596 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085161115 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084611566 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085857182 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082748066 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080723307 seconds)
  done (took 3.932885638 seconds)
done (took 39.272135989 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.700665199 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.944598166 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.69040331 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.918524628 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.741508077 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.91693348 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.781266851 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.687802777 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.895531732 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.727824348 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.015878294 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.153609179 seconds)
done (took 64.93666666 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.726376581 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.840591292 seconds)
    (2/2) benchmarking "String"...
    done (took 1.940846854 seconds)
  done (took 5.40892154 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.877435883 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.478512442 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.923171409 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.684559893 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.690959048 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.97638633 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.461265542 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.133244386 seconds)
  done (took 29.975464833 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.869127089 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.911709495 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.384031596 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.426119356 seconds)
  done (took 15.262144515 seconds)
done (took 61.966715567 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.701923133 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.727694337 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.727874083 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.685375034 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.773996736 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.702711347 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.776794271 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.695594647 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.684892088 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.694496705 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.684335766 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.107979084 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.688609067 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.815648333 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.683182936 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.684825684 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.685495438 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.173941236 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.838070916 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.695127378 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.692495583 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.717690877 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.688666634 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.684304774 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.705356282 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.683146308 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.072209713 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.69796143 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.506955709 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.687273428 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.730194972 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.993070354 seconds)
  done (took 200.715400351 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.684667703 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.603805283 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.702296153 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.692201217 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.066628509 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.881150167 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.785682038 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.092367058 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.691901625 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.702270054 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.882627497 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.686928753 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.902447142 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.63008313 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.71912515 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.778158126 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.915310901 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.958409224 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.722868213 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.850501754 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.708247156 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.765811196 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.717641109 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.905687116 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.701937502 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.698479733 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.71160206 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.701327558 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.868708086 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.893354422 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.719184594 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.702718605 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.888798892 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.554652551 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.708390165 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.696658009 seconds)
  done (took 166.517953094 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.873423402 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.68583954 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.683673193 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.685746092 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.690551365 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.683642558 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.805212988 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812447051 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.337563867 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.093097921 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745892709 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.688580741 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.441293069 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.685750997 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751145054 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.698163459 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.685762832 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.699227909 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.710964883 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.6908157 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.686541934 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809142932 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.703360149 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.685351937 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697295174 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.685586639 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.6899459 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.073631197 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.6877077 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.881764648 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.689010221 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.691415784 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.925851318 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.686875972 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.687322278 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.506739399 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.748555601 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773241905 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.68870161 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.69297749 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.687910261 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.906239827 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.686956964 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.685984694 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.688024908 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.686937975 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.802253774 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.68795333 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.810929264 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.687873059 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.161278873 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.685590689 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.689395372 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.018134397 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.257815632 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.689164612 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.690793587 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.686452639 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688555344 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.694884772 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.95350964 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.761748675 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.691492418 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.689326688 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.692069248 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.691216232 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.796300558 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.691642544 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.023535797 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.705117594 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.811320618 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812579355 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.692668382 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75304207 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780462056 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.690118678 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.687012859 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.687712345 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.690424112 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.7689255 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.688298009 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.686984507 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.768012643 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.689128833 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698565485 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.687663741 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.687636017 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744245952 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.759779377 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.689224877 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.519887055 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.693424302 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.688706567 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927936517 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.69074643 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755441497 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.690053669 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.68961535 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.77046585 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812747428 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.402707727 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.693799838 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.849617787 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.766510659 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.689823258 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.805805867 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.693096141 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771254015 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.698847043 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.69086228 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.725348277 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.689778514 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.702191191 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.689447997 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.061530034 seconds)
  done (took 390.545655204 seconds)
done (took 761.33881075 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.288136264 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.254560542 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.348032586 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.27647989 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.244286487 seconds)
  done (took 13.038742452 seconds)
done (took 14.666343916 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.766943617 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.771055694 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.707835655 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.773345911 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.705276278 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.769684807 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.754339609 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.711281091 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.739576017 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.712999101 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.742257646 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.711728383 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.6986544 seconds)
  done (took 24.19113727 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.918176727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.922760019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754053794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.938884794 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.729045758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.91962276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.841740265 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.831374817 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.828331271 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.699955785 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.701268976 seconds)
  done (took 21.71501402 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.917255016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.919070957 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.760647305 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.910936084 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.733213849 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.918942178 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.842393384 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.833570257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833674126 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.700486412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.700885003 seconds)
  done (took 21.703024857 seconds)
done (took 69.238037075 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.694130391 seconds)
  done (took 3.324127538 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.711923178 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.872743315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.692442705 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.695318228 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.693389355 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.69294016 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.694233952 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.693194914 seconds)
  done (took 15.379730096 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.69238787 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.694926725 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.693718933 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.694446964 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.694285674 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.693517504 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.69295443 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.693294913 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.692545106 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.695229709 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.693848605 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.692542608 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.694389393 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.69441513 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.694300854 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.694002112 seconds)
  done (took 28.732934386 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.695841839 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.694266026 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.692603771 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.692691667 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.69365568 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.697096664 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.694341881 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.695324915 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.695895546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.694481705 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.694419136 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.694477931 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.69371461 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.697704008 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.693409505 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.696051625 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.693174358 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.695617172 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.700113746 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.694243271 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.696069194 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.696114067 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.695160826 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.695218237 seconds)
  done (took 42.317842891 seconds)
done (took 91.387355704 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.404212077 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.533111096 seconds)
  done (took 9.568423475 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.701561679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.698075501 seconds)
  done (took 5.111024175 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.695495197 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.693649434 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.697617608 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.694333448 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.695387303 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.69462748 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.696732521 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.697055416 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.697414049 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.695689797 seconds)
  done (took 18.593439227 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.697324897 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.695943658 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.697068351 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.698509933 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.696884197 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.696107056 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.696648097 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.697301189 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.696276291 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.696600217 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.694416664 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.698323803 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.696287339 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.697481701 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.695854633 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.697426248 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.698557384 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.697310666 seconds)
  done (took 32.180498672 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.696621403 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.698572083 seconds)
  done (took 5.031677008 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.698113548 seconds)
    (2/7) benchmarking "second"...
    done (took 1.6976352 seconds)
    (3/7) benchmarking "month"...
    done (took 1.697535568 seconds)
    (4/7) benchmarking "year"...
    done (took 1.697078334 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.697008899 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.695646451 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.697034488 seconds)
  done (took 13.51509508 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.69785822 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.851048705 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.915300893 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.321686642 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.697693327 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.700391792 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.615822665 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.698983125 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.703015789 seconds)
  done (took 18.836649937 seconds)
done (took 104.469749535 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.54840363 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.700338086 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.962033803 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.829647794 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.71820861 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.993086504 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.723809269 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.961103266 seconds)
done (took 42.071622692 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.706723287 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.431930742 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.478921025 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.731003858 seconds)
  done (took 15.279246499 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.698360765 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.015680862 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.725269102 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.568690575 seconds)
  done (took 21.64931455 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.059366113 seconds)
    (2/2) benchmarking "read"...
    done (took 2.045413371 seconds)
  done (took 5.744710412 seconds)
done (took 51.019354246 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698923882 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.697513548 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.698213606 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.698591206 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.701907109 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.701061548 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.696668949 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.700312088 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.699651847 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.700703947 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.69980625 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.699187968 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.700176416 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.698356936 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69797209 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.700150496 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699404959 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.698355854 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.69915015 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698441356 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.700035794 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698689592 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.698920081 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.701121561 seconds)
  done (took 42.423153682 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.700477015 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.699268722 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.700232746 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.700962228 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.700888197 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.700070902 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.701996707 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.700651977 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.701556283 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.699253128 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699195636 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.700197138 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.701306556 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.70139408 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701687601 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.699480163 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.701006304 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700937393 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700747129 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.701124446 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.70012266 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70188239 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.701204842 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699689775 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.700886366 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.700654365 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.70088214 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.702817171 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701767062 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.702159432 seconds)
  done (took 52.663196473 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.702165982 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.701087792 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.701718827 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.702375125 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.703562489 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.702481684 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.702176099 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.701258417 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.702226457 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.698698395 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.702002327 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.702331172 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.704370059 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.7026877 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.701905397 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.702733289 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.701404365 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.700861865 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.703167717 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.703269908 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.701677605 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.702285556 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.703698621 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.701837772 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.7013654 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.701627816 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.703229774 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.701710977 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.70368717 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.702071947 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.705243575 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.702724874 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.702190883 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.70374093 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.702010888 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.701896455 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.703451133 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.703241608 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.705129269 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.703733942 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.703560167 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.705658577 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.704608639 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.704679354 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.703339417 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.703889672 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.70449199 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.705524078 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.703767309 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.70392087 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.70533098 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.703820595 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.703837491 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.705144123 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.70250313 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.704470929 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.703495055 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.704780388 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.7023794 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.703734821 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.703711476 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.704389805 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.70416116 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.704751764 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.706138533 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.702271924 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.705473117 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.704641951 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.704935042 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.706119692 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.706021126 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.703028868 seconds)
  done (took 124.28133432 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.703338629 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.703413644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.70610029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.705108226 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70506078 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.704653543 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.707804511 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70746702 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705546793 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.703517352 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704702914 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.706469105 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705543039 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.706642261 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.704744391 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.706718922 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.706166418 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70693184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.704891898 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.705014224 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707871588 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.707296928 seconds)
  done (took 39.166532698 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.705100948 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.703850353 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.707690378 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.706618726 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.70487872 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.707891551 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.709384025 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.70700883 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708102203 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.706184711 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.704637155 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704870259 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.707055589 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705918906 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.705766081 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.70569028 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708756828 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.707235126 seconds)
  done (took 32.361734128 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.708290835 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.706720464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.706067748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.706297009 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.706354689 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.706541764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707592437 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.706041224 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.707878057 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.708080722 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.706616173 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709480711 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.706381634 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705990554 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705096737 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.708865344 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.706633568 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706602815 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707340667 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707913478 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.708385918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707782597 seconds)
  done (took 39.203912504 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70857738 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.707042651 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.709021886 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.707426483 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.709219753 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.705786247 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.708489428 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.708128941 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.706624742 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.707074322 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709307998 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.708169531 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.707906059 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.707972243 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.707934283 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7091409 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.709795673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.706784282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707133302 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.708528779 seconds)
  done (took 35.804415581 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.706859117 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.709379487 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.708241797 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.708180378 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.708918669 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.708251424 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.712606335 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.708163135 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.71002978 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.71122218 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.709028121 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.710104234 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.708667312 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.710754372 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.709080856 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712336116 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.70993545 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710367861 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.710096631 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.709608372 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.710723293 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.710276117 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712419781 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.7109578 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.709463573 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709344008 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.70909012 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.709492307 seconds)
  done (took 49.520916447 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.707862763 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.710863828 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.710753926 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.708968047 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.710448333 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.710389934 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.710677538 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.709995751 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.710337393 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.709750756 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.710880153 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.708495418 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.709931444 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.710918296 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.710599354 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.711794397 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710903285 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.710949257 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710561759 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711715321 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.711523397 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712192491 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.71202095 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.712111397 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708890321 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.711694241 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710699519 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.711451866 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71105221 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.712328249 seconds)
  done (took 52.969585695 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.731827754 seconds)
    (2/2) benchmarking "in"...
    done (took 1.731301626 seconds)
  done (took 5.111971907 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.711818755 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712314683 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.713435052 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.711316766 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.710934929 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.712583578 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.711773096 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.710612321 seconds)
  done (took 15.345669758 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.712995596 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.711140107 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.713645133 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.711118289 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.712374212 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.714355463 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.719173928 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.712223786 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.714543875 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.713773297 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.72195476 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.722644316 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.717582445 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.714425626 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.714764884 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.715508839 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.712764327 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.711709443 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.712343749 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.711434149 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713631544 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715490598 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.718320686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.712680966 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.716046161 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.723702612 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.717671829 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.714098718 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.713440948 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.719468144 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.715514455 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.711796932 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.714905705 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.711403198 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.712642465 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.713756595 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.722052413 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.717795027 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.719799192 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.714254677 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713577043 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.714425212 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.715452819 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.717046153 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.717446514 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.714223363 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.714915479 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.715048324 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.717301795 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.718025551 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.721901542 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715601629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.713515405 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.718630697 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.717071569 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.72358953 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.713882683 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.717422351 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.725655714 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.727286111 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.726697497 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.725623897 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718374517 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.713700291 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725024481 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.742331491 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723653348 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.714839136 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.71351903 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.713841311 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.725358436 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.728335699 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.727803147 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.71462134 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.716102533 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.714367094 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.717150312 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.717846546 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.724462411 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.722548713 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.715291666 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.715303787 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725863845 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741820628 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.717388708 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.717555033 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.717862923 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.716392799 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.716592037 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.728915454 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.715217164 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.717800413 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.716259301 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.717837901 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.716885036 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.717066895 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.71851732 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.719196552 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.717173473 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.716558062 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.71749973 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.719948745 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.730828145 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717533278 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719897838 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.725243226 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.718601542 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72024702 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.724620048 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.716855276 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.71705408 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.717691565 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.72318182 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.715984312 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723470527 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.727825907 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.717104878 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.7209965 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.718372789 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.718221249 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726939054 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.747131716 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.717498866 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.719474598 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.723414208 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.731274604 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.718821807 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.723003456 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.719650504 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.717826955 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.716219598 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.721701397 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.718352013 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.721075547 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.718732275 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.720371752 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.718403498 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.718145126 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.717926311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.720570767 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.720423008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.72295278 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.721841776 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.721528917 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.719000282 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.722755579 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.724704434 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.718922203 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.722091037 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.722400601 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.718365143 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.719820852 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.72223167 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.719234386 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.721228687 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.720296403 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.721137007 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.720463828 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.718564533 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.719419722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.719573312 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.720865643 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.726557825 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.719781704 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.724725584 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.721367985 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.719308168 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.719529149 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.721053518 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.721729033 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.720912359 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.719996442 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.724888832 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.729309011 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.720239124 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.72166097 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.723689312 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719524356 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.720456081 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.721549608 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.727883096 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.728963512 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.722143519 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.726392862 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.722036352 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.720402087 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.720303925 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.721447702 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.722720837 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.721082243 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.724310385 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.728968863 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.733720931 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.732875635 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.72400873 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.725190268 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.723434064 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.724091209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.725553867 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.721792354 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.723293065 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.720746812 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.722844219 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.721397589 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.72598076 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.721626299 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.724138958 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.722521247 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.722875407 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.721412735 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.721551467 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.723365148 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7270414 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.722113326 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722463648 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.72392007 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.723780477 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.72290632 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.722419958 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.721843 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.72077696 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.72209971 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.730094962 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.7230474 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.724292281 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.725664467 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.72569958 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.722777078 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.722484797 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.728251024 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.725239964 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731084677 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.724905802 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.727373693 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.729189054 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.724823467 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.723622481 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.725747876 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.724188003 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.722224767 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.726789317 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.730868233 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.723080755 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.724167394 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.724468499 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.72490471 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.721820588 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.730853174 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.722970305 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.724689738 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.722373958 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.725724967 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.725262262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.725253071 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.726326212 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.726897925 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727689438 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722433783 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.725663314 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.726952264 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.724781854 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.723138787 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.723568159 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.729152566 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.731374916 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.73022922 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.728402562 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.728574822 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.727654066 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.731367977 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.728877263 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.72622016 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.727427128 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738452744 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.733580225 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7321072 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.728101258 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.724835474 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730684001 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.72781948 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.729818083 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.727087504 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.727791893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.727950011 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.726555896 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.725631742 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.728110673 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.730046101 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.731224697 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.729561156 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.730787657 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.727032453 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.727884635 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.728186618 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.727132757 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.727862281 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.729058062 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.725270157 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.731102476 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.729715994 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.728470969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.72922795 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732712164 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.728563709 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.730454696 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.729656615 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.728779899 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.728670905 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.728313294 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.728104724 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.730721541 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.736555785 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.73319221 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.737896119 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.730738875 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.737961068 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.727977513 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.731420765 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.738982114 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.727935402 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.727180571 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.728190815 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.727368718 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.737001594 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.727122076 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.729831815 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.732748902 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728711639 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.727982042 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.726695679 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.728634776 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726588566 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.727361794 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736771566 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.731264768 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.734301978 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.731833647 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.729697105 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.728357701 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.727332367 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.729215887 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.73437217 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.728776177 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.731246241 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.72921091 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.729736083 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.729203188 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.729973325 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.730848414 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.730084242 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.730750991 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.737245887 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.731448683 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.733502953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.730840728 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.735467302 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729737724 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739200288 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.728997765 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.729907428 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.729914311 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.728454432 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.73223119 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.730200459 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.730040981 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.730763867 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.732027789 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.733029727 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.729357642 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.732736585 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.733049321 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.728554014 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.731819628 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.739687583 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754409629 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.732611011 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.734784588 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.731088835 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.732468994 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.734084992 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.730637221 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.730994069 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.735358715 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.741880914 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739198393 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.73235523 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.730798871 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73205836 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.732594364 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.730324564 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.731250787 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.730870328 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.732022514 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.73343521 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.73146251 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736988967 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.730415291 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.732758306 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.733266724 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.732252197 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.743249688 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.732831889 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.734098978 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.732846509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.731491928 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.733824678 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.733188337 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.73218961 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.73461338 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.732253705 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.73462487 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741659489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.742430676 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.737609624 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.733296559 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.733430605 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.733615672 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.733683447 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.733633132 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.732063754 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.734064968 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.735180989 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.73134853 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.735521487 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.7321258 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.732264339 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.735847774 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733002102 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.73658309 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.740894275 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.734284745 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.731778809 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.73296888 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.732017934 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.733218258 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.734943969 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.740963245 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.737068698 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.745669136 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.741131821 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.737248946 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.734258272 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.736161453 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.743238641 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.733710799 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.73564364 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.733941391 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.736287238 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.735428942 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.738523946 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.734979363 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.739903294 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.736588547 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.736230695 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.740628823 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.735645908 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.733524346 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.736289218 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.739477818 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.735619347 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.732029362 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.733014891 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.735543586 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74197333 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.737508932 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734878331 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.737521128 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.734831526 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.737286495 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.737164832 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.733618286 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.737812715 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.735039154 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.735384192 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.736407152 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.734033027 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.735356636 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.738060862 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.734066842 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.737400532 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.743927729 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.735663529 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739115558 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.736519489 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.736856485 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.735941261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.734011676 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.735337715 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.73384134 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.735315482 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.734430949 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.736354645 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.738175973 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.735326302 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.736723418 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.740445069 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736244884 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738928742 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.746956069 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.74471227 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.735472209 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.735617999 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.737879515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.740886309 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.737037049 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.737709945 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.737507814 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.738557582 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.735242821 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.737368036 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.736696344 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.740238999 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753021542 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.73630764 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.738768211 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.739298762 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741448932 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.737281996 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.737477634 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.738156565 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.740427434 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.741725423 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.746161515 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.738191613 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.744479339 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737292088 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.740594988 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.742794384 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.741950351 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.747122777 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.740546603 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736589444 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.737194414 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.743138467 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.75684562 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.736257516 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746980957 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769412243 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.739971128 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.740756924 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.736090614 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.737536314 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.73804003 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.739417307 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.738620064 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.737469693 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736877347 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.73795475 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.738639679 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.745772731 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.740970422 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.736990475 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.738907887 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.740398781 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.739706984 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.738094703 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.737499719 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.738542767 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.73917965 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.738677029 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.739531434 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.738510967 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750839401 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.749663729 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.738998558 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.739620319 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.739220616 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.743660353 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.741764515 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751254236 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.74643089 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.738760262 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.739584866 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.742280608 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739605768 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.741329865 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.74174443 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.741183867 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74277901 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.740538557 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.751862336 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.748355956 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.745418047 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.744283758 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.740071449 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.740235679 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741667712 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.739357026 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.738959723 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.742290707 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.742008464 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744059246 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.73960995 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.74017657 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.745109852 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.747745484 seconds)
  done (took 1032.200959971 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.740322837 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739779685 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.740552835 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.740440135 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741661436 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74029099 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740684801 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.741905223 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.741517519 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.741432118 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.741197035 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741708268 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.741035114 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.742186073 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742694381 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.740967199 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739943632 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742211468 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.739947129 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740340152 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.740398787 seconds)
  done (took 38.23877124 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.741854949 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.739267689 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74108179 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.741858384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740968551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.741182604 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.741654699 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741484491 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.74099642 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741229105 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.741429869 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740374765 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.741335912 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.742853236 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740794539 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740816372 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.742132825 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740936149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.742646319 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.745504367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742009638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.743101475 seconds)
  done (took 39.993161245 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.743390832 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.743510027 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.744280082 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.742255778 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.741443265 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.742550526 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.74195732 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.741976272 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.744110983 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.744968053 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.741995187 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.744470666 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.751023455 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.750792464 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.745658979 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.741693197 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.888626988 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.742990113 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.743468122 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.743426387 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.742048484 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.749594092 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.745041848 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.742600274 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.744328127 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.741695482 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.745681208 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.745103342 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.745102189 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.745668434 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.749615632 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.745859028 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.746318748 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.748170545 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.744599688 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.743987113 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.746566679 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.742950562 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.74133252 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.743967775 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.751047273 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.767308515 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.740280107 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.74825879 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.742024498 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.742122255 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.746414097 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.750705538 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.743129913 seconds)
  done (took 87.338063954 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.74116533 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.742301025 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.742255666 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.741445233 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.740530484 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.741304367 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.742697882 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.743833507 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.740925647 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.742928197 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.742239615 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.741181176 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.741374766 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.741810373 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.742493786 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.739528416 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.741892441 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.742944015 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.743166043 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.740574443 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.741176482 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.740418826 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.740951312 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.742645344 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.741590962 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.74127641 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.742326497 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.740950446 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.742444482 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.742786239 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.742524463 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.741977218 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.743459024 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.744036037 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.742969032 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.744711835 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.742427942 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.741640804 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.742532924 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.742757181 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.742924789 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.744027407 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.740709168 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.741339172 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.740920932 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.740607791 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.742039689 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.74081772 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.736017667 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.736753856 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.735873409 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.737041478 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.737173164 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.736133955 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.73670485 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.733802302 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.733489971 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.734387955 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.738944127 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.732311923 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.733608384 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.737244261 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.734183221 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.735104996 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.734128365 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.735221151 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.733199338 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.733354441 seconds)
  done (took 120.002379145 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.734089243 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.737058193 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73691052 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734431417 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.73252916 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.73636316 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.734346618 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.732707319 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.736275665 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.733486796 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.737549595 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.732573985 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.735273512 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.73217675 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.735692023 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.735728951 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.736259501 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.73380178 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.734826183 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735897496 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.736516982 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.736700491 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.737535363 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.735053127 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.736879627 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.73763727 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.736201401 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.735846395 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736133564 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.737331382 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.73639363 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.736416363 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.736155521 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.737900494 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.735569334 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.739703739 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.736418652 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740028585 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.738691133 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.738956862 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.737800977 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.737135804 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.739580713 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.736887445 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73544291 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.740169173 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.739372226 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.740385841 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.739989482 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.73512541 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.738384583 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736208863 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740371642 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.735884012 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.736864296 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.736025939 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735805092 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739153939 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.737058194 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.74054739 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738677118 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.735321672 seconds)
  done (took 109.349118139 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736721269 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.736019689 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.733702111 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.735049797 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.735576247 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.735118847 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.734991543 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.733899394 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740114467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.736659419 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736087168 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738198399 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739767722 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738712278 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.738013099 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73742683 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738531118 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.737609022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736996742 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.737703837 seconds)
  done (took 36.410066471 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.737964937 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.73452163 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.736522065 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.73889481 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.7356361 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.735556133 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.73439138 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737494562 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734659587 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733615182 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737846817 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.73532495 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734928581 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.739223685 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.735266788 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.734777564 seconds)
  done (took 29.447572092 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.736435556 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.734630796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.734358135 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.735938258 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.737211479 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.733310972 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.736011439 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.736639251 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.734651987 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.735160475 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.736631251 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.73415304 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.737324091 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.735393168 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.735884237 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.737375764 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.736234369 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.734180499 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.736212235 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.736777992 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.741000403 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.736245602 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.734335764 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.733260275 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.735561014 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.734882093 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.735163615 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.735771038 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.736626785 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.733662814 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.734547851 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.737038709 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.736103744 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.736614347 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.736982743 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.73615568 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.732876181 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.734924192 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.734166361 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.735774899 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.731768638 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.73480143 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.738864565 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.736286238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.735609005 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.739442905 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.73754497 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.73848329 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.734525948 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.734722207 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.735952428 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.737648579 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.735997971 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.740456127 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.734509338 seconds)
  done (took 97.146341143 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73270647 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.734575673 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.733841641 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.733756239 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.739870962 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.73851987 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.735526078 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.733775463 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.735821386 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.735305307 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.735878862 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.735936221 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735448227 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.736201705 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.73629313 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.733657956 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.737239025 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.736027695 seconds)
  done (took 32.908920646 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.734197722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.735144935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.731779314 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.733319993 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.736851555 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.738889257 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735230773 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.732012284 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732381863 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.737660858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730100842 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.733876226 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728953816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.736110036 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732691736 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737471354 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.734304872 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732630187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.729580929 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735032164 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.732661728 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733800116 seconds)
  done (took 39.813814336 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.726174804 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.730459391 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.745398234 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.751831017 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.747209659 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.76856189 seconds)
  done (took 12.132770459 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726205892 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728140219 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.733050798 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727948623 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728901749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729481848 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727942451 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725607784 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732158557 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725935211 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728786348 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726791714 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727360463 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730179927 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728006352 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728535931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727327417 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729208797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725704474 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723213197 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727434609 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.727636666 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730888029 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726644209 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721039249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726420791 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727075541 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726601209 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727101354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728203157 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72657784 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7264133 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729156077 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725540866 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724366439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72819082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722833861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727860556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727662671 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72282274 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.72739939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726296458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727457643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728821981 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726389703 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726383709 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725049348 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723666232 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722691966 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72448873 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722755839 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721586435 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720165999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721999223 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722752683 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722250059 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718140157 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722081996 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722550851 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72168175 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722761867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720994297 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719554406 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719026652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717119179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719235168 seconds)
  done (took 115.54717781 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717728399 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.720172295 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719413239 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721895364 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720693439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72084423 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719834358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721917871 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720278504 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722003445 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719261221 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719579344 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720871798 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720910575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719716446 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720347569 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71905454 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722574874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718902332 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720889786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720283691 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72179179 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717899407 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717977609 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721516418 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719766203 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719408487 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719120644 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72252443 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719964081 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719760894 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719418756 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721291609 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.718833038 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721816276 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72052135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719422651 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720910353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719874053 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718804238 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720371904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719644311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720620412 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717605126 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719631971 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71809464 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720143553 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718711493 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721104144 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720401768 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718834618 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719044196 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719246991 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717486316 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71909488 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719321161 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721236257 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717535906 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718596278 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716873877 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720229912 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718498603 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718330731 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721535197 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716470454 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718856681 seconds)
  done (took 115.163069208 seconds)
done (took 2396.18519302 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.749980131 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.730367984 seconds)
  done (took 15.134887637 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.880336865 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.835660414 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.724851948 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.766062933 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.72192942 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.722926081 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.745320492 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.721911566 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.719561941 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.719694641 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.721510275 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.905543893 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.781101407 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.719566338 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.721238638 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.810577333 seconds)
  done (took 49.875272947 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.721148919 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.725121699 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.736771442 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.726339225 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.725273438 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.734229123 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.750308151 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.728121848 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.757581954 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.736613637 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.792490224 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.732924682 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.720734839 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.772256641 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.73944198 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.740109239 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.816204567 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.802880974 seconds)
  done (took 33.112179513 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.799699653 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.735309533 seconds)
  done (took 10.193272105 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.722962727 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.743748716 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.752173123 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.746464723 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.719029714 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.730847317 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.767901769 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.771006894 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.723964293 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.736670218 seconds)
  done (took 69.0698586 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.722013965 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.71965746 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.718003534 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.717544916 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.715505494 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.719856786 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.719617375 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.722216846 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.378066244 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.753969104 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.726282061 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.723751671 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.718213309 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.719953962 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.715802847 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.739893456 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.82831528 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.715680904 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.712936195 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.723728706 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.72069535 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.778538527 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.733595285 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.719404271 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.747186122 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.378136099 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.727505657 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.724419358 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.838253794 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.713507381 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.71789198 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.903762854 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.719369122 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.185653137 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.989979771 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.724075327 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.733878097 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.727247761 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.715857378 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.828973412 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.718909476 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.723437887 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.669787822 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.969471696 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.811226474 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.764400521 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.025860259 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.73627488 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.720221793 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.747421103 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.722926119 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.721449048 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.731377912 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.234925842 seconds)
  done (took 124.48762454 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.71898702 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.062141654 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.883261182 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.718530073 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999104933 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922384572 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.719931985 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.764333211 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.721190195 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941626609 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967316922 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.820622963 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.718798974 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.718801181 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.720134859 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.715405506 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.870633299 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.787465207 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.719389541 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.717004426 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743570785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957718881 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.839795347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.71982564 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.742835897 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92849755 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.837360135 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.818068659 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.508919545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.716877922 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7778102 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.719388817 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.717857322 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.717562082 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.874427851 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.828961335 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797953497 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.721553893 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.716075235 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.716425054 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.374480951 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.912869206 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.81208302 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.844905834 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.968178733 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.920439744 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.494260409 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.718700516 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.456119486 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.882921849 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.947382216 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.946238488 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.839468715 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.723979279 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.053655223 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.719951337 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.71696471 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.967083202 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938392378 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.811811168 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.721149455 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.721866323 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.71770145 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.955349639 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.721551381 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.81343848 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722451048 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.717320767 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.812863228 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.815562178 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.951386541 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930209898 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.75716445 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.061106702 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.214611537 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964998292 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.78345038 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970543643 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.724506571 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.718112029 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796392901 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.56968255 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.969656948 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.959373355 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962487997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75511788 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.432881906 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.719157737 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.944523863 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939239643 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.97539188 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.968113973 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95287049 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.035399638 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.71771482 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.71746457 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.036821668 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.840433859 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.720490743 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.062293148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946274237 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.250492129 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.747506491 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.018807106 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.848069017 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.721881042 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.344095314 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.718474858 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946154828 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.757704677 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.719753847 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.718918239 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.935469854 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.71685327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719328992 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.399242057 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.778619521 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.721261313 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949691235 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.722129663 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.985761801 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.721938468 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951581826 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.807154818 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.749400656 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.891244166 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.966773428 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.721844994 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.960293064 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960624205 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.831846824 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.93869638 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.425874388 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.722598458 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003789334 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721163224 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.718857143 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.887653635 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.722676582 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.860245005 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.722885383 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.011052229 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740072923 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948067871 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.727795029 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971406228 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.752210851 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769129514 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.722233649 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.847114851 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.722867962 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.543632 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.87468794 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723339235 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.137621111 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.288653523 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.722262561 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.865993034 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.945332334 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741709122 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791153705 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.381332111 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721189914 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800125861 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742476548 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.104676996 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.720919122 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.969244545 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.725326943 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.72048731 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.721035375 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.955196744 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.903559644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.721755847 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.720013036 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.624981562 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.721699211 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.722046777 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.901815998 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.092363432 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.723890083 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92421085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.726492599 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.8481942 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.727163062 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.802599799 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.055050471 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.720609446 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.722749274 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.721160732 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.723116898 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.723139038 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.927265523 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.747339484 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.212879424 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.857265896 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992005879 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.030128986 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.960909678 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.763246427 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.723454593 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976315211 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.727462637 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.783282955 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.72464034 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.741719896 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.947260217 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.725402622 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010524203 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991131979 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.562218012 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769017435 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.725934096 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723232987 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.724052725 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.866279606 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809778713 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.72565763 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.722419607 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.83754635 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.847061698 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931030209 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.724537539 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.801677785 seconds)
  done (took 870.99510577 seconds)
done (took 1174.523085584 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.723011289 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.727677315 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.730834089 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.726979408 seconds)
  done (took 28.568737216 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.734061471 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.726033834 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.72586927 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.725701908 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.726992195 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.72557965 seconds)
  done (took 12.023386489 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.771921244 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.728731577 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.727781572 seconds)
  done (took 20.888748829 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.796562453 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.114790632 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.857510208 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.141697908 seconds)
  done (took 9.568923306 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.725389554 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.724151283 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.724895328 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.727445984 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.736769405 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.734903397 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.727328598 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.728461329 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.734629264 seconds)
  done (took 17.225706581 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.883532205 seconds)
done (took 93.819274342 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.757517435 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.810028431 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.730237329 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.475460252 seconds)
    (5/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.867596689 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.825253361 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.740505642 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.790152932 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.725472194 seconds)
    (10/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.426710607 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.828951529 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.727944584 seconds)
    (13/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.922768883 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.728055249 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.037498635 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.617611818 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.747898897 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.965592187 seconds)
    (19/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.886123186 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.398829725 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.822681427 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.888259872 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.725801441 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.863156469 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.761724491 seconds)
    (26/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.829558039 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.987628428 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.730248724 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.232628761 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.887819931 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.957472972 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.816380097 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.870610411 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.733419558 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.885950305 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.731121312 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.953282076 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.104689747 seconds)
    (39/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.626840601 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.902361743 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.694252581 seconds)
    (42/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.742633742 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.832088327 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.788343236 seconds)
    (45/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.730253927 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.729937561 seconds)
    (47/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.729921725 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.363406198 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.973413017 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.733011273 seconds)
    (51/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.399947514 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.474859757 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 1.949159287 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.732371893 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.099641192 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.737764759 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.10935774 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.072962532 seconds)
    (59/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.834396492 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.433945152 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.747539954 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.953795083 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.982339316 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.731247546 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.737631445 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.919563811 seconds)
    (67/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.917545897 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.883207868 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.752385852 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.729512504 seconds)
    (71/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.082126107 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.11302181 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.827904975 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.10432708 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.11624742 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.927057932 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.824583694 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.734810023 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.750684611 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.729649186 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.732470103 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.903967083 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.103620454 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 4.6274158 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.748476473 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.625853218 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.811709899 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.921497038 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.903802965 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.168284181 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.735783444 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.17378179 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.914525394 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.734931632 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.813198062 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.731165101 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.885101725 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.731170274 seconds)
    (99/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.942006859 seconds)
    (100/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.18426148 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.059923378 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.705393558 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.87406172 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.73355356 seconds)
    (105/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.211966624 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.922756629 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.757645764 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.973527023 seconds)
    (109/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.817385998 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.562359691 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.640339102 seconds)
    (112/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.737872694 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.518876466 seconds)
    (114/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.833584465 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.735625978 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.865325848 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.093795935 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.83728319 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.73773941 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.753813594 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.925586468 seconds)
    (122/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.040288697 seconds)
    (123/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.620680917 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.760514171 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.732291027 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.838571484 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.726651445 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.945593448 seconds)
    (129/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.24084394 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.737025078 seconds)
    (131/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.990223433 seconds)
    (132/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.743581012 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.876540619 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.964089111 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.811784506 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.734114507 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.805564179 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.065667437 seconds)
    (139/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.746949056 seconds)
    (140/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.977688033 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.042857786 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.759409243 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.761711669 seconds)
    (144/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.923534281 seconds)
    (145/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.817950841 seconds)
    (146/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.986578578 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.747906102 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.831534834 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.990365459 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.062472843 seconds)
    (151/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.737397318 seconds)
    (152/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.000612533 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.060942682 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.811139831 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.733209722 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.096602852 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.757595819 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.116951085 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.817406189 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.857642359 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.735287282 seconds)
    (162/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.944960962 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.108703963 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.75531268 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.661817411 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.850465533 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.919867728 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.839529462 seconds)
    (169/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.975901004 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.044312718 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.87398743 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.031608354 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.393447249 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.482723581 seconds)
    (175/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.813807037 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.952040826 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.985422339 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.738414329 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.980206334 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.867070871 seconds)
    (181/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.73732463 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.746454884 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.350702648 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.741367144 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.328804527 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.740116036 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.270082599 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.739267433 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.941197498 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.007872361 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.197127557 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.837572816 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.759800783 seconds)
    (194/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.028229828 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.82324563 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.737323707 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.196648071 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.890688152 seconds)
    (199/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.736507836 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.769367994 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.736564019 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 6.736408984 seconds)
    (203/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.818445187 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.738419117 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.051085286 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.883388023 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.049408594 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.128313981 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.740311779 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.618085555 seconds)
    (211/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.184021449 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.058378701 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.805640014 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.868348994 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.863272968 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.048464137 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.416627174 seconds)
    (218/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.739108037 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.222692114 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.049080265 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.857512159 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.975451271 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.91826744 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.413277616 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.466571559 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.937922224 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.866963003 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.737187009 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.959926993 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.939614641 seconds)
    (231/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.744246018 seconds)
    (232/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.757634144 seconds)
    (233/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.989150287 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.765875105 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.572767882 seconds)
    (236/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.767099343 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.736736431 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.676007173 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.807643418 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.178559886 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.041310155 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.76619128 seconds)
    (243/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.113884189 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.827738339 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.976590359 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.746611625 seconds)
    (247/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.052502942 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.065085945 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.875653869 seconds)
    (250/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.772457073 seconds)
    (251/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.816464704 seconds)
    (252/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.747862058 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.515379347 seconds)
    (254/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.766268188 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.739294131 seconds)
    (256/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.844737373 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.844471188 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.761398788 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.739011913 seconds)
    (260/309) benchmarking ("sort", Float64, false)...
    done (took 5.464292386 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.741855887 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.92679175 seconds)
    (263/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.03885551 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.743130297 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.043632201 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.074190635 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.232904237 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.87891006 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.873990273 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.075830641 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.225287727 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.821109158 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.63527354 seconds)
    (274/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.874508066 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.761350623 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.128826266 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.066052013 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.948481447 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.011933647 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.90909333 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.363791274 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.802583774 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.04745714 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.868795014 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.065615612 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.095616647 seconds)
    (287/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.826527703 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.092646949 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.035507072 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.145919445 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.743356474 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.565859496 seconds)
    (293/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.741690595 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.672953612 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.771831529 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 5.483386316 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.87779366 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.140488805 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.804030022 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.492691524 seconds)
    (301/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.916722543 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.773682906 seconds)
    (303/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.885312392 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.865894982 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.755219046 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.02793905 seconds)
    (307/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.898307962 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.825007211 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.96574344 seconds)
  done (took 963.101297776 seconds)
done (took 964.827783209 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.772343868 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.766485297 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.749665298 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.770030202 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.862974901 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.796410532 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.763767248 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.752871636 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.800815109 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.799204419 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.747922369 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.793354544 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.750309959 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.750371118 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.749122101 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.765791359 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.051217823 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.776818258 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.76867434 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.761629699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.768109143 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.748633156 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.80087599 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.794801039 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.754861726 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.754656489 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.754886029 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.769346512 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.86302976 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.754724365 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.756748663 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.763187985 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.052397751 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.774558922 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.748501064 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.770140851 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.763179053 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.762505081 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.755800655 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.782520564 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.138888218 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.784977628 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.751673512 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.753244089 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.751703358 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.759505939 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.75239512 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.759369559 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.766515748 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.769115283 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.132415568 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.804457721 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.756631531 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.751413417 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.766253496 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.753222294 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.756895698 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.768793297 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.771799164 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769049652 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.039844167 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.784314913 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.757198006 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.769864298 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.761089811 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.167900163 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.784048305 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.758925934 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.137966951 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.793157728 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.168064137 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.796804172 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.756353258 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.767518789 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.785222112 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.054442278 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.77696511 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.752538491 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.763188018 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.750535469 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.765955417 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.768555057 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.758514815 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.75392661 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.768666504 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.799779393 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.766650752 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.75341451 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.766186525 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.771889972 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.762816019 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.765528797 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.757911231 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.751890499 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.76727017 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.760582427 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.759324818 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.758848124 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.760148505 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.769414904 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.139907243 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.804659666 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.750629583 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.751285386 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.754602113 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.768840464 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.138922338 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.788311286 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.777902845 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.805280256 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.756432393 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.040778878 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.783794245 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770707999 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.767725151 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.758071874 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.75221418 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.042279324 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.160597048 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.805526321 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.755374199 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.753713687 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.772653189 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.757064674 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.751462289 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.056880889 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.782985351 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.771133566 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.878543004 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.768841556 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.788410025 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.752517139 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.760440714 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.804981497 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.772464365 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.788111851 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.758349604 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.77201516 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.773935936 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.754196769 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.768579881 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.769983205 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.754951272 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.763390326 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.754067731 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.806943163 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770857128 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.771186765 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.777965519 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.880246084 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.753385836 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.042032636 seconds)
done (took 276.069545204 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.837886749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.753404604 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.847526165 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.755171198 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.847108801 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.827637 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.754186719 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.75421261 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.754912918 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.243028633 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.755801104 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.761354369 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.756196829 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.754930162 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.826425964 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.754752622 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.754517234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.190103707 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.756483283 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.834911326 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.75291643 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.755688749 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.75606635 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.2464189 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.754128142 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.754818396 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.83608643 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.753973523 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.197380965 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.75625388 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.754829624 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.201851821 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.835324218 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.783320158 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.765175413 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.759860231 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.845406258 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.764053755 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.823548627 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.82590484 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.85191553 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.788690862 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.756577712 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.756298425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.75810605 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.75666939 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.755346954 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.789109127 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.758427573 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.76079435 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.192688936 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.76472101 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.761564423 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.756878486 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.756653001 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.784903041 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.757133787 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.757446743 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.836156252 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.757713122 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.826029194 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.251063348 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.245367161 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.7566055 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.757383558 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.758524988 seconds)
  done (took 177.58770255 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.824198535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.834828198 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.823366855 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.762321334 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.807708169 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.826189383 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.762519531 seconds)
  done (took 14.333866129 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.763965932 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.757011659 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.80827063 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.807622837 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.75768857 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.914589342 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.758800363 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.769914481 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.762517125 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.787644065 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.759571166 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.758980165 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.765488624 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.75834437 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.807607257 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.771665625 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.874924233 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.76121612 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.758843062 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.9076297 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764453668 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.765768006 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.784627601 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.770435517 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.759019117 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.765422456 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.336732485 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.757832823 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75749626 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.757725072 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.758190364 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.801182658 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.759095359 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.757399506 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.758642769 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.873912633 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.759641638 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75919896 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.758691753 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.759016589 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.758231133 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.759732058 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.7599943 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.759776746 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.759741376 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.782293146 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.759443696 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.759137229 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.759556076 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.760487675 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.785845677 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.759661034 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.759218026 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.763331381 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.803402867 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764377284 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.762069832 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.759306912 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.759337199 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.759241184 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.909141044 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.810547041 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.759094337 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.810868825 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.758278717 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.760981636 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.760656248 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.761548512 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.850042801 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.760541976 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.812172331 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.76096846 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.918160608 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.783891126 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.76032086 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.764359959 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.765050593 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.760518891 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.761060059 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.769616617 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.760644783 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.763479008 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.767296333 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765862633 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760970849 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.875117744 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.902206281 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.760027986 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.762301585 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.769271633 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.75995982 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.805252588 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.760445037 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.761008568 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.818635492 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.877868825 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.790510482 seconds)
  done (took 195.026704743 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.769328818 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.76816855 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.76415591 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.777982724 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.763778612 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.762448853 seconds)
  done (took 12.301209771 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.76546566 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.765131092 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.761752783 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.761418334 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.762825501 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.763341883 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.762636973 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765041878 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.766634301 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.761870901 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.763149862 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.763340121 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.762504963 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.76272697 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.76294257 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.762688713 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.764569904 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.761575758 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.762070587 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764812132 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.013913043 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.763072252 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762903126 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.765649472 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.766243667 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.762254072 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.77787299 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.763400256 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.762567285 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.771250551 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.767821999 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.76332878 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.764354529 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.769599687 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.765642434 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.76645993 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768612551 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.766134596 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.763030192 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.764720816 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.764323111 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765325923 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.763436698 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.764732162 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.766780638 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.769717466 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.767578857 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.778841505 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.763475667 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.764388216 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.764805695 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.763902072 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.763757246 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.767378425 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.768279427 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769495876 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.767728298 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.765254389 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.765357416 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.767848637 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.768053501 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.766564137 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.766625556 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.767585925 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.771163832 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.765939345 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.768962802 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.768326322 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766150763 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.764522354 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.767683397 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.76426801 seconds)
  done (took 130.071848547 seconds)
done (took 531.024384311 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.054986485 seconds)
  done (took 8.754802946 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.842913702 seconds)
  done (took 8.885372343 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.684187411 seconds)
  done (took 10.397742176 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.789270155 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.785373587 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.789218688 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.785966095 seconds)
  done (took 28.893251244 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.008430069 seconds)
  done (took 8.719635473 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.799385511 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.777369461 seconds)
  done (took 15.35107841 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.890628071 seconds)
  done (took 8.602256134 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.097399257 seconds)
  done (took 8.819182631 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.795565526 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.78870818 seconds)
  done (took 15.31677546 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.781262873 seconds)
  done (took 8.493812683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.004730159 seconds)
  done (took 9.812083389 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.807849366 seconds)
  done (took 8.58840084 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.848282874 seconds)
  done (took 8.56117496 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.893177802 seconds)
  done (took 8.605811414 seconds)
done (took 159.5017749 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.780746383 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.782380576 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.783843721 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.783547442 seconds)
  done (took 28.843584958 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.810999787 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.811413628 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.813977109 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.821908132 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.813696881 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.809845488 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.804577875 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.804007721 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.823500709 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.813731855 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.813528846 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.814923217 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.811507234 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.806380996 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.814242229 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.813967852 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.821845457 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.8133327 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.80437852 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.814994555 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.779069049 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.822920311 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.814509508 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.779853775 seconds)
  done (took 45.168580504 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.970981279 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.851146963 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.933869028 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.832095914 seconds)
  done (took 9.300980591 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.830902599 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.831809996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.843245777 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.882304084 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.905818363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.843100049 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.804751185 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.801341227 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.787820245 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.83284634 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.907199682 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.827207747 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.925148797 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.780201905 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.963352323 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.779223137 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.78062423 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.833314654 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.882621825 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.895727657 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.781487381 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.832066512 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.834684501 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.828697534 seconds)
  done (took 45.928473112 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.78207928 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.790119298 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.789593592 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.781641278 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.78210034 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.781927683 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.788061306 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.783938566 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.804672943 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.784376173 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.781666421 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.782875159 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.788085864 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.783279023 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.781558141 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.795010265 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.796401683 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.783033356 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.786196742 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.789189459 seconds)
  done (took 37.449997676 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.780505555 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.627911653 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.12648754 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.033172273 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.781585586 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.782894059 seconds)
  done (took 30.848253142 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.794803251 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.789877881 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.783209475 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.840039698 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.925083966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.789915344 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.782913476 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.793259289 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.831934521 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.849249466 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.807784773 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.812592451 seconds)
  done (took 23.515923824 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.784318344 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.785131268 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.78546524 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.798231559 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.796667921 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.79167055 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.789446623 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.781831958 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.797985845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.80128465 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.789836446 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.795757669 seconds)
  done (took 43.216820844 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859052005 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.656320653 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230836949 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242726557 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305724274 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.983885437 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.783043506 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.868040602 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.783352777 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054524096 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.12908789 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983855194 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026154067 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.579270624 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.787768409 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.250228072 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069366326 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000996923 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811324662 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454350503 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888808357 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.344542228 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.416974692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894042987 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986807939 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.906288135 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.062120647 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.732543178 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83107723 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788234817 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788874842 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.783405399 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056417001 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91179105 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85234659 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78933263 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197060111 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.490060217 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.792605463 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.467858497 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.333583845 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900917077 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785979509 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783988476 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710390759 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343261396 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875154399 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.786754665 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.484170031 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.784837427 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791343883 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860170807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.786282529 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.591427462 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470501841 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.051998812 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.784159523 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787618248 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345738365 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791279767 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448569472 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.718893245 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.879723027 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.464178481 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243445012 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.938814621 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.786740212 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785217871 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710496488 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.459473536 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900799444 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921769494 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.802129427 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426410114 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072345856 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.348071848 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838505332 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061462515 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6174876 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.718096497 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003183415 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.736446825 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716537769 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.622311078 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710590101 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994081049 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822358474 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.384781238 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82418439 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.866957027 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.791594987 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804295487 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787808943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999932667 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.681468607 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78790986 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.0735481 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037392568 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802354104 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869019731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713181596 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.790456191 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030176369 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.990332193 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.079269802 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.265438558 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874100999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770849368 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.801914437 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.768452367 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799088824 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.053649206 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846992376 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792746847 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905042401 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.736595074 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032386697 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819350941 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.887961881 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.144726634 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023778437 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.12815115 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036083233 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848295766 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793001455 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.788442439 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.481956851 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398014205 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.002526723 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.800465224 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328402547 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8017938 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.789991563 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724619119 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.448181758 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.147180765 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.865259376 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001319654 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.789272385 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065092261 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714006889 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925113576 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.799379938 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.002061525 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.433394925 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.870386636 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0349947 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081901725 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.081665242 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800051493 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802513415 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879927065 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805565694 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.268419612 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038558346 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.788241061 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.791206717 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.481935106 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.842404259 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791139367 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.791361052 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.339059599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064219281 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812458546 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.792198407 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.664074916 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.80016178 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852037881 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.792833511 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795798012 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.311540402 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.299493813 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.795930829 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.447206268 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00480285 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793168482 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.424550093 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964155256 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.802876727 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061846726 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85948487 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.716169112 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.489569495 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.490768603 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790409493 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717089862 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.790902947 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793478823 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795019986 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.978676513 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.065658861 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842480672 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.478047079 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.899682648 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797323093 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.794239592 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791699559 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.283219853 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811486897 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471331968 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.801176427 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920313083 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.804213494 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.716452663 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.793053484 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79312915 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.790766197 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.73449744 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837461704 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.482516108 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996727031 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039488597 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.19615868 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800098084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.47310753 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.910292425 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.804311386 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.090632988 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396665167 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.936326411 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861198575 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.797187369 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.481696978 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.527332879 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355860395 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093893818 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110568064 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144735713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.207065805 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.122733619 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878251944 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018924413 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.312742511 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848848749 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881035841 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728395233 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807908414 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.438309196 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151607982 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803625233 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00906135 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079742874 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.166609318 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927640301 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996619493 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822342576 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.632681596 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827158799 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.331363504 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809010346 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.2640869 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998754828 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877505372 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.095208484 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.873792961 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.793197282 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137119625 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835188891 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.494655528 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146652472 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.236135541 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.29631712 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024980878 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.796983422 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.232803473 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153526855 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.02661934 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.922499672 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722754308 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.799495158 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.799741302 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.808221151 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.766491631 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.637622656 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.037053768 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80015108 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020227823 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.952259887 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173993181 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.70098067 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.798488179 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794298803 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042874354 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.570907496 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957555888 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.126783096 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.372615407 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805919658 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.722150282 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722614415 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.496554925 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.796315455 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.761214557 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006140003 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.898489187 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.478358806 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.206303209 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113831861 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039484273 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.807457068 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067515217 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075299378 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.291491275 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817325599 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.893062357 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.11208459 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.542259324 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.010662271 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023143826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352765806 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012763559 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254292267 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.767187377 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.797198445 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001997821 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.010638343 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.181140673 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975732616 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.508064167 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.80587144 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165605117 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862126171 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.170656544 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.9907629 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.883827892 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804957832 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872527502 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802058695 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.802101801 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.803177912 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807392421 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.189154903 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921953905 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.80921552 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874349813 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821716183 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371846237 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.805756504 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069823891 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16158417 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135842473 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862998211 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.798538253 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800511129 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725607832 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926303109 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237089008 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070171487 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.915712138 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.933660211 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818811623 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.117555216 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.096990977 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115518857 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070891314 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.682067204 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462782115 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.924814015 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.015227465 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804606154 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.001391809 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016023941 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1010658 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357957831 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.975116389 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996810153 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070570219 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.158984461 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.799135789 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376536159 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.808246724 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201448854 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.834351569 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.179417004 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062641612 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802778231 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919385432 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.80338941 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.00376576 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.24985363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.493062822 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152961979 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659647059 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.803953514 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074881352 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135720202 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107522566 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875991358 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806462599 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490667562 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934213394 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.698951829 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.01510935 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800635644 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005128885 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.51177821 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.804172997 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079540975 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109287497 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.801834982 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.719558347 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836563536 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.804091079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014900517 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015746432 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046759521 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806394018 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.807720948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.61015995 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082206994 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866307639 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729434671 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.804647243 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849046512 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03039943 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821441305 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.316204173 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.501839679 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08901675 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.707870828 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820062941 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.23902184 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19148179 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141467518 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.326058185 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028137105 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354547768 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.683425421 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185370299 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.804589511 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229542673 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189029057 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.803430885 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337991258 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921769052 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.077444882 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136143091 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.817012734 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559119139 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.836354929 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018741322 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158740158 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733877324 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.808284619 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.853843113 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.804725773 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.786058484 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812832443 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.754066347 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284506818 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.652984069 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360181401 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.805726309 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.930618784 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.188781056 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370650749 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918315267 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821234338 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813047618 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.509004376 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.090293916 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.048002029 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336291662 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.905966594 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.806982169 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804212615 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.723355119 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987909462 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.999387413 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099463801 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.176071904 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.920034587 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80652609 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.012487245 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008109923 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.213727631 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943382575 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.955369205 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924816283 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.745413215 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.510330476 seconds)
  done (took 1627.021596394 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.831783906 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.827638186 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.810840366 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.861043203 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.837407788 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.827970557 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.87175551 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.814774781 seconds)
  done (took 56.422890888 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.806782459 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.963981705 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.81205266 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.807570686 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.811029767 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.815859247 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.964218172 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.818762887 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.810623518 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.811092696 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.806878467 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.810031825 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.091564858 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.828431159 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.807493764 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.811389628 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.809857297 seconds)
  done (took 73.137066854 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.80716669 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.972157011 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.835189294 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.807524432 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.505022433 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.824346295 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.72100542 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.811746835 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.813709248 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.602916822 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.105887795 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.847562901 seconds)
  done (took 89.394356514 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.821128743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.808691434 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.809564467 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.809431717 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.809971689 seconds)
  done (took 10.808402454 seconds)
done (took 2122.788555674 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.037014789 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.066653368 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.0652697 seconds)
  done (took 5.872655752 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.949712034 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.999888427 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.114128622 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.138264475 seconds)
  done (took 9.947094868 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.117186109 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.183842522 seconds)
  done (took 6.041593988 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.356152092 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.825520505 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.183503872 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.810392399 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.812233733 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.814731014 seconds)
  done (took 22.184357444 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.807712493 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.810147843 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.808983503 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.808736063 seconds)
  done (took 8.976713765 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.809721784 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.511740049 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.809659004 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.823208354 seconds)
  done (took 20.695772553 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.957236818 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.925528035 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.952591415 seconds)
  done (took 7.577082961 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.951753131 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.667858742 seconds)
  done (took 6.361178021 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.95142956 seconds)
  done (took 3.693594539 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.836470222 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.079778842 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.298084954 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.342445873 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.388587898 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.691203344 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.141982802 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.037109523 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.25118647 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.279371131 seconds)
  done (took 24.088295178 seconds)
done (took 130.580177629 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.171994209 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.846549025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.017012147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.17109558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.047305163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.020961117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.019278673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.166486955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.856817479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.848293241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.184153983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.050846243 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.967529738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.835501478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.975374083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.834616728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.043282504 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.199806769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.85692862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.093391758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.032234413 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.81568527 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.006575655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.833048343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.048313684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.977215722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.358274957 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.839028762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.989612512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.373228108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.978495344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.238638757 seconds)
  done (took 166.442547612 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.813787125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.813597553 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.812945897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.813756512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.282717704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.81398945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.814262052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.812687045 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.260312211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.247145294 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.81405531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.265863577 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.816687297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.813381768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.815575918 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.812754959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.43343153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.814117674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.814476144 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.812943692 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81384563 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.102820312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.814691385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.114604886 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.42286198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.815353609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.813542566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.814998073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.813330609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.812516163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.814816782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.813655769 seconds)
  done (took 207.412868633 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.754434652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.817219141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.816557278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.816058338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.818034604 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.816163932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.813003439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.813954966 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.600986141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.588871021 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.815414549 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.816485849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.815111525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.815528601 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.813724547 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.815158103 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.815064178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.789945481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.816301168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.8160826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.818858128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.393047721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.816334689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.402364039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.817785237 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.818816458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.815700378 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.816932345 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.815491059 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.816116395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.820510895 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.816606094 seconds)
  done (took 218.499874049 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.057193367 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.815089995 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.81561361 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.810375653 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.817205215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.814708886 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.790724718 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.067591286 seconds)
  done (took 18.737682198 seconds)
done (took 612.842267869 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.201232783 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.03814154 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.992326331 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.841124167 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.089476574 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.883542245 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.836033505 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.902301999 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.649661146 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.912784217 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.495855147 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.862896166 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.591703272 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.866710151 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.957647434 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.897723149 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.384676176 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.490399997 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.013989219 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.893002003 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.011261749 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.73256405 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.919803056 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.672514732 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.62253892 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.789295117 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.856243666 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.393322198 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.849401622 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.997240303 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.531504847 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.091037811 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.853560121 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.836573325 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.892450781 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.868953319 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.039507445 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.850865763 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.959955846 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.530431684 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.925114205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.556859377 seconds)
  done (took 100.331936917 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.830277384 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.824484906 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.824715511 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.825067685 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.833496234 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.824307439 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.823925469 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.823635833 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.825250457 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.824834883 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.824349345 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.832722576 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.82616955 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.832969623 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.824732541 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.824491088 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.825930604 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.832724805 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.824789888 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.825137606 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.824333043 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.826583283 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.818806732 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.826977641 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.826751986 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.825713663 seconds)
  done (took 49.247365805 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.818494769 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.972803157 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.065931424 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.841697962 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.819644789 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.822998301 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.837883259 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.827053158 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.822363716 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.822833803 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.922397181 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.826478046 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.839088873 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.071156731 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.83847542 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.820220561 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.819505479 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.821188276 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.978448977 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.836559021 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.840802081 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.824492965 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.840222487 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.834330354 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.8238029 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.821650952 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.823954713 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.29772704 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.831653478 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.923144034 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.869676954 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.849745999 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.242372151 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.079932578 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.879065116 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.834328526 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.820198383 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925242994 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.828334597 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.822365712 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.839095114 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.828387311 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.066094534 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.357663492 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.837499805 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.821263602 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.307908384 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.937606636 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.863848543 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.83263239 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.067873132 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.836120109 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.818461349 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.818996767 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.857090443 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.82829721 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.818845544 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.184676969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.832126699 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.836910062 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.823532524 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.82037552 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982561241 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.828761987 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.97109149 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.830564292 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.8273533 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.819501629 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.063759899 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.838624125 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.355273772 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.835591167 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.818824228 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.921452643 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.977678712 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.329251616 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.833947952 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.983238375 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.251045901 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.844777864 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.829267545 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.286329119 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.848497128 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.827935862 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.821232622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.820937884 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.819729099 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.862090326 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.836753953 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.271911085 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.358985031 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.20399871 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.847920576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.836931756 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.820555343 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.184984326 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.828247106 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.820464365 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.056084636 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.368145047 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.836519753 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.828365377 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.339585908 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.837981812 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.840439303 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.828265705 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.068420829 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.837711143 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.861719666 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.821278955 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.826993753 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.8238063 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.840463275 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.83057026 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.821387894 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.341874588 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.943464594 seconds)
  done (took 226.821430415 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.823216661 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.826370215 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.821360406 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.823642549 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.82076196 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.821566023 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.821156852 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.820191701 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.823408137 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.821345392 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.819126341 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.822578472 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.823231599 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.819720145 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.831085298 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.822922087 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.424093032 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.821917595 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.821718371 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.821748671 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.474471498 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.826187224 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.822427333 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.820890816 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.82038066 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.822860023 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.828471733 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.829123091 seconds)
  done (took 166.053880457 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.821911828 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.934964085 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.843656119 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.851368866 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.83023639 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.823372155 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.920401802 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.84287438 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.828879554 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.821595929 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.823156378 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.883177093 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.832126179 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.920394664 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.856785399 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.92976033 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.929613822 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.831280094 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.823051576 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.823809476 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.85217377 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.835008401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.885533595 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.946939003 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.843703994 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.935570388 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.845213883 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.823220108 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.824033205 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.936992417 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.84288695 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.884023405 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.854261626 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.842722843 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.940630741 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.940565012 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.929093891 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.929560548 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.83242053 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.824998231 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.825450456 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.828277972 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.936095271 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.843853565 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.825627556 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.940379092 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.843083667 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.824332164 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.825299849 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.825894672 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.839078752 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.843447358 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.890389955 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.953967754 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.862430014 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.849159081 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.924918975 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.949864233 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.826738577 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.92369247 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.835162892 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.938337547 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.848930573 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.828731825 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.826879394 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.830092269 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.854752224 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.931469673 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.932775851 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.835412992 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.923656612 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.86338244 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.833309946 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.827387111 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.825607311 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.937687106 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.9444239 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.862885812 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.864181721 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.857309262 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.837293626 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.82820585 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.830902428 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.845904852 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.831906441 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.940988318 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.945009694 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.834977245 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.827836335 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.828582089 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.827599523 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.851763465 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.947145045 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.864931656 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.933488928 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.894454202 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.902320945 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.843157717 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.84377939 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.83144674 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.88947728 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.843350532 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.838826567 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.114194145 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.888782604 seconds)
  done (took 198.131749493 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.231510919 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.87566016 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.884274831 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.148833814 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.176852355 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.802904474 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.875396313 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.874670259 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.899299365 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.068737212 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.941059833 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.893175065 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.863497083 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.850757672 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.87434943 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.899212251 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.882639854 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.212980997 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.083043865 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.024448567 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.867093387 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.149677699 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.180180221 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.44667803 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.925068282 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.273684659 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.441936268 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.007732564 seconds)
  done (took 60.422128731 seconds)
done (took 802.756977586 seconds)
SAVING RESULT...
DONE!
