cset: moving following pidspec: 1806
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228561928 seconds)
loading group "string"... done (took 0.522522546 seconds)
loading group "linalg"... done (took 8.720372364 seconds)
loading group "parallel"... done (took 0.171381984 seconds)
loading group "find"... done (took 2.48801364 seconds)
loading group "tuple"... done (took 1.907107175 seconds)
loading group "dates"... done (took 1.340994279 seconds)
loading group "micro"... done (took 0.617027057 seconds)
loading group "io"... done (took 0.64182041 seconds)
loading group "scalar"... done (took 48.134766362 seconds)
loading group "sparse"... done (took 13.329360572 seconds)
loading group "broadcast"... done (took 1.287060378 seconds)
loading group "union"... done (took 2.566384088 seconds)
loading group "simd"... done (took 3.030051631 seconds)
loading group "random"... done (took 11.951518438 seconds)
loading group "problem"... done (took 2.259309024 seconds)
loading group "array"... done (took 23.433645461 seconds)
loading group "misc"... done (took 1.606208547 seconds)
loading group "sort"... done (took 3.735418732 seconds)
loading group "collection"... done (took 19.32716405 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.776716483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.160662754 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.239497274 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.66041192 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.295431467 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.202605798 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.202389456 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.176982807 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.722775029 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214582253 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1918951 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.401638386 seconds)
done (took 7.122364911 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.588059208 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.09320532 seconds)
    (2/2) benchmarking "String"...
    done (took 0.207019989 seconds)
  done (took 1.024916626 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.095655446 seconds)
    (2/2) benchmarking "String"...
    done (took 0.151273179 seconds)
  done (took 0.963382316 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.132765079 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.166958338 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.145037137 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.127862117 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.144912074 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.130788734 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.14589235 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.144872457 seconds)
  done (took 1.72273911 seconds)
done (took 5.148659843 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.51943711 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.909470918 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.566230919 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.200937995 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.341041582 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.341291668 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.312822746 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.266594775 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.130224258 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098572601 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.218178245 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.459621036 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.463496331 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.941841072 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097768609 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149272613 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.165152939 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.83379529 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.180850319 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.154373477 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530266296 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.239534091 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.158457884 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.134663666 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.243219611 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.169634117 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169176521 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.146204919 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.770182448 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.217283829 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239503544 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.125002249 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168972841 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201316959 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.27811352 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.151383498 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.786409907 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.24513706 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.125415333 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142943883 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.778267897 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.166095059 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.233496706 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148382767 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115256458 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187318669 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.142705155 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.117818725 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.150891746 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142938321 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212816855 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.564266324 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.151648067 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.226771015 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.151041318 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.797347284 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.139566127 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.332348644 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.167192238 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.15127946 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.134270573 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.129249776 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.212978287 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.136416741 seconds)
  done (took 23.027251168 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.200923009 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.217946683 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.138383775 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.184542327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.182861891 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.140095359 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.130069778 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.135811231 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.152214074 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.232633148 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.178470469 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.225533344 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.117485656 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.147960463 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.175784411 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.289760468 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.162510478 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.145642827 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.148412789 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.135605781 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.186531765 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.135355015 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.154908168 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.135172872 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.218311509 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.265536064 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.152096827 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167402935 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.146423063 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.138902369 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.184828156 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.205880135 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.117195962 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.147237837 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.209953502 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.167214341 seconds)
  done (took 6.915228685 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.258931302 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142601554 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.267768864 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.165949284 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.233545505 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.189283615 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.219675903 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.208161427 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305777568 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.303402021 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222695957 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.170945947 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.137367848 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135503259 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.122050912 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.11764241 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.864739873 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.211140293 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20005508 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.210911466 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152091722 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.121957212 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.769702391 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.125342091 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.143107594 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136508776 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110907254 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.244499595 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133416312 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.512637985 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.141390387 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137395769 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17329374 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.251998367 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.160518365 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.178544451 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133869522 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.143359539 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250893949 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157450598 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.184117259 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.137500755 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119422308 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175649919 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.174400139 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.146379532 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145842518 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176608878 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.142995129 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147937238 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.141715775 seconds)
    (52/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 0.241232331 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.886803506 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125834989 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.236400709 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.188840969 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.142781097 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.315510366 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.146891472 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.159307078 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.129603329 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.308948678 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162201404 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.139340037 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.119541413 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152249091 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.138686175 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143935893 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.245432714 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.138637283 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.198336778 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150853262 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.142161984 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.145281693 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126179842 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.165073685 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.126128591 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139686562 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.126239466 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.138951427 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.128444582 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.136987911 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125760413 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.138269644 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189151683 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.151702206 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.145926526 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167819664 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.149854557 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.125227235 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172967566 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.140500319 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.12844756 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.214162281 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155898801 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122221366 seconds)
    (97/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 0.744873384 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156069392 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.186661437 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.149542475 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.228612152 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.141240472 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.148234159 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142355756 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17141173 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.156137814 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122633276 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144376008 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.120369758 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.141106954 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189079091 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.146729929 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.124155709 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.148455434 seconds)
  done (took 27.730158708 seconds)
done (took 58.388106926 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.462297392 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108972879 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128542087 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10928326 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.127922897 seconds)
  done (took 1.730189042 seconds)
done (took 2.500665668 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.231273991 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.340564232 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.243980524 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.144768703 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212660771 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212720524 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.195080734 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.206789178 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217566771 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.213811238 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.141872572 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.235227472 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.222682109 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.193738969 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.142057828 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.245207915 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.189599898 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21684546 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.250567227 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144898786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.14056076 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.164945514 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144972555 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146950042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.145251126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162163691 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146900043 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16274881 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136678661 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146521667 seconds)
  done (took 2.430155421 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.169598884 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.142880557 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138795164 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.155042675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.141062709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146579016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142250725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159769712 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147892763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160625598 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137333596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147761332 seconds)
  done (took 2.40855124 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.122051132 seconds)
done (took 9.987069255 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.175401623 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.038924191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192734137 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.276752931 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.372863868 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.304924911 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.661167677 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.238897173 seconds)
  done (took 16.182461664 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.157549227 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.159075538 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.139945135 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.205088769 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.136483783 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.155763825 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.138925755 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.158264619 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.13449182 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.159259959 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.138772511 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.159166511 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.135867078 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.159785576 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.137751199 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.152096107 seconds)
  done (took 3.266109024 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.181035724 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.181179528 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141117209 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.163717117 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.13811587 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.164523153 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146368641 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.161850348 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.137935673 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.158470583 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.145832919 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.160798259 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.14109734 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.157340375 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141971328 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.181074183 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.138995337 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.162207298 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.184187095 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.145618755 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160991808 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.142444449 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.161099043 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.143307836 seconds)
  done (took 4.594021485 seconds)
done (took 24.829903688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197970951 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.14880402 seconds)
  done (took 1.140734841 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.195756943 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.21491387 seconds)
  done (took 1.211877357 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.158903967 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.152904836 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.165617421 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.166027716 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.136962513 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.155722445 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.160531102 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.155367488 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.13543469 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.155380748 seconds)
  done (took 2.347416822 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.142137411 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.156796121 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.151779312 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.203768071 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.144116331 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.157553628 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.1400194 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.158614647 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.140816012 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.155569252 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.140187148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.172080661 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.158171014 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.15632821 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.160858048 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.141911505 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.16398864 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.138900757 seconds)
  done (took 3.587462091 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.136780479 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.136525568 seconds)
  done (took 1.080636838 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139860331 seconds)
    (2/7) benchmarking "second"...
    done (took 0.135211892 seconds)
    (3/7) benchmarking "month"...
    done (took 0.157161468 seconds)
    (4/7) benchmarking "year"...
    done (took 0.155878437 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.137801768 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.135154553 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.155638797 seconds)
  done (took 1.825190647 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.609083988 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274037379 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.422459725 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12457817 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137798553 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.372397689 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158216884 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107197841 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.125941468 seconds)
  done (took 3.167852299 seconds)
done (took 15.161378819 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.136629988 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.2228074 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.683379959 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.159247725 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.155841172 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.198717861 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.366553012 seconds)
done (took 2.7338382 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361405575 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.183485511 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121454929 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.140333971 seconds)
  done (took 1.613849031 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.128381709 seconds)
    (2/2) benchmarking "read"...
    done (took 0.142570127 seconds)
  done (took 1.088751971 seconds)
done (took 3.516591478 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.156869288 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.154742942 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.140454755 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.160412145 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139139882 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.158257676 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.140362729 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.154516123 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.140827905 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.155597793 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138974479 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157816972 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.136759626 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.15944266 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137560129 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.158626284 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.139220405 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155466745 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137311196 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.159230086 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139120867 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156639681 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139198545 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1585873 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.138553422 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157203253 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137286306 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.154444011 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139356654 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.156623919 seconds)
  done (took 5.271336206 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.142818223 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.130153181 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.152862718 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.141671998 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.151268781 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.1360202 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.155152821 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.136135778 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.157974985 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135356003 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.155890354 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.134923892 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.275594256 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.13751984 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.155110543 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.140727087 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.162328512 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.136199746 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.154823405 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.138536382 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.13819624 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.156362815 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.135971561 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.156393213 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135674882 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.152493266 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135592732 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.154853396 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.13773623 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.153805782 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.139039759 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.15623701 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.137079132 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.16385816 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.140047585 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.153403073 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.142352523 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.132465587 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.158290862 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.132645916 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.152838556 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.134777349 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.154982581 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.140680039 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.153348958 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.136919885 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.154168301 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.136871972 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.154138997 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.138308496 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.151294244 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.137461807 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.155688975 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.138398121 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.138695762 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.152872485 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.136263959 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.15276765 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.137526609 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.154679945 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.133444305 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.152352402 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.140019201 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.155188076 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.150518843 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.16059994 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.137014068 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.155849483 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.138631547 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.159710393 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.139035155 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.165049223 seconds)
  done (took 11.465600506 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.138158165 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136200084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15545267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136192583 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155001676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136832056 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.155656442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137429236 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154390998 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137544326 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15608212 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136901704 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15456016 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.138097047 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136026549 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.15696383 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.137122667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157258174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137762621 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155823727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137151443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.154823706 seconds)
  done (took 4.032239127 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.282513167 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144138877 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.206490553 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.149985824 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.174578027 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.167799296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142913439 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.162972554 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141984876 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.165370833 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146829615 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161665511 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154978952 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.165152955 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16526889 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.149041021 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160698531 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.149077322 seconds)
  done (took 3.825657606 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.139014895 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.136454541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.157621503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137037513 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.158824444 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136557888 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157890558 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.13731678 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.155606426 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.138280497 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155599079 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139097183 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.154944386 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138383772 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137084244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.156722763 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.137538196 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155734606 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137782894 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156018291 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137443177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156835622 seconds)
  done (took 4.056023041 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154090957 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.158433423 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159243505 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161357779 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139422639 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.158267795 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.145113131 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.15899325 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.148246702 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.158593602 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141769179 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157224199 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.155121705 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.160016956 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145664417 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.157842042 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141027431 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158783369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142290568 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.138292747 seconds)
  done (took 3.880195482 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.229662959 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177172491 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.1742696 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.164188767 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.175991082 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155760905 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182413475 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156123125 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174778266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.166362765 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.17592193 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174282674 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164760313 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.180475894 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.15598251 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.184140525 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.16289967 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182597995 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.173603612 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156879144 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.184553471 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156429881 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.184354891 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156145276 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175820923 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.155093866 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176686932 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.181102021 seconds)
  done (took 5.68408384 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.152786571 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168307697 seconds)
  done (took 1.16638375 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.14189362 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140558456 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.161410141 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139816034 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.161194072 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.140710287 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.16134085 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141572687 seconds)
  done (took 2.034100277 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.199683519 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.22365712 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.166118928 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.150586695 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.22326597 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.212058713 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.199265904 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.148215898 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.160365373 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.132682412 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.217632764 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.130737891 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.159976859 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135514669 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.160617152 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14528162 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.165843919 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.14885797 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.165688761 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.141227061 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.164391156 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144556885 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.165204415 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.148606619 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.155110184 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.141237196 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.163487898 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.150518653 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.157274728 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.140366216 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.158533264 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.141246188 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.166610514 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.144712751 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.162017746 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.235122462 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146010056 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.157168204 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.140654165 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167810887 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.16719802 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.163049118 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.14224108 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.159201873 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142360763 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.166967963 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.145600431 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.161425278 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.1338458 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.156056746 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141148779 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.154701373 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141836469 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159187393 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.140839989 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167318559 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.142763512 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.1578499 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.136788706 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.155029827 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.139137806 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.155151975 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143035102 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.163425998 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.141306721 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.161252008 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.139378167 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.163216718 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.141866287 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.162101968 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.14003357 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.175739313 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.1417802 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.165186887 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145913379 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.163109821 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138357694 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.167695422 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1387168 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.160728748 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.145472986 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.18182609 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.142094806 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.156017686 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136541963 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.166857796 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.143607415 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.163443718 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.134432465 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167988544 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.143396843 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.162270851 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133659458 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.158763941 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.137802611 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.163995053 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.134101618 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160467636 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.142599377 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.164900841 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147670542 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158312392 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.143087038 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165294616 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.148352369 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.159224651 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.18748132 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159588998 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.136900732 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.164811716 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.147187239 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.155724442 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.139987935 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.160311312 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138559651 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.156449258 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.146308584 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.1609256 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.143247278 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.16511026 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.145232817 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.163007592 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.144186706 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.160442512 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.138162535 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.167630693 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150192286 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.162075359 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.145791386 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.161649741 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.144996901 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.160929005 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.146381197 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.15852688 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.146984164 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.158424114 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.15375047 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.143484112 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.167262398 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.160991409 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.139061246 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.158981752 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.144641437 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.159661234 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.145214772 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.160580249 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.138366717 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.153913137 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.143162319 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.157811459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.143484922 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169476571 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.139741601 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.143179203 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.158551965 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150334416 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.159903862 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.146247684 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.164580216 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.147033857 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.168598846 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.135023844 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159913875 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.143633209 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.165349355 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.137293558 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.164501275 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.141456495 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.170025371 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.135215708 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.167550542 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.134371089 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.158810537 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.146539792 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.165388741 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.145194965 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.159100648 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.175244819 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174958849 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148242746 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.161503196 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.141625769 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.166583888 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.141232532 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.16662021 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.147698546 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.167751544 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.139560578 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.161047808 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146620413 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.158421085 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.144461037 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.161251783 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144904288 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.156328871 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.144184981 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.15511347 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.147544886 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.162776761 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.147703609 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.167203459 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145741273 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.160344179 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.151121353 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.157971503 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.146691193 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.153130289 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.147314997 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.170439341 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.149401575 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167156749 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.144991913 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.159609963 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.146252878 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.169754504 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145518369 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.161340112 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.145249677 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.134635005 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.156950267 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.146871569 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.166031839 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.138327731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.163102248 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143758695 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165415132 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.140051632 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.155849837 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.146669877 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166813212 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.138175678 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.16351659 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.13880073 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.162179256 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149073361 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.157108975 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.138792763 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.166323105 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.147113957 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.163963904 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.142402396 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.166450031 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.148743054 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.165957448 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.145126337 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162202908 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150325566 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.162692163 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.142021686 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.160110593 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.145655977 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.156385528 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.145619479 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.164278232 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.143224608 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.159934769 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14723993 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170046889 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.148886201 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161243598 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.147945714 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.168586336 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.149106261 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161344252 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.148603046 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.159668651 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.136267293 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.159235642 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.137063395 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.163943074 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.141018704 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.166045518 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.142732493 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.16156583 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.148384806 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.164621968 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141253928 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.167601565 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155626256 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.158052041 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.137963083 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162266308 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143861874 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.16161266 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.141567803 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.164507032 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145964277 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.168684011 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14654593 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.160319263 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.145785735 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.171217663 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.140637674 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.16922343 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.150341196 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.167918178 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.141091655 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.147083037 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.161903981 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.146380422 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.160007924 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.141564693 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165187455 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142017242 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.143581638 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.140422365 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.161380036 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.135551829 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.161218553 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.148758162 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.165212046 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.147213861 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.164329381 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.140988036 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.16121318 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140084601 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.171895251 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.141331895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.171766305 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.145022591 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.158386524 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.136859359 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.169995186 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144228785 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.171384202 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.13819648 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.168342244 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15160803 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.169285091 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.145390387 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.172675644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152532843 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.170153296 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149437661 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.158442327 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.14244648 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169265874 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.145035155 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.168604663 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.147149323 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.159413621 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14719845 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.170652236 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.146924297 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.163326263 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.138886661 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.165566582 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.150695466 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.167905657 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.148894088 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.145767963 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.167260637 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.139163492 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169178056 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.150148481 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.166857969 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.15164523 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165975668 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.148431721 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.162632434 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.149578905 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.167221609 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.138216751 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.1594208 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.142293488 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.17253606 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.139861975 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.170756565 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.149760876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.162410952 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.142982561 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.169956392 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.14222306 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167650957 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149594596 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.163806545 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.155120516 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.167441008 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.144039784 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.170086867 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.152270623 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.158567273 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.145604057 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163990448 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151897499 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.163927723 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.150944019 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163736779 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151460528 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.167661502 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.150480221 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.171454077 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.152543596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.138034312 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.173495481 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146795571 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.169967733 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.141622843 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.165687223 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.139365926 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.16574482 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.151244139 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.164799715 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.154874021 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.171243502 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.142688836 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.164678606 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.150893369 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165715485 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152061275 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.164127967 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146071924 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.160935194 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.146184407 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.165511682 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.151535857 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.165237145 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.139705993 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17295515 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.150586184 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.172205289 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.147392348 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.172795866 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.139188584 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.161136017 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.14818747 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.164623027 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155591902 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169401464 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.143828402 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165385911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.148309173 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.169140236 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.153113694 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.161325024 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.142369227 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.167550539 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.14733586 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.164984769 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.14104976 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.171776173 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.144395508 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.168353145 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.146911498 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.162306033 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.145458939 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.173892147 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.144533979 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.162092818 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.143138919 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173837559 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.146161964 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.163991078 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.141044492 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171965002 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.147896264 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173504679 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.143663023 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.167718103 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.143441089 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.169309613 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.153418739 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.164810496 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147433969 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.166053873 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152907355 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.172646289 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140073737 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.163983457 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.157018364 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.170927131 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.147912545 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.169839161 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.147326163 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.173688942 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154014781 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.170079265 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.142443454 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.139671344 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.167636302 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.139234434 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.171877589 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15021554 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.168079339 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.143623446 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172938295 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151189043 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.17214341 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.148857907 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.163090349 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152698378 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.165896916 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.148444723 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.163479828 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.141287164 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.171502388 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152945217 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.167237052 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.147062176 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.170405836 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.149814236 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.162534104 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.144808024 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.172262963 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.15359849 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.173666622 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146668443 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.166842292 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.150063436 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.177545936 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.149691167 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.167124679 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155255974 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.173987415 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147303766 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.16911595 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151448985 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.174415418 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.151037783 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.174520198 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.145597121 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.167979612 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.155287144 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.174666463 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157194455 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.167936484 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.142356548 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.173417372 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.147398983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.16260388 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.151753101 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175116851 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.155461987 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.167025006 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.146339649 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176552285 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153359547 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168695582 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.147265187 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.166998861 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.154141501 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164999087 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.153110805 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143269376 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.177158245 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.153387142 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.177204188 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.15706631 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.164288677 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151934263 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.172397462 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.155767757 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.171991612 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.142238907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.165500991 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.149996911 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.177065266 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.153357723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.173403541 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.151268088 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.174980615 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.148939027 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169817954 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.14660583 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.17575523 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.1538018 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.171249103 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.15008718 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.169186502 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.148745359 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.171516451 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.154741702 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.176456047 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.150052403 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.179988422 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.155869177 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.168583776 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.146079121 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.169538321 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.152279065 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.169435718 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.155101327 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.165909827 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.145905881 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15241867 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.178166059 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1465989 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.178117841 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.155065704 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.168645176 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.149939081 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.179936617 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.151912788 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.173879016 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.149303995 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.174095452 seconds)
  done (took 94.035925954 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.199512193 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.180157489 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.151454134 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.173636668 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168234302 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176250835 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.150816378 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175385836 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.152894867 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182346458 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.151942655 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.173385114 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.166167702 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195452048 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188853925 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161130367 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172363272 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.153450368 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174408666 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.153391631 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.18695265 seconds)
  done (took 4.528400184 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.152001291 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.150473963 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.173985364 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15048471 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.173974465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.15105331 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.174538965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150873381 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.172876492 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152421099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.174144161 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15159528 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.151250727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.174318497 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15089459 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.174852981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.150693548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.173946708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.151221081 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.174717928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.151350029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.174575358 seconds)
  done (took 4.494729406 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.176420076 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.153068334 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.173453706 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.151191051 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.177484812 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.150723579 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.179566225 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.151824348 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183209188 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.146454809 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.165802561 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.146906679 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.174038262 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.151431074 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.167317108 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.152307584 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.183632305 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.155121718 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.178017869 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.152955401 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.164889598 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.153593207 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.151813945 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.167095279 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.157027899 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.1803171 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.154251901 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.178581181 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.142634529 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.179538577 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.151999697 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.17003561 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.14422431 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.166712109 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.143217322 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.178038487 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.156082804 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.174052762 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.154040963 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.14241862 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.178330088 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.156728493 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.167530062 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.152531358 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.1759484 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.14570182 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.178561605 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.15297477 seconds)
  done (took 8.733028348 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.18222752 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.21311681 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.155468635 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206907998 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.189059381 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.16318559 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.181002311 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.182064246 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.17907218 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.155533835 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190972371 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.165058088 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.181805286 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.157659023 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.178982027 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.155744341 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.181375244 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.155056297 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.183835508 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.155496106 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.185113254 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.179275008 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.167618734 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.188033509 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.157724471 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.179171067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.156991409 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.181692123 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.164678039 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.185390318 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.159396021 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.185656121 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.187419796 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.16131853 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17784088 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.1597983 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.189776599 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.15824073 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.181082653 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.156486261 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.181656929 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159581141 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.18115662 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.169447228 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.180793415 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.157996733 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.180977216 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.15424267 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.189972199 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.157615865 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.186194288 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.16578564 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.18282507 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.180699751 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.161086399 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.189408096 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.158445071 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.179443755 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.159857727 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.188713257 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.154912792 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.183105807 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.167532651 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181981078 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.161979381 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.191616275 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.158561145 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182541127 seconds)
  done (took 12.863354199 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.188832342 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.187039711 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16925032 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192336903 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.161663139 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.185903286 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160567279 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.184365923 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.161302599 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189758905 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.183802055 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.29042581 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.165144711 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.189976248 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.161541344 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.186955231 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163054886 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.184112181 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.161019397 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184766547 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.162358762 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.192050206 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161009872 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.192458136 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.194145351 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.16025352 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184582161 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.162302299 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.192817588 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.162343539 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195175189 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.16258878 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.184999167 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.192009391 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.172594971 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.186490042 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.410836882 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18492463 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.162950396 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.186802621 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158694665 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.194307446 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161370397 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.183341768 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.162016458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.186189634 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.169192371 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.196940489 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.19060433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.167445873 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.184804836 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.170588825 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18657049 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.162409514 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.192328787 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.199505363 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.169992861 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.19190246 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162552181 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.193720527 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.191802917 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.177503436 seconds)
  done (took 12.373902694 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.158826719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.156325481 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.180928799 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.157052264 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.181486802 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.156546787 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.181312232 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159104433 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.180903947 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157857869 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179840449 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157055408 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179297795 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158369878 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.155482884 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.181854843 seconds)
  done (took 3.656188076 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.175999436 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.196564319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.254240203 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.160937277 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.181481131 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.166423433 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.180128815 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.160952169 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.15437836 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.187686936 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.161290763 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.18427285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.196599108 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.160156085 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.180387629 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.160792334 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.155100623 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.18591223 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.158190989 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.258103233 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.187910875 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.159367286 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.18420331 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.161767428 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.18629123 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.162163128 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.190923721 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.157118426 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.18503426 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.158386396 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.183269007 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.164936806 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.181274572 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.161513156 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.183843397 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.158897554 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.182166754 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.158606979 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.185021825 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.157809175 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.183852272 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.158717751 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.183059231 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.159585141 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.180854188 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.159478999 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.180337873 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.164566116 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.18382661 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.160576914 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.181767628 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.163971489 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.186390457 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.166998577 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.188385862 seconds)
  done (took 10.649438182 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.170262289 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.183378519 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.17166255 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.179024753 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162107524 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.181491908 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.161287468 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.161153075 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.185261862 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.156118179 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.18413307 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.160670852 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185203745 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158656471 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.185736383 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.159229156 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.181226171 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.159104462 seconds)
  done (took 4.069733143 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158903233 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.155730562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.180964571 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156336323 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.181994653 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.15704879 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.180442805 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.157382122 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181260531 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15905833 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179573918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.158181964 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156877642 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.182879561 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.156489833 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181018052 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.156806544 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182147029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.156936271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.181288334 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156902663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.180021932 seconds)
  done (took 4.689006152 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170258708 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.256477718 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.187532611 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.23955191 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.182547921 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.153572857 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.191257775 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.180419396 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.172645512 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.179532876 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.155804761 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.1791506 seconds)
  done (took 3.23777005 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186456511 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.219122576 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.160268923 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183842661 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16794412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188690392 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188732033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169825135 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199264155 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186996858 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172282187 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196043975 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172741825 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193316927 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169051975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189559975 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164444565 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184636635 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202768526 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165051789 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195645851 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165196054 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189124395 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165544599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195820419 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172884194 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19773794 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187557161 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173004086 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19243876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165048131 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197559156 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174135603 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.185148211 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172218573 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190350643 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201860312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169175116 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197390766 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160936288 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193611392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171103197 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195114669 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195277957 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165071339 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192909554 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165503177 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189009047 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.184564244 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19415601 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195589572 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169758641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196864626 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172038555 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.209990351 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19989902 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173365635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193271543 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174723527 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198625789 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193124433 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173251258 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200203168 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168938826 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197036139 seconds)
  done (took 13.13193161 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198938533 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186566003 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1671908 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200758644 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172783902 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191223057 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164687491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190533594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165735444 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.186838963 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.23262466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165425799 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1965641 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172420258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190339063 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165454809 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19176641 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197230655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162849187 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.209707623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165858775 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197007396 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173068684 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198971298 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19989307 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170837349 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190767145 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165771087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191949089 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166544268 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19535277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164807039 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197297884 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.161872323 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197748011 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188973119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167464324 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193979704 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166512635 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194416032 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173233123 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.205556512 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164470839 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191252323 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200991643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167613781 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190240572 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162494787 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189543571 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162421874 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201601029 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175236113 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203073166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196829989 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166171755 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190289056 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166266251 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190800276 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166330597 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195821747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173304978 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191798602 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20967008 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166795566 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191396686 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174094175 seconds)
  done (took 13.132873067 seconds)
done (took 231.831370872 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.307851017 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.337972433 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.15186076 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.233375079 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.15251792 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.306891265 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.708130739 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.242263428 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.176568156 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.152469149 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177828444 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.173403792 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.560316416 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.152046575 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.176672555 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.168903051 seconds)
  done (took 32.182550165 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.342257363 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.390289169 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.167200283 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.182470038 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.15944024 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.185349199 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.155431059 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.184404421 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.157777857 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.188149717 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.15786593 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.178328671 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.163276212 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.179868721 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.158884651 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.184025746 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.162555835 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.183851307 seconds)
  done (took 4.501633466 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.176653347 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.324331603 seconds)
  done (took 1.519196779 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.190905935 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280268285 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.381008713 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.231699064 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179011331 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.201581987 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.231241592 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.170762736 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.272885647 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.17004632 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.195279293 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.180481558 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.186627761 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.187656684 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.17521939 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.180190061 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.186354795 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.19780808 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.171538052 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.184377165 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.182415297 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.184782021 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.162203295 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.198670161 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.262177754 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.170376131 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.186429366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.158666334 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.186056416 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.175213159 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.189243084 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.175528539 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.195336574 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238407551 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.183983637 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.212054398 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.188005193 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.157764235 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.197463231 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.157914999 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.186978932 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.185078947 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.170839942 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.180858728 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.158811881 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.185611639 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.158521713 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.182009529 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.168289399 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.185310007 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.167061535 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.190214709 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236381405 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.161389077 seconds)
  done (took 11.449047216 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.00561104 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.205432372 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183912201 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.150182211 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.206060221 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171740415 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.0222404 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.183888545 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.319332612 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.055548186 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174746403 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.19461165 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305140531 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.342244893 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.374129618 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.421249585 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.847280642 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.196679852 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190065334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.230784959 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188372386 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177121547 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.200641272 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516524645 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.160843454 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.182271507 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.165673825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.193427706 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.240409652 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.160661891 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.186870175 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.261452558 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.358545397 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.273646376 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160341688 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.18346123 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.157929463 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.248882966 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.363437742 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.284022923 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.251802725 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15699121 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.183226657 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165265851 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.199460593 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157083637 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245073473 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.256782681 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.257298985 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.18900137 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.168576125 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.193725873 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.162415666 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.241374016 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.181495664 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.427788187 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.45238003 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159304469 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189230716 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.173151194 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.339156525 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.186996334 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299127527 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.209086499 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279217758 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.183859798 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.92342514 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.252704197 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.157854 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.192383285 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.165067915 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.190838093 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161722238 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.248208808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.496061238 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190348107 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.165770117 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184953125 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290465704 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.160642197 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185715489 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.245162763 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.162823483 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.191176908 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168982756 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192044256 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.257611656 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.33801847 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.166452625 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.193248465 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.165477393 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.196024388 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.160198181 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.300122072 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.319702361 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.241924051 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.300494336 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165339515 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.248205568 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.252604483 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.189878357 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.257382077 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.165884734 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199238855 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164810716 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.314067758 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.199778723 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188645138 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.164980734 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.193498504 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.227953611 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.164675096 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.19260255 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.254116061 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.55665491 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.252676177 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.157733863 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.190301747 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166462079 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.24552319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19365973 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.357705753 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167980858 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.250957889 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.19370281 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.157496167 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.193059961 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.249350539 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168754978 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.193549695 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164078069 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199470727 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.345490629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.285343104 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.196279588 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310967911 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.259440994 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166286429 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.25885409 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.194431035 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.255260311 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.172108871 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190999051 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160377819 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.958715417 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.171325101 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.193926804 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.165133015 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.270620041 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.185569515 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.165085043 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184974109 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160130352 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.916295372 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.191277469 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.159067438 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.189110542 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166219173 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192166731 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165796256 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.194609759 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24790149 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.30989105 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.197486205 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.16557775 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.187625155 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.245795995 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.162607889 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.189328545 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1618046 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.188046015 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166890413 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.192758864 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.163681444 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253976226 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.244785362 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.322358856 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.633557147 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.161984068 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187566596 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308093545 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187161649 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.394973091 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192535582 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.3024519 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.250144272 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.157825863 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.451424531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.253189506 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.243331473 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.191689265 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.256686313 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.157950549 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.193798773 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.246226318 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.16001103 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195220547 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.243696014 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170031575 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.195914758 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.333384705 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.190756698 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.321003693 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.158044069 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.255165598 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188385427 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166704169 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.420140219 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161828879 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199214472 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.24527997 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.168130416 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.189400293 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.03726654 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.161711434 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.197910965 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165755707 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.329336062 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.249469152 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.168662899 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.195600394 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.169760369 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246799931 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.298487731 seconds)
  done (took 62.342518581 seconds)
done (took 113.009698647 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320190281 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228307981 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.424462505 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236038462 seconds)
  done (took 2.321044636 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.336786495 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.202352944 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.295887062 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184186008 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.302268544 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.159906738 seconds)
  done (took 2.546233746 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231117616 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228834014 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22904139 seconds)
  done (took 1.759567095 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269934199 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270713623 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414328628 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327718299 seconds)
  done (took 2.412647826 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.334913792 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.177854029 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.218359721 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.28712644 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.302272197 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272937378 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.184633044 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.23843028 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.217976581 seconds)
  done (took 3.333681213 seconds)
done (took 13.441040517 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.201778501 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.22034268 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.183169425 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.201173479 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.192301194 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.222239494 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191480559 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.217734803 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.189373262 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.201697067 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.188239891 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.200824514 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.278575823 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.190470867 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.199475349 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.189106605 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.201031643 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.198310709 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.218314718 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.172747441 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.219734023 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.172317459 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.200376625 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.179207057 seconds)
  done (took 5.888186828 seconds)
done (took 6.959019406 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.262499339 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.181224836 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.17000845 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.19993128 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.272650054 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179084902 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.21552752 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173286931 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.208322223 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.171852001 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.187323273 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186127885 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.197225356 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.242500979 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202979056 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.190300503 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.163275921 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.208259323 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.188746682 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.213180432 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.245234104 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.214279215 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.181509355 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.191430176 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.274282197 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16470485 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.199164208 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.174188184 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.212861578 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.171144563 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.200545194 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.16321452 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.214380463 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.187731645 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189218253 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173191621 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.18797127 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137567333 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.170713082 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.200920626 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.184656303 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.19994018 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.197411546 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.165476359 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.172213025 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.200218395 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.161702825 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.203164265 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.160339298 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.200856342 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163692099 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.216835404 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.172366303 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1898767 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.161865059 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.192972562 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.181081139 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189072346 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.185988831 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190603334 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.164029725 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.191322567 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.173352134 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190153216 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.172423197 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.190979748 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.17249005 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.203120397 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.172459015 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192413404 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162776848 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.197937143 seconds)
done (took 14.826985558 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.168816457 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.231230547 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.272281393 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.249483675 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.230901188 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.210150559 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.178255541 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.213355937 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.176055088 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.207539405 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.197411103 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.22291059 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.280911088 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.179241878 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.208109491 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.174436793 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.20409503 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.170606534 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.278668056 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.217882683 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.18639173 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.209488919 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.216401122 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.182147615 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.192613418 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.200375484 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.197401853 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.176850846 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.19321497 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.175657661 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.215153288 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.167511957 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.196641454 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.185673862 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.211680228 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.177208297 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.208617067 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.175956086 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.196051868 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.168436235 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.202482451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.18191262 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.194693963 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.205952319 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.177758365 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.209534097 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.176305337 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.204796657 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.171126268 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.199590326 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.170172889 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.219469723 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.180954728 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.211524766 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.18105644 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.206950063 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.181018158 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.207607221 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.171272697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.207111408 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.167583121 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.195291028 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.169031425 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.215186058 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.171514722 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.206251919 seconds)
  done (took 14.171887147 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.187307903 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.224600784 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.178976768 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.206296002 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.173072511 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.190399891 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.16967599 seconds)
  done (took 2.432401952 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.165804484 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.285523879 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.282977951 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.283953966 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.278992572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.29253576 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189799384 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.192502374 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.201336158 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.203166088 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.285442531 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.314715258 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.175193704 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.20776555 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.287550169 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165228144 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.288038979 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.268193963 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.178940213 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.28622036 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210710729 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1989347 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.206677526 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.164663276 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.280173972 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.195448804 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.337991735 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183245966 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.205232353 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.17891453 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209766786 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.270518228 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.281665274 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.179278397 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202795488 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.283023908 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.252173708 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209437893 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.294933494 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.170277817 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.281459063 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.210382052 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.180044447 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.209830402 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.179341948 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.270428764 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.213972288 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.182196513 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.208514241 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.292390197 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.177310212 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.28354574 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.205207581 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.181424166 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.205272967 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.181493708 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21524878 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.180568256 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.293136464 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210933656 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.254715251 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.283947323 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.283238601 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.285110292 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220543107 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.286091478 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.24668835 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.207961747 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.286598654 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.181336844 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.287051064 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.210139356 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.178180518 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.276595706 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.21306467 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.288801105 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.288191329 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178697225 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.20721156 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.170466526 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.205562277 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167244978 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.290172661 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.179532396 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209417051 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184412318 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.208857971 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.206179267 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.253519626 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.218756518 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.207491264 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.180955462 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.214620317 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.181275234 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209080503 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.29291463 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.177311179 seconds)
  done (took 23.24105958 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.16914422 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167503162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.1994889 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.167553154 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.195012783 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.166801431 seconds)
  done (took 2.197530757 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206179047 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.20899771 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191183667 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210915948 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.229635463 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.292738038 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.300995841 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.203866442 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.199944214 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.222584581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.295556393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.297718837 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.296815865 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.185355716 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.299287972 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.211778229 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.302636417 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.182113098 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.216952837 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1818268 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.208405973 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.186473799 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206833153 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.286049574 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.184315803 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.211063695 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.17689245 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.222556894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.189157612 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.204256198 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.185822407 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.210676322 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.173685077 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.205104587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.302323609 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.173615594 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208194302 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.184042754 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.214671514 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.182350205 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.298365025 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.21118648 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.187748781 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.214729125 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.175901689 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.205059984 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.184470371 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.203457688 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.30239758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.184403483 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.215609361 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.181846778 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.214184116 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.184870124 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.203814004 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.202475585 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.18575168 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.30366535 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.214419686 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.176916417 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.211716011 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.183967914 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.204137405 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.188191492 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.21094157 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.185674512 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.202542336 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.183227546 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208917646 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.183258893 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.214482165 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.182881115 seconds)
  done (took 16.602244459 seconds)
done (took 59.734089136 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.726390734 seconds)
  done (took 2.86113377 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.172700557 seconds)
  done (took 2.308627948 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.432286769 seconds)
  done (took 20.600367441 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496478491 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.417374802 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.094720568 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.241261064 seconds)
  done (took 3.386059876 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.182272711 seconds)
  done (took 2.336500954 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.465331569 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346290529 seconds)
  done (took 1.956203329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.834059916 seconds)
  done (took 1.990009372 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.829069796 seconds)
  done (took 2.975413125 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361599828 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.284202523 seconds)
  done (took 1.798807732 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.686404482 seconds)
  done (took 1.846532239 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.51095086 seconds)
  done (took 15.671815009 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.317700818 seconds)
  done (took 1.481055532 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.354533377 seconds)
  done (took 1.521104293 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.865015896 seconds)
  done (took 5.030303227 seconds)
done (took 66.914801232 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.183460003 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214002748 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.187617648 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.211223718 seconds)
  done (took 1.945395443 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.188239092 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209031157 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.18876176 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208811414 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191213347 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.210949468 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.183304234 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212776922 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183532617 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.18286728 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.213961046 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.180160619 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.215550301 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.180892986 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.209584194 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.185144385 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.215449262 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182624594 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.213782406 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.183443371 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.212705413 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.185599078 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.217213475 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.186744145 seconds)
  done (took 5.900892784 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.18054326 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.171912318 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.206914916 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.172827172 seconds)
  done (took 1.901782256 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.193142344 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.225185148 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.196876387 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220791219 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.197573325 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224650596 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182195668 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.209350586 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.182234937 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.222533535 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199128943 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228269997 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.197082376 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.219143594 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.193683183 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.208356799 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186459295 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225375837 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.19092686 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.224322582 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.185474803 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.222061328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.18899425 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.22541718 seconds)
  done (took 6.120138101 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.259424814 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.223772635 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.209442295 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.259436419 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.241014931 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.182204422 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.238415108 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.18954428 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.217532617 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.183484778 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.213232924 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.230973072 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.220154103 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.184626328 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.21352024 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.187445527 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.222328823 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.187026861 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.254310458 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.21615008 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.18976187 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.222232596 seconds)
  done (took 5.919939458 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.271611335 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.205591733 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.171472588 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202468755 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.185987892 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.210325802 seconds)
  done (took 2.420593917 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175678324 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168149188 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.199058591 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168131647 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204461237 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.168313129 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198241313 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.168722164 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198429045 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.169776253 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198124508 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.167855925 seconds)
  done (took 3.364199065 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264456832 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217010971 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350093651 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.463358244 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259719421 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254699964 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.374066037 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224084809 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.273218342 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232164476 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278362283 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228007304 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248770488 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281886625 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207605927 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.244692095 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269038564 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278341963 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238968478 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310943266 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25115954 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269613071 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257620332 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244841634 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233727923 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229611415 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.217363282 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193263649 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261613301 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260288399 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271267814 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215467881 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237405673 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283128619 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321746397 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273904707 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.360123778 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229527995 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.22723234 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.290399288 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.327027692 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235938916 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291095705 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24987495 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195216058 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291040046 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24538525 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.279614181 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.199907415 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238972706 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276805339 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245003927 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.264462853 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232869742 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398876807 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199942606 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.237357882 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27513466 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28314464 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298992868 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247572907 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.220386968 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266235714 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290942983 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313883511 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.206492423 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.261951805 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218538576 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230191939 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304313978 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278030907 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255176316 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288169317 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196828549 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27192239 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262457913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219330498 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304550465 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268796531 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.216542926 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216323005 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22985626 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191044029 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.286347573 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217549348 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313829489 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197945527 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.272534412 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270159328 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217462852 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257095627 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25543298 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226970308 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245637531 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.157614475 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240328869 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.256181993 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223707598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225938057 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247566403 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2059021 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221751397 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217436884 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.219414679 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267302604 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.193799167 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255746484 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265369403 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.199592665 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278712821 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24296895 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.23200916 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264849079 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296756378 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196893948 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230435811 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320007755 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267724329 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.202405375 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269248865 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296536777 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.23887903 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203081185 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263376323 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291535156 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209661751 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299450306 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236464434 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20014037 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.225131959 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271195053 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224849898 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.259850434 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223157816 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.231699984 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284770933 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.225091772 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205137086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280195252 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230517073 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190148587 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234366723 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231666862 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.210102966 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.248129237 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.204492472 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251818938 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265102901 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233061731 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252491898 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231017881 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270344041 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198313279 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.268448154 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244616835 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.18698458 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.271929691 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296912346 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195858823 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276817227 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.257175578 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274037272 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272044391 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196827806 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.28088877 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194316085 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.220048807 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258601032 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237354625 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260491764 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288922148 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270940885 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.262778465 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.259827594 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216719665 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266902558 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.28416592 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223721292 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.23901812 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27094978 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265196079 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.186995408 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.219482582 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.194077467 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23433461 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197050205 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234278138 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276633266 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23024064 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272416867 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266621972 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236422701 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.292689765 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.192839668 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25709845 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.274572069 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205635286 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.290473505 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291870209 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280473069 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205162326 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262602847 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.217916213 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19601482 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229884144 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224551809 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236319751 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200328091 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240264779 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290771506 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266203083 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215339378 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314204215 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23139744 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.300825795 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.219454474 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.228326452 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263758434 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268000709 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.254327822 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231688111 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.224904994 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292398588 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241419049 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291518713 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266554455 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248609095 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291333227 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.26372665 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197040711 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242775996 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259919421 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204890497 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.258411757 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.241265457 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197733101 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247035585 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.20401782 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23913428 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283914601 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241229452 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24173366 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.254614537 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268348964 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192002263 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241683804 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276123804 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243624089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163264956 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263028228 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258718554 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249160064 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251746192 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266710636 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197524232 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.418125812 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282979972 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238846102 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236649162 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236812018 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240831524 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255860421 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2593814 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249541548 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242034878 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308681833 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27078352 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.205350926 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23017718 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243029036 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217066906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.227170536 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.218494774 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.264352245 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.24268592 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287442248 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203963093 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274331707 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278138522 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.211692243 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.248153668 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205265152 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.361137006 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239733229 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271846486 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.264666835 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.260165729 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251368889 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223863044 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195021743 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.23378019 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282847049 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198546649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279101534 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.259963788 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278342116 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275624419 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229016578 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242675717 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.195569833 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268817785 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247821492 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278994817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204051438 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.238420805 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286613172 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185850961 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231081328 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227568278 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39313218 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247859126 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267756379 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165936667 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.384222392 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197484222 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23406386 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256587747 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236724198 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.233645482 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.256366423 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274633126 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241433863 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22594971 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237650741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275072976 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280638032 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268173521 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241708198 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.247831499 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26447653 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255254835 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23969349 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246527514 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.245274181 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228646706 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297343987 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.274790716 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.200472834 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271054965 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272395989 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238889148 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270373048 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240315393 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281701793 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196627206 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266854044 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204714423 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227783262 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260170003 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.263922412 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200345896 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274391241 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273338708 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20078424 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228306939 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215391818 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268132721 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242495282 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.197494362 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287281214 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.23047089 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284825385 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280958524 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232017135 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268400419 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210843858 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232972832 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206455647 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246442741 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232147151 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.247658019 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280662728 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.198098635 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274856471 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266618911 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263351743 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220689269 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243879511 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.368124703 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.197746845 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297660531 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250277744 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265739802 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249184129 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280584207 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271922443 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219085932 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265757927 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246844345 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.290072029 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265147244 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.271393523 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200975601 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24653897 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206884192 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.235948073 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250904817 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239599239 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243768239 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.237767857 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.238754237 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245139846 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.245700636 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211414787 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.304890358 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.24966377 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289333126 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254577299 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240281245 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279372089 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242310757 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230395164 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.266146002 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271456725 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214042242 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255258288 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.203897385 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.239872689 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31830989 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.194392765 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264020504 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278106489 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240361292 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276026832 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.235242374 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280275951 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211207935 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280364646 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197150344 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.252441847 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272877673 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203502088 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.229544607 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275115884 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230087883 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.269786 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243013305 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.250816785 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30102931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.192295622 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236824189 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395628106 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263880118 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263739461 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.224339062 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205979846 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25090568 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261422857 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.236224551 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276874315 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.232733011 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200755679 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.248798194 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.221087037 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.233632759 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275554429 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252342889 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258697386 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287822868 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.204210319 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.358847593 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243729253 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242987348 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.208641748 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.199219885 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245424979 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204422734 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245416128 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279816649 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322244879 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.267236932 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.216860141 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239089829 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.195151822 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233801833 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.262023404 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221720705 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273319449 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25000986 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164761955 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241174136 seconds)
  done (took 121.282310208 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250736031 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.251444201 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.326723152 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.321115774 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.304716268 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.388524224 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.35729238 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.362140031 seconds)
  done (took 3.855398213 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.191992787 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.238642605 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.244762492 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189276468 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.214341201 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.534131273 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.237746838 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.191499787 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.263964464 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.222250432 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.182511587 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.64581485 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.221555484 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.219464156 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.224078852 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182321757 seconds)
  done (took 5.502895671 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.290267467 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.652140673 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.383835429 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.373581429 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.341326103 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.28790317 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.925035795 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.270660048 seconds)
  done (took 13.829115123 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.24357861 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278066048 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.440402058 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.377159644 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.28985835 seconds)
  done (took 2.936754938 seconds)
done (took 176.128479761 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.196133493 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.194656806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.231238636 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.197006504 seconds)
  done (took 2.110277046 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.238837942 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.152038345 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187766312 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152075567 seconds)
  done (took 2.041854263 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.472800912 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.151674112 seconds)
  done (took 1.955391089 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.216601278 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.238190217 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.208323456 seconds)
  done (took 1.982149385 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.210220093 seconds)
  done (took 1.524310447 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.193029863 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.189649261 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.315878697 seconds)
  done (took 2.012834626 seconds)
done (took 12.936422281 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.214477815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.04882658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.658355949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.203968225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.824582981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470828302 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.531371073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251544328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.275173213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217780474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247171314 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.766233401 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.512525783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.953406786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.496770023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.953067334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.798447634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18476793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221072925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183527723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.508374281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182675758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216177166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185337374 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.795403847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.489823007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214168001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.964553923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214486934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194492993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.504637214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183129094 seconds)
  done (took 23.96570484 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.185771317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.273240517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.23895923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.21890023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.19138606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.218287407 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195180137 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.229889118 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.318307761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183970099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.23820893 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183660144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222030611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184939074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240780431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183598857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218142873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184611668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223446053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186413126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238097283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182800555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218642795 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184661984 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215908298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.201613081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216595301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.195600042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216797984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193498953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222484063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184455006 seconds)
  done (took 8.113590183 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.227203886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284172025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239436431 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.257647044 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.270540771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.186543534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.305014589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.252494812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.291724616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.21805105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.204880963 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.218859979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223331685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.219479116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.207385356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.219185435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.186829214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218677351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222565444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187975181 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237503639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185663952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218243428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184945129 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216427838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205145539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215907201 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197430234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216433057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194413108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221602356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185463872 seconds)
  done (took 8.451252071 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.199033232 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.199747386 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.241799735 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.238513507 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.196252618 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.196559037 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.234548004 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.193263638 seconds)
  done (took 3.033355362 seconds)
done (took 44.881389502 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.209075689 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.232132086 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.207856633 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.198826851 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.307117347 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.226223022 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.20127562 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.227050614 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.198835866 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.241362568 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.183706489 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.225764254 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.204617996 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.229097782 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.309897503 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.202899676 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.314444996 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.312501819 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192727611 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.233903177 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.192541471 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.315066827 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.231010106 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.195696072 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.292905641 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.188678058 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.301864972 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.194337877 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.232705951 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.183552741 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.312219766 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230758796 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.194372828 seconds)
  done (took 9.041866358 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.293809412 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.230252197 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.192780892 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.22927688 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195558362 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227545782 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.331240703 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194608702 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.228037774 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.194810867 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.192963556 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.313710861 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.235446697 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189417109 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231125602 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174844107 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.333172464 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.193525692 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.221760142 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157588783 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.780884429 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.199823161 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.344829075 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.189389172 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.230024513 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.193410775 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230771568 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.200421831 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.228860283 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196818384 seconds)
  done (took 8.703173599 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.201562888 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.207396914 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.249910104 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.298258582 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.224848896 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.241162125 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.211810114 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.24106815 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.215811468 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.223737234 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204106489 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.259691845 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.203390488 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.233437981 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.187350504 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.238301762 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.201916536 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.223007066 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.197028773 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.240435614 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207903794 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.238967747 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.209096724 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.234491272 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187368934 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.229837151 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.198091806 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.232227345 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.196467807 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.238114279 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.188752074 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.224515724 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.190602772 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.256488988 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.188247659 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237068899 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.207768135 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.238327473 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.20080844 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.254993122 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.189847038 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.224844066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.215193646 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.280964747 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.189087286 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.233908305 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.189967369 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.238405107 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.185320116 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.241962203 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.229711343 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.223156423 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.240534419 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.189189202 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.185342713 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232359366 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.187419174 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.225647176 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.202858022 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.224649604 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.208221149 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.231587973 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19902783 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.224359491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.199864701 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.222387139 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.188219256 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.227762005 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.216256935 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231776664 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.227714766 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.222743121 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.200735998 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.23721826 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.199358262 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.235013476 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.187094463 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.234439456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199422945 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.226076822 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.201217699 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.225080079 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.189689135 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.238556745 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.210611487 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.239318485 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.199628761 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.23329127 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.190767462 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.224486416 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206490876 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.22413213 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.192087455 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.236378919 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.189543229 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.225871535 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.199034444 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.230842825 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.188361428 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250589871 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194233379 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.221707298 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.217262486 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.224529803 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.19386617 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.230429373 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.233829959 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.222984508 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.19912924 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.233306743 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.190075489 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.229680026 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192182629 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.186744329 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.238399893 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.204646225 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.230902905 seconds)
  done (took 26.809113997 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.409375522 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.401038328 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.292067987 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.449653099 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.240885947 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.325414418 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.398802412 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.402523157 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.223257508 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.226626936 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.280463798 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.366483512 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.225296305 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.219532717 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.404950503 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.48513147 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220944974 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.266689008 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.260830592 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20264724 seconds)
  done (took 7.671666383 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.200039761 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.257076756 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.213361657 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240994598 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.200422756 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.237760603 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.191092317 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.244838533 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.20243148 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.231062752 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195330045 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.230779013 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205062117 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.203598448 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.241619049 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.247344661 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.197305127 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.227551387 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.21290764 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.228367676 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.20871164 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.249925292 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.197557133 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.247296865 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.207059241 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.236919282 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.188432412 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.23059665 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.197018323 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.235103259 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.194202358 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.23322944 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.19743921 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.202493761 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.204303694 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.204765805 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231362371 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.191996632 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.232645576 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.19189279 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.240278795 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.20173102 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.235425091 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.202889844 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.24331939 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.178444384 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.204701121 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.238743837 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.172309054 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.243574907 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.204331449 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.237730135 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.19833387 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.245362112 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.199054461 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.24230413 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.201927373 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.23872846 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.196695447 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.223958667 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.190299461 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.22757482 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.201585562 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.2379221 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.20388474 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.197883776 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.23793009 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.189762096 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.231640008 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.19213306 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.2280038 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.202448033 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.246844693 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.198991527 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.232891866 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.201058341 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.234628662 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.160999389 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.231277956 seconds)
  done (took 18.475631021 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.216707783 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.234742798 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.210401078 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.256235818 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205046434 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.231028593 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.202791509 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.208751318 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.240309723 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.209729521 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.242298986 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.238346325 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215389624 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.235609436 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202444337 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.240642031 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204739392 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.262372032 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.202981539 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.253451096 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.205021831 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.230992217 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.20439846 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.237978337 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.218417973 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.237132459 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.217712737 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.238871452 seconds)
  done (took 7.687668328 seconds)
done (took 79.723497429 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.566161203 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.752511805 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.475605543 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.48351529 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.498897526 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.514333263 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.481619208 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.481976261 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.246161873 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.454882797 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.478491905 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.479102119 seconds)
done (took 32.336773559 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.607705756 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.140577859 seconds)
    (2/2) benchmarking "String"...
    done (took 2.200932654 seconds)
  done (took 5.731702688 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.14814938 seconds)
    (2/2) benchmarking "String"...
    done (took 2.166148225 seconds)
  done (took 5.683471468 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.469112111 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.481435775 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.866477924 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.471550505 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.467535969 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.469644606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.469711642 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.469152231 seconds)
  done (took 18.064866929 seconds)
done (took 35.92575257 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.479286701 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 3.090857778 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.739135699 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.452716953 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.484390808 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.468701825 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.47212855 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.507352015 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.469671656 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.467049918 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.92687905 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.786928388 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.476928973 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.924171006 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.453578739 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.482390499 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.468361833 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 3.220533482 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.472989787 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.487101861 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.456824693 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.453474346 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.477565526 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.46602128 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.506800216 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.475176658 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.455431745 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.47428275 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.600612155 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.498901836 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.49418694 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.491733186 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.456810861 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.488275344 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.487882781 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.479508415 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.493995689 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.487749348 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.460882207 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.472737479 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 3.359016282 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.484589961 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.472889563 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.474570835 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.457676544 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.564154805 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.463182423 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.595996678 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.4946428 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.496865938 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.603611301 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 3.335063337 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.494867177 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.488942336 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.485684193 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 3.450119387 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.481926871 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.612531247 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.499247485 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.507351992 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.480066188 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.473884489 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.527116094 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.475787225 seconds)
  done (took 164.160225443 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.470983291 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.473967584 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.475002602 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.520347282 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.475485096 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.477729591 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.472739421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.472615582 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.476606116 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.501025155 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.474959138 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.476582111 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.476105176 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.44235974 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.482113189 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.492898117 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.476275355 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.473876643 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.503165488 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.473244008 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.477703339 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.474560665 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.472943187 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.473478682 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.524873131 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.566178096 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.484060235 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.497436503 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.483874011 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.475472974 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.515746364 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.518064427 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.201846593 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.343843168 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.481582911 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.497570286 seconds)
  done (took 90.450989215 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.475253338 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.474071109 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.473984899 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.47390598 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.513494479 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.478718024 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.125270273 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.124135835 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.697962284 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.841318526 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.207043281 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.913688941 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.474539873 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.574760154 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.488997575 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.475829552 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.578915561 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.504354961 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.476684627 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.477059305 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.1240922 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.489775165 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.489173901 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.681486812 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.478080967 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.515226489 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.892130667 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.480298683 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.514059574 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.850571699 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.518042076 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.480344129 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012453979 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 14.063602058 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.602755072 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.484028442 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.517092475 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.479291919 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.785621303 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.478463033 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.47805852 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.477895239 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.481196458 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.320181385 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.478433664 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.125836473 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.47706235 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.830809842 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.477150147 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.478598207 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.479094328 seconds)
    (52/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 256)...
    done (took 1.894653249 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.512952656 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.750156093 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.652956729 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.477887513 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.478245624 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.481297388 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.478367867 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.478876573 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.518263361 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.53543906 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 5.024564265 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.479578956 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.48395866 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.519301764 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.482440002 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.480941872 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.381293464 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.536745591 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.630504851 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.128835285 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.478925944 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.58569848 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.612708735 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.482672778 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.4790197 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.480562454 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.479819144 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.600855965 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.482851965 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.183116012 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.688977373 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.482492053 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.261482409 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.593750541 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.484360119 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.936231252 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.4818238 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.480307866 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.426137678 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.587174263 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.481634204 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.482263938 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.479566585 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.175820284 seconds)
    (97/114) benchmarking ("sqrt", "LinearAlgebra.UnitUpperTriangular", 1024)...
    done (took 22.111267481 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.162846564 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 7.088679855 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.483022225 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.966627952 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.481426334 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.21488345 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.142325418 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.239272831 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.481823167 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.60088059 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.687942781 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.485072022 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.482133611 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.272624402 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.485431636 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.536572207 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.483899348 seconds)
  done (took 408.993061422 seconds)
done (took 664.974377441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.467967537 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.468205432 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.46781379 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.491241056 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.467883252 seconds)
  done (took 13.744743648 seconds)
done (took 15.126688941 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.483146055 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.48706611 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.489368647 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.205882368 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.487433201 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.489058149 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.488716427 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.488838289 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.486220092 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.491073977 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.196940344 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.488661851 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.493420161 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.389192279 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.195378788 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.486954503 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.313440017 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.49049471 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.489593392 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.813286757 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.495234981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.55106272 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.780318126 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.529894059 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.820478929 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.83707121 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.495198851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.648673419 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.509440544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.506215354 seconds)
  done (took 21.372027703 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.300404992 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.807760021 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.496277222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.574634035 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.783222691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.529712708 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.809990451 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.838586567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.496813433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.660570266 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.509213817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.508503333 seconds)
  done (took 21.399739447 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.198971903 seconds)
done (took 94.795449657 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.529553742 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.600408525 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.526016389 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.50631303 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.503530951 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.505159207 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.506208069 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.505053018 seconds)
  done (took 13.567819151 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.502854829 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.50292751 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.50390837 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.502704938 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.503214542 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.502338497 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.504655766 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.504068652 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.504121752 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.503318972 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.504447486 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.504161455 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.506426922 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.504379575 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.504653635 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.503636804 seconds)
  done (took 25.447963323 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.508157602 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.504766335 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.503780334 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.5023536 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.504187394 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.506630769 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.506409444 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.504657235 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.503203297 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.504805355 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.505928492 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.50422465 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.504353639 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.505108957 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.504504838 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.506483057 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.503782434 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.507081548 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.509791053 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.504278652 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.505615085 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.50458997 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.505278236 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.505144419 seconds)
  done (took 37.512843655 seconds)
done (took 77.91453964 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.489142499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.516355257 seconds)
  done (took 6.392907909 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.566060387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.562851529 seconds)
  done (took 4.518739541 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.507003452 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.505918958 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.506936368 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.507746604 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.507382633 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.506270857 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.506633973 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.506410183 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.507720334 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.506571345 seconds)
  done (took 16.457399715 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.507363036 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.507777639 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.507747534 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.507038219 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.507571049 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.507380993 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.508053759 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.507414995 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.507908782 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.50814544 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.508802441 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.508009395 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.507501873 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.507755827 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.508745211 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.508073943 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.509392208 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.510069661 seconds)
  done (took 28.534200799 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.521193443 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.527094233 seconds)
  done (took 4.438487383 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.635618386 seconds)
    (2/7) benchmarking "second"...
    done (took 1.549990832 seconds)
    (3/7) benchmarking "month"...
    done (took 1.612670023 seconds)
    (4/7) benchmarking "year"...
    done (took 1.60558567 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.550770511 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.530531569 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.550316036 seconds)
  done (took 12.425494678 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.503697836 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.798627524 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.985786442 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.670667613 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.497292777 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.511866798 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.479485999 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.51737939 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.513734165 seconds)
  done (took 16.869593931 seconds)
done (took 91.02417711 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.49441211 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.50409285 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.514969437 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.532433105 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.848621557 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.511383584 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.494307658 seconds)
done (took 18.291822913 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.485782601 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.488535002 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.497870114 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.510837198 seconds)
  done (took 11.375120186 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.494945773 seconds)
    (2/2) benchmarking "read"...
    done (took 1.822601447 seconds)
  done (took 5.70934788 seconds)
done (took 18.477020851 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.511152592 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.511003519 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.511347209 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.513404338 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.510107077 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.511549097 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.512124132 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.513591569 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.511771463 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.512830293 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.511191947 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.512306738 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.511961139 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.511060985 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.510701152 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.512400973 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.511924162 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.512842856 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.512291406 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.512763439 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.511094332 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.513290471 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.512314258 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.51258281 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.51188386 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.512581297 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.511761279 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.511749815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.512566737 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.512685692 seconds)
  done (took 46.754122589 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.518506725 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.519298164 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.513500706 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.513147566 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.51425405 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.513033054 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.513513641 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.513371171 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.513675104 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.512945661 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.512670434 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.51391426 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.514492452 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.51460648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.513505494 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.514273535 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.515141116 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.514911051 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.514198784 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.513930625 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.513752757 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.513344365 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.514658948 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.515944634 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.515183503 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.515167083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.515647789 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.515814975 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.514326385 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.513995123 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.514226609 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.514912551 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.51550301 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.513850747 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.515164872 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.514782776 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.519655705 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.522495387 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.51672819 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.515283946 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.516224005 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.516382463 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.516121875 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.516088626 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.515850614 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.514720826 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.51530411 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.516519555 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.516739594 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.516425941 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.516278458 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.515707017 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.515433077 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.516516532 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.517969732 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.515714643 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.516347131 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.516228884 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.516768631 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.518619514 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.516928727 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.516703115 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.51809693 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.518201271 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.517862821 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.516995693 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.518742861 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.517130871 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.517241157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.517737571 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.518085469 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.5177355 seconds)
  done (took 110.530915627 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.518768735 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.520730309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.518531497 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.517854387 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.517799571 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.517449768 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.518772948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.517330076 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.519481334 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.519679761 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.519234162 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.518244429 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.517992739 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.520635631 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.518204585 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.518285479 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.518333972 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.518975374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.520243888 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.520398764 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.519867037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.518165341 seconds)
  done (took 34.813453918 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.519576624 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.520644344 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.519366113 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.520356041 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.521996764 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.520765641 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.51918186 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.520716832 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.518839276 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.520583506 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.519273637 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.52072095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.521159733 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.519679393 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.519988687 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.523325447 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.519862361 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.523305425 seconds)
  done (took 28.769496334 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.521875787 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.521915544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.520037451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.521137237 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.521344132 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.523627734 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.521136343 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.52105593 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.520476033 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.521169486 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.521685934 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.522360409 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.5218136 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.521683266 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.522465191 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.523701152 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.521375842 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.521276407 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.521466365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.522757689 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.523014527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.521013693 seconds)
  done (took 34.879924574 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.523514175 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.523150766 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.521254958 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.522528015 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.522050393 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.522469866 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.52370379 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.521818387 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.524886487 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.522600172 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.523551994 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.524096715 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.525642051 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.523398481 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.524085634 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.523281993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.523302163 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.522555678 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.523794113 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.523536057 seconds)
  done (took 31.868047374 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.523836195 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.525119407 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.524271661 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.523992098 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.523581003 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.524696665 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.524552717 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.524540654 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.5255207 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.525401324 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.525192541 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.526308789 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.524402485 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.525280036 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.524804527 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.523570185 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.52592876 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.525115299 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.524997222 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.525742191 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.524959321 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.524994288 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.525031277 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.52530541 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.525055828 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.524820421 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.525564125 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.527109037 seconds)
  done (took 44.103620718 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.546217025 seconds)
    (2/2) benchmarking "in"...
    done (took 1.544322443 seconds)
  done (took 4.49446741 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.526411373 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.525584148 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.526975951 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.528094664 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.528067327 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.526763907 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.527676176 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.527479696 seconds)
  done (took 13.62156817 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.519381322 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.528504792 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.527138672 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.529343947 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.528885018 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.518868798 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.528692011 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.53404025 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.521633329 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.52171439 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.526591151 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.526182798 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.521322933 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.523432313 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.520989605 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.524784063 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.532587652 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.528568573 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.529902774 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.529323616 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.529203064 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.52238662 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.523056235 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.530052212 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.520183228 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.533421611 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.528675591 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.532639933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.521467747 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.525393195 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.522927038 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.531349465 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.529233431 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.530127606 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.528561054 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.530078612 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.53000898 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.52903717 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.530637666 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.536295205 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.530380742 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.530142381 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.524020512 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.526701435 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.526698462 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.533471865 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.530907878 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.530347275 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.522081489 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.527134197 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.536389674 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.522674581 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.532059967 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.528836809 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.53005517 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.53448518 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.537173817 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.525380839 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.530329544 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.535588953 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.542569613 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.539168728 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.532812352 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.534613589 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.531629226 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.537892907 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.535044128 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.537433333 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.533206652 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.532184907 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.531586128 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.545873308 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.543356767 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.537455487 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.53195814 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.532150778 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.526123162 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.536782287 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.533616249 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.535172977 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.535938361 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.531896854 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.531743495 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.535873247 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.527918647 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.535436956 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.531398001 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.533596452 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.526223319 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.536359449 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.543411276 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.532904117 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.525689437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.528948499 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.531119812 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.536330019 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.526251777 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.530563942 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.537734177 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.534477834 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.533948114 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.528222492 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.536919417 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.539698985 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.535219449 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.53756198 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.541691881 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.529081523 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.540311521 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.542718919 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.53543582 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.528883589 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.534305036 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.538765138 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.530041738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.537182061 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.541572939 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.530732334 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.540511389 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.535978944 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.534432823 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.544089482 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.540897845 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.535849197 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.531817735 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.543431995 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.535844504 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.533419421 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.542318187 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.536482413 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.53567683 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.531863127 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.542205059 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.530013945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.541463367 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.53123959 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.540251597 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.536703045 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.53646645 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.532644623 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.536303315 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.535454046 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.536281007 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.539957613 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.54245814 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.533140005 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.545395894 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.536897806 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.536149893 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.537497536 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.543690316 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.537963021 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.533438019 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.542188969 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.531068201 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.540587193 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.531334703 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.541467447 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.537841138 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.537564646 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.538947322 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.530799785 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.535723587 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.542222563 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.537534949 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.538031599 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.54297524 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.538050189 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.540124248 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.531998204 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.540447513 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.530843818 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.537255534 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.546192079 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.539663198 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.538694852 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.538168873 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.546154651 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.540347636 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.539809054 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.535606721 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.542054744 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.546611185 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.542393926 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.549260904 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.542381902 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.540944747 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.536442484 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.535422583 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.542874767 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.535266801 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.549118587 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.551573117 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.554723812 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.539197003 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.546515393 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.532966209 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.54657179 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.541300146 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.549797363 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.542689433 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.542397649 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.536318246 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.545773273 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.537655433 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.54768425 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.535596704 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.545705258 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.545199561 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.545022277 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.544954872 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.53705947 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.543039869 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.54781298 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.543796336 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.545051212 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.536800335 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.546703887 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.534606082 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.537229382 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.547196019 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.543195297 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.545845405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.550895598 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.540962828 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.547915931 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.543270415 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.539118946 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.544731049 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.541496096 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.544087111 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.549060591 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.545697123 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.541181884 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.548927234 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.547001696 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.538433834 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.545459243 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.552225196 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.545001907 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.539094981 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.551427302 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.546169994 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.545232098 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.544990188 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.536816549 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.549127814 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.546707849 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.55427183 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.537808873 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.547957973 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.540290255 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.548845853 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.54215971 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.548070131 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.546183711 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.549191848 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.55362787 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.545503284 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.540662104 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.550799177 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.546676702 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.546075571 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.539479801 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.552251029 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.545747252 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.546924883 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.54551189 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.545116303 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.551765399 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.539013612 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.548798663 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.541940878 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.560428604 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.566133989 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.552937914 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.550501278 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.550445797 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.547881622 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.548217557 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.543750157 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.542238299 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.545670625 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.54427471 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.542460168 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.550796547 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.543309812 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.552269515 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.545924867 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.547565929 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.551341255 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.548221271 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.541424228 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.552181973 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.548697992 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.54837988 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.540463419 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.550025739 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.545062473 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.550191191 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.547924814 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.544180232 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.555545551 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.552586737 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.548855258 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.547875654 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.5452588 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.543099263 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.54627372 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.555041403 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.543868269 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.555372074 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.543589847 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.553060803 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.546356764 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.555532116 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.556720977 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.54432041 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.555891931 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.54943378 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.542212312 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.545585952 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.552529953 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.551838486 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.560170901 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.544005199 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.555212662 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.55110605 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.550048379 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.549802703 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.550143677 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.551403805 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.551253315 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.554623077 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.553455664 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.548323996 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.553520756 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.558839506 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.55236013 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.552884592 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.543271986 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.555284891 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.559164208 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.547355056 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.553935656 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.548968639 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.555449987 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.551429493 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.551265783 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.553255651 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.551766623 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.556133854 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.556690616 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.557107925 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.55248707 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.556265566 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.561826301 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.556343416 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.563804678 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.549784586 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.558489193 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.554801018 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.547595534 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.548801277 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.552140968 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.557535313 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.546834286 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.558746976 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.554489668 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.550055999 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.556191146 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.562105654 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.547023309 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.556154296 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.564884829 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.547600098 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.558231655 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.554555574 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.547368767 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.558467814 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.554227804 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.546526062 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.550727202 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.555176543 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.560959988 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.548806976 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.559522837 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.549380527 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.559022385 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.554394548 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.555192651 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.556033292 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.556332209 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.548614758 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.55803933 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.556374421 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.563724064 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.551001802 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.557102994 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.552663547 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.560181469 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.563761187 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.551839799 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.562607675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.558437244 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.550188485 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.555027186 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.563218545 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.55193156 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.559607571 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.549051005 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.555107743 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.553501914 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.556600397 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.559850497 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.560619985 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.550727034 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.552413394 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.559477301 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.556882331 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.557741742 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.553116252 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.565812846 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.550417724 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.550086992 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.558951549 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.553712947 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.563060859 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.551235165 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.557806515 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.555157483 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.562192559 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.559637221 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.557466128 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.551717865 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.555405147 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.565037937 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.561841404 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.559315177 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.557060554 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.562548088 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.551911295 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.557237182 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.559103782 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.556710274 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.555347898 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.563267191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.555767149 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.555322256 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.556534783 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.561471728 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.560586356 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.560648099 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.554165866 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.56624832 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.566750901 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.56829449 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.553081001 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.557692092 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.557476643 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.562533518 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.560664248 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.553411823 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.56708223 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.565977303 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.565107447 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.56041096 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.561483173 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.553966656 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.56469434 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.561319679 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.558533207 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.569622044 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.558688414 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.569272083 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.562239076 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.562121714 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.553554212 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.556548921 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.559485779 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.559614405 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.562976468 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.559829287 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.564087957 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.561638314 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.569090692 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.563639707 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.562833887 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.563184269 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.555499244 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.565768378 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.55746937 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.56412596 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.562463832 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.558583376 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.569058123 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.564934304 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.558462278 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.563162912 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.572643049 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.564603979 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.556709305 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.563512657 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.569275281 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.574218501 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.56634161 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.557428781 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.563508401 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.56902556 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.566236152 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.564134255 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.558746339 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.576268061 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.57748948 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.559280499 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.563271456 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.569731087 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.572562692 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.566411622 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.56685888 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.561649187 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.565421941 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.572002942 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.563985951 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.56761136 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.569245104 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.562386078 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.568402924 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.559519531 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.563826825 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.566613568 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.575747126 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.56526296 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.561834196 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.57706778 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.577064901 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.566755429 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.581031535 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.571966188 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.567805133 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.572962187 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.559610456 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.569885494 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.563321627 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.575149776 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.568867221 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.570396622 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.568049115 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.55966907 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.569899703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.571573315 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.579633641 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.566391193 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.560160075 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.563052613 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.569844966 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.568088107 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.568150341 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.568470511 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.568444198 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.567692001 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.562000428 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.584456898 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.585155983 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.575090504 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.568841988 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.568480832 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.569374803 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.572263387 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.569180354 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.576138674 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.569718604 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.568285781 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.566552043 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.5796224 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.569951763 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.564326362 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.565995853 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.5650697 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.573824821 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.579717747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.589026989 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.571492913 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.571160192 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.572309475 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.569892085 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.566656101 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.574668572 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.571443473 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.565986142 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.56715467 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.574065264 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.572201199 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.570772576 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.564997586 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.577575512 seconds)
  done (took 924.746340163 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.571134998 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.570149721 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.570566275 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.571247846 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.570953669 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.570612159 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.57039901 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.570304633 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.571695478 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.570634843 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.571294336 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.57160521 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.571969383 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.572193673 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.573186151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.572209601 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.572757505 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.572088776 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.572961642 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.57338889 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.573324 seconds)
  done (took 34.447997758 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.571867188 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.572034129 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.57383158 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.573250116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.572241668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.572423039 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.573121154 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.57371789 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.572054753 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.571890568 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.573875776 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.574112615 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.572975627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.572699053 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.573169264 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.573615652 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.573573588 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.573836993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.57359032 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.574354267 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.573819652 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.574877563 seconds)
  done (took 36.055869103 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.573946917 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.573470442 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.568537856 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.578033165 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.574045216 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.574334402 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.574607408 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.573740514 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.573930386 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.567723926 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.569531418 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.569086656 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.57237781 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.581227621 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.570624443 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.581387659 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.574565665 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.574430588 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.57439329 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.574475757 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.578298177 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.585790436 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.575358376 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.56670267 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.578657784 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.576468315 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.575517625 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.575885875 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.567867715 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.579691791 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.577466933 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.569179798 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.577478282 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.576622215 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.570914026 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.579349463 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.576332889 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.577607127 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.57746896 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.575707854 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.587587442 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.578226863 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.583380182 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.58742686 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.577641039 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.571667595 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.585300778 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.577179334 seconds)
  done (took 77.087692723 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.578325969 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.577717793 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.578764026 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.576857513 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.578064877 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.57807789 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.577617784 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.579069362 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.578531331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.578572902 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.57911356 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.580016446 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.578340067 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.579114013 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.579040906 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.578200731 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.578661485 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.579844319 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.579383586 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.579594621 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.580077938 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.579140939 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.579361188 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.57981895 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.581045 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.579338993 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.579545379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.581514299 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.582072457 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.581358533 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.580443804 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.5803009 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.579318864 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.581353443 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.579345857 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.580264341 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.579588784 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.581874683 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.58021716 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.580898789 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.580328147 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.580762435 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.58027508 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.581400458 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.581581995 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.58065033 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.581449272 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.581237306 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.581170151 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.581726133 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.581772526 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.582111336 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.581870899 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.58121358 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.583527359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.583436131 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.582856941 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.580970297 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.583099324 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.58288151 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.582794818 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.582949339 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.582488135 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.583734217 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.582898001 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.582721688 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.583036493 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.583683225 seconds)
  done (took 108.929452222 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.582166266 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.584311369 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.58344997 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.584421962 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.583438849 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.58266482 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.585643481 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.583480342 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.584328358 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.584559419 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.583276526 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.58342781 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.583727146 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.58355584 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.58486503 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.583813964 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.584124104 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.584569846 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.585150133 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.583624271 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.586042692 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.584862955 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.584567903 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.585592528 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.586629847 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.585115008 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.585265081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.584713323 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.586410331 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.58625388 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.585152881 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.586887638 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.585569363 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.586701443 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.585811689 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.58647056 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.585356588 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.586173113 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.587067758 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.586021237 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.585750177 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.587348877 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.586954117 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.586837928 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.586673968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.586204354 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.586075225 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.586471013 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.5860506 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.586724032 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.585839075 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.588851301 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.587573284 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.587769427 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.586576577 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.587164255 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.587732317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.587774373 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.587687911 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.588132385 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.588122337 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.587415624 seconds)
  done (took 99.766452633 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.586312006 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.588961539 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.588973965 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.588142984 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.587248618 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.587692067 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.588182311 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.587447746 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.588675574 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.5874654 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.588390068 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.588499425 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.588293252 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.587670838 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.587592923 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.588706037 seconds)
  done (took 26.866153846 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.589959656 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.589878812 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.588887858 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.589405575 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.588928485 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.58960571 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.588712473 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.58924719 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.58959832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.589988151 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.589728826 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.589124864 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.589512999 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.588827388 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.588773091 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.589490121 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.589813161 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.591296557 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.590647794 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.590932375 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.591908565 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.590676411 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.590413049 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.590925887 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.590442025 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.591289909 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.590334313 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.591354232 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.59088947 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.59165816 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.590967457 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.59112406 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.592293805 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.591215052 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.591157059 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.592106296 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.59123072 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.591997597 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.59218302 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.591232338 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.591575235 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.591508991 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.593287275 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.591783361 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.591904976 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.590930989 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.593518263 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.592773649 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.592397378 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.59217268 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.593872494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.594064423 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.593408736 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.593944557 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.592950417 seconds)
  done (took 88.967343796 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.591948139 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.59188086 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.591533712 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.592746981 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.591630623 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.593538744 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.593166133 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.595608247 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.593375082 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.594336546 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.593209887 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.593407322 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.593328477 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.593375922 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.59309521 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.59497143 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.593442693 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.594262321 seconds)
  done (took 30.140544081 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.593911231 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.594438417 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.594709281 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.59440284 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.594278657 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.593649181 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.594914085 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.594193387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.59517667 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.595302579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.595141046 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.595766743 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.594906368 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.59487083 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.59530135 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.595993956 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.595233454 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.593861541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.631108661 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.597619022 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.595139149 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.59511954 seconds)
  done (took 36.588943983 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.586867942 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.587367252 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.586709617 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.601758677 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.597906906 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.587453736 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.586847862 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.587016853 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.605055412 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.610732282 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.60951065 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.594535545 seconds)
  done (took 20.606726617 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59584755 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597405914 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.596486687 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597670052 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595894626 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596823587 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59707463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596538476 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59683847 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596393922 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597626573 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597411475 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597304303 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.598362848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.598140932 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597760519 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59777956 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.597253253 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598397911 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59881502 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.598966566 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.598749081 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598759227 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.598382755 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598439421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598325547 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597550029 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599476104 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598842417 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.598180606 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600124918 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599581006 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599323242 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599833309 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599678249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599648214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599141827 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600661764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599213055 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600103407 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.600337751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600722744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600671479 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601206522 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601009203 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.600485221 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.600073655 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60102242 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600265128 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600996017 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601057696 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.600123619 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601012023 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602004305 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601308747 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601658592 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600839399 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6014488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601995336 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601243841 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601531712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602500887 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601584484 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601971605 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.602451312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.60190523 seconds)
  done (took 107.026894181 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.602222739 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.603490042 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601643172 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.602541493 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601852646 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601897119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602616857 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.60342869 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.602914996 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602726187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.602892343 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60387687 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.602757993 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603286329 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603081094 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603150222 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601909063 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60219277 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603214458 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602842599 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603688308 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603577544 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.604421076 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.602949577 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603835303 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.6039165 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.603897092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.60417103 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604693902 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604768113 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603305424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604740104 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.603514749 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.604956255 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.604301098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.604456419 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.604045527 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605084439 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603776122 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603623546 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.60309806 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604916183 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60567433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.604424799 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.605756521 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606423318 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605093178 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.606119261 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605091777 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.607129081 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605780069 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605440229 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.607306882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.604924849 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.607372532 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.607133554 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.604481909 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.608076491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.606267164 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608060166 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.607444719 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.605593765 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.607047813 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605481955 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.606142463 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605855858 seconds)
  done (took 107.364055065 seconds)
done (took 2049.822430237 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.592554439 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.592142977 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.597832463 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.63126868 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.596867891 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.307990241 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.117612688 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.598024074 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.597851276 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.597575152 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.597387102 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.593537822 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.94504703 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.599164358 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.599607452 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.593977606 seconds)
  done (took 58.633043871 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.631073705 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.606156575 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.744232641 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.603081751 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.630987062 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.835732564 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.672290425 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.605018519 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.815714026 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.605854437 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.608243324 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.630283014 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.603348835 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.607026336 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.626633145 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.836325517 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.914191697 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.610721393 seconds)
  done (took 34.6627063 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.184900241 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.627561825 seconds)
  done (took 6.287096059 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.627461791 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.602900935 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.605655687 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.601023566 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.594313459 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.594876698 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.603972875 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.596746672 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.59505737 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.762367822 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.606660164 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.617267091 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.602690594 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.605069907 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.611924086 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.653338139 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.739454783 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.611581469 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.6101313 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.6076949 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.602339844 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.785199136 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.658114768 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.613578807 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.760566744 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.597141495 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.608123683 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.615443198 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.760089046 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.613221007 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.604434956 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.604706199 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.606654275 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.598885837 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.193351186 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.599139247 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.64037522 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.61402175 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.612353407 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.764287919 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.609986354 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.610144217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.60464304 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.189949763 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.734863116 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851734723 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.597549102 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.609541132 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.605443424 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.765435069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.609361242 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.607839509 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.672105925 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.598117374 seconds)
  done (took 101.057432895 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.625217378 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.599311537 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.788686447 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.622871689 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.598536388 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.600959473 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.601813418 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.977897722 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.678229068 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.597208241 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.948030736 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.333275888 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.604936952 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.650097996 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.650320495 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.638329561 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.601041923 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.598892376 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.602483708 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.602517466 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.220498028 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.601476338 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.603389256 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.798487395 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.64487729 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.254033132 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.60539317 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.602556979 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.605701766 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.599347014 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.292542234 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.614112185 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.65855115 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.600708994 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.936671582 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.10321973 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.056495738 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.606247337 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.623049354 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.60141671 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.600604042 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251415809 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.087335452 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.60531552 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.610733594 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.255806315 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.605693427 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.601550683 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.608493478 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.879700913 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.601702319 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.602984895 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.607263261 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.60292952 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.6022171 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.671896873 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.659973313 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.255919199 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.607351772 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.602776964 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.660774975 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.604718617 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.605913139 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.602704029 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.603159023 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.086991608 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.894901176 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.607855296 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.085165172 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.293318893 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.606774064 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.373469732 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.606212415 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.62690398 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.716746441 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.603396954 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.604901498 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252815772 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.611115408 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.60401499 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.063112571 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.610868664 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.946003935 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.625979526 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.605645899 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.252105035 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.61573494 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.674209871 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.605434172 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.607561566 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.626691622 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.61139934 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.933441962 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.655402868 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.605578132 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.605289391 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.624419771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.606402938 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.60588833 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.614941841 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.376337325 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.614919565 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.60538843 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.607392265 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.605855723 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.609727162 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.606084057 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.608397974 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.903475325 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.609813898 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.616006489 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.605763489 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.606337966 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.613440503 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.807464423 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.612234051 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.020814955 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.611484442 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.610811549 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.613103516 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.606822836 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.622490513 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.607466634 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.60828874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.578400053 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.967835169 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.628368957 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.627254831 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.60913418 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.618040296 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.612354294 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.609832005 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.64880962 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.611539912 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.528985436 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.634229623 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.639125139 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.607707109 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.616336634 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.607682418 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.612537249 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.609667561 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.956248681 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934360821 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.92521668 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.609732359 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.609450868 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.516073936 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.657865336 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.799482325 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.633944282 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.610675011 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.915735867 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.914440332 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.6098367 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.610187925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.610266701 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.903064812 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.609592316 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.961052453 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.317562275 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.614737224 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.619240809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.500841539 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.390834197 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.613052151 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.612291659 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.948509152 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.631367962 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.610113111 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.610735703 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.609999569 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.611382574 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.615321113 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.614318342 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.610916496 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.611837576 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.684017414 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.812618716 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.634148558 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.618324933 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23231628 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.626783854 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.616425027 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.619621054 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.612066193 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.611459943 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.663964728 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.611622722 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.644469044 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.614325527 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.618937291 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.30645513 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.612752131 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.614509005 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.81555716 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.470304889 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.614500115 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.614541972 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.613617054 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.653938086 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.264752489 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.686295719 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.003501345 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.624049919 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.660385216 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.612530462 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.641190498 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.268095567 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.628711222 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.614030771 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.428862175 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.613317532 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.387204378 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.614406652 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.615902512 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.375304246 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.619965652 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.616004689 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.619021236 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.614953455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.93859676 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.617134466 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.631360364 seconds)
  done (took 564.147684681 seconds)
done (took 766.260956217 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.613251925 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.614214286 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.620685293 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.618577747 seconds)
  done (took 11.959811746 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.63184927 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.622717824 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.633116351 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.621318094 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.632990851 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.62101571 seconds)
  done (took 11.259403078 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.613725338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.615911775 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.617267239 seconds)
  done (took 9.340783536 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.879849618 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.620344767 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.056077029 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.621319432 seconds)
  done (took 10.672864734 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.631013877 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.631128183 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.633028784 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.632357033 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.633647249 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.634057486 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.632978874 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.633655933 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.634730929 seconds)
  done (took 16.187993672 seconds)
done (took 60.9145339 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.699483946 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.699635544 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.622979423 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.656787561 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.755302139 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.709791807 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.704766584 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.707127794 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.698607622 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.655461576 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.701691304 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.650276574 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.698736194 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.832841719 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.656067628 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.698601864 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.647995751 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.7975203 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.710700435 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.656545181 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.727507103 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.653750439 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.658799475 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.621227505 seconds)
  done (took 44.117757545 seconds)
done (took 45.611659879 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.655968072 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.720547937 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.627677017 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.627181274 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.628936278 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.634568547 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.650913251 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.628745087 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.642772989 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.641675433 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.625104319 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.639949552 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.644210377 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.640321138 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.663638267 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.628978405 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.628612715 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.637389048 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.642652754 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.645971611 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.631213257 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.630699437 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.656250574 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.628934985 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.637772134 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.637574672 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.635457983 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.622467502 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.635811472 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.64438048 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.632339534 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.635057458 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.646156572 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.640888944 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.631876286 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.638884637 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.632022041 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.723457499 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.652130818 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.640047725 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.636648204 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.646603988 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.636068109 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.635731133 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.64130582 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.656884191 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.638941318 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.646000457 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.630424847 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.637346518 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.654279023 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.642098399 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.639146919 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.636002656 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.624937727 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.65474332 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.64238487 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.653527774 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.640822261 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.633856303 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.6657727 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.653349355 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.643682824 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.642268711 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.641352392 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.648064527 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.641734251 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.649242719 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.63899503 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.634126373 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.634141287 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.640281538 seconds)
done (took 127.760305574 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.755047741 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.629644216 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.786884255 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.638808998 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.805457513 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.7525 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.6383505 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.639404775 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.639942636 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.433417338 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.640811258 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.640316149 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.63086905 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.640313611 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.751273955 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.642328811 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.639048228 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.331363786 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.641532955 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.772177025 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.63205543 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.640372837 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.64161998 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.430186186 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.629798738 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.627391229 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.773844956 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.642152673 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.329078294 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.625712933 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.626650471 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.329486916 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.773495933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.660973994 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.650565911 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.650594567 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.802218843 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.643177952 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.759058091 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.757294044 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.788364223 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.682081259 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.626979334 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.634865959 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.645123737 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.64475992 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.643429761 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.671870422 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.632243086 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.642808775 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.334673497 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.653388482 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.651980021 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.642704864 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.644034044 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.664340988 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.644852088 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.645178549 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.775763589 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.643504946 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.759585711 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.432795419 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.437519567 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.645786087 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.631927769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.644705789 seconds)
  done (took 128.64374683 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.706831418 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.712299001 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.762330465 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.636964294 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.685898662 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.763962271 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.636662475 seconds)
  done (took 13.409783901 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.643172612 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.646610887 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.68455407 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.684888021 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.645181747 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.810796249 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.64379116 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.649334675 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.64557968 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.688726061 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.645811044 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.645898492 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.653704938 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.636563379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.684458 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.647515413 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.757573295 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.637545463 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.646997981 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.791138008 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.646061498 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.657064946 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.687179218 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.650660359 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.647298704 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.646537778 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.395097302 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.647313411 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.647322382 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.647828757 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.647191741 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.706848169 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.647516939 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.638810842 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.647061 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.752948142 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.648160453 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.647475823 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.647943454 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.639959588 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.646281576 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.648060658 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.648067223 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.647005851 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.649072099 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.663568541 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.648030618 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.64888286 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.649199392 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.649364837 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.688838728 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.648627311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.647582379 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.649083838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.694840644 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.656425242 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.649698055 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.648076136 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.648349082 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.647849741 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.793527646 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.68832471 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.649052496 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.68716245 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.648480391 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.64901121 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.649501433 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.649271895 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.731082344 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.649998422 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.687883113 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.64942767 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.820651501 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.666567267 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.650881516 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.645742143 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.645111523 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.650990949 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.636893552 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.647930804 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.650731242 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.643607765 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.648851694 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.649940689 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.648986302 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.79970921 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.749728353 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.650655352 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.658346725 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.649718651 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.650065157 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.692951166 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.651957231 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.651090478 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.692588508 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.76105471 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.693370883 seconds)
  done (took 168.013071984 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.654359661 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.655577958 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.646986365 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.670158068 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.644612377 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.644271405 seconds)
  done (took 11.427760767 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.645962486 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.65600572 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.666947173 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.650500388 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.654475547 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.653034437 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.653367968 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.645218061 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.656713987 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.654119592 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.653958161 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.654540625 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.653954586 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.654219628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.654533785 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.653842143 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.655560812 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.653598748 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.654619611 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.653877758 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.642391107 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.654700506 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.654052549 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.646801607 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.658756664 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.654871401 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.671507286 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.65410709 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.654479724 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.653937823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.655000504 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.65582723 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.648850244 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.65287342 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.659532363 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.649201457 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.659502881 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.655483972 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.655389054 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.65731114 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.658344153 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.65626682 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.656888277 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.65675499 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.649367429 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.653312991 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.661032223 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.670316754 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.657385523 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.657257759 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.656116082 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.655930608 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.655818969 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.657737657 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.652008265 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.651417275 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.66146559 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.657006589 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.65860378 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.651844022 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.659296459 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.65760012 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.652802344 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.660770065 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.656852345 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.659611521 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.650680815 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.662518391 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.657379749 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.657367743 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.65884997 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.656882015 seconds)
  done (took 121.714274345 seconds)
done (took 444.70891745 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.033802425 seconds)
  done (took 4.550670542 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.937729098 seconds)
  done (took 4.456052895 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.593103845 seconds)
  done (took 27.118679965 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.733067651 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.647106845 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.673093859 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.647644834 seconds)
  done (took 12.218107489 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.329283956 seconds)
  done (took 4.845651279 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.656173248 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.651397768 seconds)
  done (took 6.827198431 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.095661306 seconds)
  done (took 4.612655285 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.424622147 seconds)
  done (took 4.951239887 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.673304455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.665153371 seconds)
  done (took 6.861501611 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.628376177 seconds)
  done (took 4.145613067 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.874056302 seconds)
  done (took 17.394006905 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.672627411 seconds)
  done (took 4.194131896 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.692118518 seconds)
  done (took 4.210706083 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.964413437 seconds)
  done (took 7.482318267 seconds)
done (took 115.385968418 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.644180483 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.647091366 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.645457157 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.645341671 seconds)
  done (took 12.099946738 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.723997982 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.722692763 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.732911867 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.719049857 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.718118823 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.727615377 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.686082976 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.685989011 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.71568303 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.713744748 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.728496161 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.718238404 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.727367704 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.685462343 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.713023231 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.729813467 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.717100914 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.733621123 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.689121827 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.718707928 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.660792207 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.721464931 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.713458136 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.660161402 seconds)
  done (took 42.582470094 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.171151456 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.723873683 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.806918651 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.703544234 seconds)
  done (took 8.924679683 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.766153184 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.767457733 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.784024097 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.822990605 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.848677486 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.781267138 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.688439585 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.684084697 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.670953127 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.767065062 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.839404663 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.76701633 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.982623882 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.661844061 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.981394119 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.663587598 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.662823143 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.767563932 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.816637848 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.845988844 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.662576097 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.765658385 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.772207694 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.767692987 seconds)
  done (took 44.058516971 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.671681705 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.680329188 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.666017266 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.679407405 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.664280813 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.666486456 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.667639833 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.672393731 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.663873896 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.665073672 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.665016574 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.678175304 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.666900793 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.666134924 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.670017402 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.66719221 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.66755068 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.673700666 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.674553555 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.66734235 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.666596126 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.672958591 seconds)
  done (took 38.255367396 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.651199629 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.649878965 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.002770941 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.904834143 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.652063272 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.65474885 seconds)
  done (took 16.039337812 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.745960605 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.903837264 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.657669953 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.109808356 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.215355708 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.662956139 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.660334815 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.949602456 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.34097436 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.385179429 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.715209956 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.740800869 seconds)
  done (took 24.613276257 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743438836 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.661702714 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.685560706 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.753241836 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663796413 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.662966466 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.752628414 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237034381 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.668248229 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937669306 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673769635 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749107661 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912617684 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682682385 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.668579008 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.638918146 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892464916 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.312599825 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666987839 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67116146 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695914303 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.661679765 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683935417 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94059063 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666194704 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663354851 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.926414079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.662006506 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013631318 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988310638 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989088639 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666136334 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939758827 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171142218 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771678274 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938877905 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665807856 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.665022124 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.650821442 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.70448449 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679443904 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.667613315 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987582052 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669370371 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664053671 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677218411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245983222 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.673387393 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.66579871 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.665236892 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990217864 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747706968 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.670634217 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.664848101 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686535876 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667515573 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.670833369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785402615 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303043471 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681450587 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678296826 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.67013426 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.668043567 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667725992 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437567436 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.674303791 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.671979431 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671902057 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666449099 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.685062029 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687107668 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665888875 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.686207206 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665279299 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61885925 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.67182978 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670432146 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372351291 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683399106 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.671402275 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893536513 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665234074 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666262268 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.668337399 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.666739484 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.629321892 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680611504 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.642455232 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703627012 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.240342149 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.9421052 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68786295 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697598822 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891329448 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.643025773 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66934519 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.677010072 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673177401 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689544815 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246059483 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667841469 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.674984157 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918571897 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.880630268 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671240247 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.66153481 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253719492 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675443567 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.696792283 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.675413823 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949688212 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.417419608 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00983789 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674670913 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705776429 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.670690997 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.670862205 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712478482 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.678810944 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.67305751 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997566338 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.647624168 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674748759 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745414778 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671714024 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671113398 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683812119 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672021587 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.671112586 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.932657516 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.682673202 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011116564 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.677657605 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672582135 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.678491091 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68385791 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.672890566 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894437761 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67121406 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947846072 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673399761 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672831654 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671164962 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.891390845 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.686218201 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.679873255 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014366009 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684700184 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.68372228 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003677575 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710016203 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785717103 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706550628 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.682721132 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925958791 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.679557416 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.678847244 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.689810472 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.674660245 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680347566 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.682283406 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699012933 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421136036 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660210072 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.678477122 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.674165815 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.690417877 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748881051 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680544816 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951358981 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.6855412 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67593 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.681394895 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.679457342 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898516966 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002062329 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.695652645 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846720641 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.25084243 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422508104 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689738089 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.673604259 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.674385723 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.673527254 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676259557 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674300496 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.67575607 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952546423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009757448 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.672602557 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431361055 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678601367 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674836757 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.683928214 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001848522 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.685228016 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678244596 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.680782704 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68437757 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.694893281 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.009197134 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900428819 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.692997295 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.676925397 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.195378439 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685056453 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.6765918 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.676949275 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702824881 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.695101497 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333777169 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019094629 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695097387 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012250643 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.703463662 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.696436501 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.676910224 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697635612 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697283571 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.67889617 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685798644 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.956114647 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.701949812 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682710837 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31670943 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601672849 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.372555617 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68111524 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.695328706 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.679039806 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258850514 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678798743 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679626527 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973641309 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255799219 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678500228 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256871886 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.681707694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.650693007 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016387666 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90959804 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679538099 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.699627696 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022809425 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899944319 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70706214 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.679329236 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702893188 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.655729996 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339542484 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.680011702 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863964771 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256358034 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679575242 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.684697748 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.671472122 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.697038664 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1722635 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.680259216 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68058668 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.684424446 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.704859118 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347410133 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.685967737 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681057821 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453934558 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683846667 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.264830701 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67976785 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.960569603 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019201921 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.006475031 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.700975161 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.685937567 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.931067592 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019203626 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688192442 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.683881539 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376605925 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.541434048 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.691446001 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684189288 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.684851275 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721692299 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048132442 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.698418221 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.686104185 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691010318 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.683091085 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682671302 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.683901299 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.690001354 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67039778 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.333594939 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.686481542 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689121559 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.691901676 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687193844 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934477534 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.700039653 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.437385845 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913902624 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.678857738 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716982769 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.690264294 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683888011 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.665641143 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.684950738 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.684658221 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70560988 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907119184 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.685925164 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.664040029 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.770773275 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89921964 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.684565196 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.70509387 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980566751 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.687845261 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.692727786 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609835449 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716941948 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.687391757 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692977515 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.681908399 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715788231 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760344557 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965868518 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.027146729 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.029284784 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179081807 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684743633 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.692769734 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.703127888 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76689882 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68787972 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.718266907 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.686240869 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438017778 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653827395 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44565691 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029426516 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.692949475 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698010448 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686280446 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929610988 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.686420284 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962651811 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687751921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.680672708 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710403502 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687387791 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713010214 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90501963 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963668487 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688858562 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704394058 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692821413 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.687513393 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034401204 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.905634925 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343370735 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400140111 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693902099 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.687679909 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299170788 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96586967 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687660655 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.690481391 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688572213 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.705394175 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.701849702 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.700568337 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689204017 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919180168 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029825847 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210951577 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029005263 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.728576225 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.564621858 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696407497 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.944609827 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522044348 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967879701 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454240725 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.571277705 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946415763 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.766274431 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969144031 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.693906838 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928395659 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.710277325 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.695505326 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.689004351 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691357384 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.690509226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03043677 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484980064 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951335403 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.697130139 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.708119281 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725815591 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.971460475 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.91962544 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.661535145 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917337418 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038173039 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.703174271 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.693853643 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457521885 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036095482 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697529228 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.698930031 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984835635 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.695802525 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729924653 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.558966492 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.692050337 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403696253 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.908937349 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714644108 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708669865 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.62318523 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458294034 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.702567754 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349377141 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.699906844 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696009254 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973791486 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.70294761 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.699026975 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986475517 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.700949777 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.701269654 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978510414 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.467997562 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.670520414 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.716103752 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710994375 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.70009123 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694934746 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688317411 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697549204 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.694592554 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.17919952 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.694414553 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693949657 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707420178 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.69728415 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.703700741 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.697325979 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697032169 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.70426483 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.700352259 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.721065919 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.704828885 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824727991 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350838712 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698161119 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.313623207 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.033070173 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94538116 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.696665234 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.675501702 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.703129218 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697212177 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697887115 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697413197 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.718133374 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408344644 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.701657003 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.065998799 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707593177 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.909967732 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910179238 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.699181272 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984129486 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704685753 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719650329 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.673703324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698396962 seconds)
  done (took 1138.208360561 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.716646792 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.710601635 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.776600748 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.723935428 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.751303534 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.88529772 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.780198777 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.724955517 seconds)
  done (took 23.627042309 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.68833539 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.699420072 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.693768523 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.704818343 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.70729618 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.298868614 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.70571369 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.705916116 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.717798982 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.710428998 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.71084649 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.476885114 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.707557994 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.697244099 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.699697987 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.706267663 seconds)
  done (took 38.198017766 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.979387287 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.942482899 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.435616341 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.73459762 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.717777957 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.700151837 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.154647683 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.730927877 seconds)
  done (took 30.955089991 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.705742303 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.706016072 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.707180659 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.706886924 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.708340527 seconds)
  done (took 10.092549953 seconds)
done (took 1429.172121752 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.709964369 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.709436454 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.707771605 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.708774975 seconds)
  done (took 8.395440357 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.678787365 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.679173743 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.679459834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.694327845 seconds)
  done (took 11.291636233 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.170604779 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.389728195 seconds)
  done (took 6.120007232 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.703542108 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.468002141 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.452549901 seconds)
  done (took 9.184291688 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.008172775 seconds)
  done (took 3.567627733 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.099075036 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.177192492 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.711492464 seconds)
  done (took 8.547307864 seconds)
done (took 48.666516028 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.703112755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.463457876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.851609032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.697190777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.858434577 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.850846728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.968359906 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.70780094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.712298733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.693035622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.697311116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.855113129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.949443879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.463337328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.947175025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.463076243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.85748535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.70063517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.695812538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.704346544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.961971047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.698601453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.700198836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.709239605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.855594323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.840510737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.696061176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.463749677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.695636588 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.711518787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.840518442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.695644583 seconds)
  done (took 93.271222209 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.696604941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.695526704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.697149253 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.696263565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.695584819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.697871337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.696174197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.69694825 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.710120778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.696478611 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.695933726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.695918598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.700604238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.69781741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.696079857 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.695893055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.695909475 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.710366954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.696167366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.698469991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.69921315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.713335365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.697807852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.698272824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.712607229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.69803122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.714832546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.698812392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.697651896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.697858587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.722037263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.700396753 seconds)
  done (took 87.97491661 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.716037852 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.698596311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.698986722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.697957134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.698669698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.699915474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.700310659 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.705919132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.703040053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.697734141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.699730219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.699492142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.70012193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.706580043 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.701761407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.704363951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.697567667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.699719589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.699390553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.716687387 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.698862876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.699087952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.720754454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.719555344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.713647965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.702309662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.700935461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.700218228 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.708072789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.701492899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.701211726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.700898736 seconds)
  done (took 88.074398556 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.946584839 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.717702823 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.719731507 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.709313515 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.719081453 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.716062512 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.710980139 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.949337566 seconds)
  done (took 17.755699441 seconds)
done (took 288.637198245 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.730184208 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.72101976 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.73913512 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.708584848 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.751484855 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.73993226 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.957210846 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.743868517 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.949077905 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.726579326 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.726755616 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.726518207 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.703297845 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.862386184 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.704116471 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.712674614 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.720214836 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.712929525 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.716872663 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.980123808 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.74361415 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.711183962 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.712589572 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.72936029 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.688573888 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.789621855 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.792561952 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.886314587 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.845356244 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.790405563 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.722955042 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.713819354 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.728098187 seconds)
  done (took 77.755637897 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.711709493 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.720115516 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.721039752 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.720599695 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.720908645 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.722030769 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.711414756 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.721003879 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.720473386 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.720334765 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.721674051 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.721672288 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.722488213 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.720964222 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.721104568 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.702529345 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.712030826 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.720853203 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.711598612 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.701170532 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.72068928 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.72183304 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.723172833 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.722125767 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.721967019 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.721980067 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.721274268 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.721972846 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.720719978 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.722271395 seconds)
  done (took 53.135791974 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.721674395 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.706940875 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.707729891 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.743266002 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.714719492 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.718554614 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.090581763 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.725593431 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.718272745 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.71804086 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.708619423 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.725219222 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.771319054 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.707128633 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.720055466 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.724131701 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.72388022 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.715746698 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.708344205 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.729676069 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.108704438 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.730914338 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.100626607 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.733981925 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.719202925 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.715853885 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.722719803 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.707687757 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.718914582 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.70992877 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.715811547 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.099003764 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.717117026 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.711584551 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.718527233 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.729903389 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.726907664 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.70926676 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.719589959 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.716404166 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.101187938 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.724857687 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.709463203 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.716617404 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.720066757 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.726241748 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.710564355 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.722537846 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.047324553 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.73131849 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.725407635 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.725093929 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.727552799 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.720608649 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.047834791 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.726981759 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.71784418 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.710938071 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.745345226 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.104926046 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.735237999 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.72072475 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.71103306 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.720872767 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.712549489 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.721498262 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.733998017 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.720507507 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.71163653 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.72290359 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.712056929 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.721073147 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.727789209 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.713579398 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.714268505 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.713236453 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.722832023 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.71347937 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.713753777 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.123154396 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.728495976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.712818944 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.112578086 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.730820822 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.731287833 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.73055622 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.728425178 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.794259971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.103397884 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.705710772 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.738634099 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.73221394 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.110638712 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.732779759 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.721537411 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.716058345 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.753575662 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.730667321 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.712608547 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.713491829 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.723701213 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.734499394 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.715175892 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.726742915 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.113333031 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.735482279 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.718160353 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.725835362 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.795804936 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.733159104 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.734519183 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.727279674 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.102694319 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.730448399 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.732878017 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.716161744 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.730433811 seconds)
  done (took 246.494365813 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.716713992 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.718968841 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.718413909 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.716077379 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.716028053 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.726164284 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.718556028 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.718331815 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.725358632 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.716429587 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.719782273 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.726954095 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.723405492 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.717379488 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.719311052 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.717799825 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.718144294 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.726056274 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.721700635 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.7179975 seconds)
  done (took 51.979918372 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.734024702 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.48307626 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.439996303 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.737093701 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.735070804 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.725935907 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.796816724 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.734212329 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.733507963 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.12757072 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.960945204 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.740504705 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.734206787 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.733514868 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.434750219 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.742155085 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.111778072 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.443821884 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.736118988 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.438593214 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.734272997 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.73512433 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.725952092 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.51706684 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.125045783 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.112988539 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.806140406 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.486624368 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.739816998 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.735643017 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.484976449 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.741723438 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.728484212 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.478768368 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.73994719 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.750216727 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.736691142 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.801569738 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.80204221 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.137394444 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.493121707 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.129196686 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.753211116 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.919720552 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.737684375 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.719426232 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.494076892 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.745103356 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.71394752 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.737251968 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.742314225 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.455671221 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.735406823 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.455299991 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.743193274 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.737514562 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.488036354 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.46070837 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.449819104 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.964214037 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.733257883 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.11532398 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.742673125 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.502957237 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.743755144 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.737544532 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.739076837 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.964267826 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.494928971 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.123403415 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.142213327 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.144041943 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.745228481 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.817553764 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.743369489 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.140903955 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.820363306 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.18829464 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.139390363 seconds)
  done (took 158.481359969 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.058223509 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.846983864 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.225526195 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.414601677 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.348412095 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.89118858 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.870757502 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.01598716 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.735622333 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.847697192 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.580024528 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.848038927 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.54359324 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.815454269 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.856679525 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.870677571 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.239202651 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.73047587 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.49528574 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.559115987 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.757141134 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.855158255 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.547897075 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.152553065 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.726863311 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.581177138 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.727330752 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.361884251 seconds)
  done (took 65.09164293 seconds)
done (took 654.504558322 seconds)
SAVING RESULT...
DONE!
