cset: moving following pidspec: 8431
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.413490299 seconds)
loading group "string"... done (took 0.581970739 seconds)
loading group "linalg"... done (took 7.322206879 seconds)
loading group "parallel"... done (took 0.161113053 seconds)
loading group "find"... done (took 1.173182904 seconds)
loading group "tuple"... done (took 1.788479879 seconds)
loading group "dates"... done (took 1.260299225 seconds)
loading group "micro"... done (took 0.223822362 seconds)
loading group "io"... done (took 1.016551947 seconds)
loading group "scalar"... done (took 38.797123797 seconds)
loading group "sparse"... done (took 11.855403087 seconds)
loading group "broadcast"... done (took 0.936768806 seconds)
loading group "union"... done (took 12.645565075 seconds)
loading group "simd"... done (took 4.563581078 seconds)
loading group "random"... done (took 9.077062821 seconds)
loading group "problem"... done (took 1.83530512 seconds)
loading group "array"... done (took 20.850474297 seconds)
loading group "misc"... done (took 1.684480422 seconds)
loading group "sort"... done (took 3.342947364 seconds)
loading group "collection"... done (took 17.345522867 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527131587 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124392946 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117500154 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118587397 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14717146 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112171161 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123145258 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085272012 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.799260305 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1475367 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117723192 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428606047 seconds)
done (took 5.162276615 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175560047 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0850018 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084080376 seconds)
  done (took 1.298266827 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06439861 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124916381 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067487634 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066747892 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066939191 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066360119 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065430728 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065553573 seconds)
  done (took 1.654126585 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074587103 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070797439 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066745625 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067951419 seconds)
  done (took 1.413332541 seconds)
done (took 5.750683268 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.788181495 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205472165 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187090661 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411268149 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130282854 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158357196 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640331282 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310764314 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188166689 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079767606 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107915043 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.326714127 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110619325 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632569592 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076171845 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090071614 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136439257 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428336336 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066680569 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081409624 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088452531 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127022233 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084700117 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074295715 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144332059 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067038777 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135809086 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079914224 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065836918 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.211881026 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172255814 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656145734 seconds)
  done (took 10.238314686 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099153466 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10015235 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06965637 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122378299 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096072376 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069410996 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070174024 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066648168 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086231321 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126581486 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088814118 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101268244 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065058716 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068693446 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083902744 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203669777 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082517862 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082515352 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071247333 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077590529 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107819827 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078375408 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077362772 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077001746 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128581302 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179431341 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095605283 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096626241 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066061744 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078676097 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114729869 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124632628 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065354567 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065447735 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124098904 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094281122 seconds)
  done (took 4.573285509 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.00094696 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144268531 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090254119 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134259484 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064063365 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108490003 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065429112 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080435793 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209787381 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.374526481 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.5889368 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110763313 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103141388 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066747847 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067758144 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066580583 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.480452607 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095268516 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106582696 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082091787 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070362248 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067952678 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37892034 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067732179 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063815083 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067620897 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057027932 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125255291 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067463212 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.948449488 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126675496 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067096328 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100591466 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160856745 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089152855 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141013717 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066844105 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.193404259 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153106108 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070555135 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066007122 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083785763 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103082616 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112465399 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06527802 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065562039 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161483216 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06719005 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080245395 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.641061635 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154342741 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095142305 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063158179 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.253418475 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08793122 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069627965 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064965765 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173645726 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131142494 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066538459 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065593127 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067685176 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069186432 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369217281 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066234172 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.955617945 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069668045 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076220026 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091092069 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068854242 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068853752 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072915607 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072322893 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087203279 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065769686 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074742871 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065697011 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065296877 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066305102 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083196129 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.376204168 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06625026 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067906906 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064531924 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088581066 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096326926 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067480171 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064857498 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099359655 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067985872 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065982018 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106058493 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066136799 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083007894 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064038881 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068400062 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112512763 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065661352 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192567208 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065845255 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096258775 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065009589 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063401338 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068613237 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097913712 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079919405 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067465995 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.423170381 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064675862 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063879444 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068119259 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064718234 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066918841 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065869907 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078223751 seconds)
  done (took 21.052816645 seconds)
done (took 37.995973224 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236611223 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074924414 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076095203 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078000759 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073462833 seconds)
  done (took 1.768982794 seconds)
done (took 2.977500404 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123163448 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100029627 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064169586 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096712441 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064226724 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101610202 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100466132 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081521688 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100384168 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063974922 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096816116 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064222311 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063721703 seconds)
  done (took 2.349912228 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084709581 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083977133 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070255089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083650926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063022352 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082997218 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08124813 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088571287 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083085054 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074982464 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064345517 seconds)
  done (took 2.065062499 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084499061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084625288 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069324703 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082165332 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063285337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082143429 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081371058 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085541547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081581844 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073615523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063674632 seconds)
  done (took 2.050284742 seconds)
done (took 7.661692745 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079584107 seconds)
  done (took 1.268779791 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590520154 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.085389296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080871102 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111073235 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189632646 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118489293 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271658761 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08660455 seconds)
  done (took 8.908242811 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090193913 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068293297 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068792553 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082376049 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070458704 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071047294 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071512729 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072181577 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06915274 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070824571 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070757769 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067729382 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068516602 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068079912 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069704863 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071198274 seconds)
  done (took 2.41405758 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092370121 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091591823 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074095403 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074058231 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0719312 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071499955 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073946115 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072907975 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070722424 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072081407 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074397602 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072742212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071189246 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064276367 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073365041 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075160387 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070684627 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07412055 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073736586 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074845232 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074637047 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064286853 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070707491 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073222677 seconds)
  done (took 3.072742591 seconds)
done (took 16.86227879 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115886818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071083914 seconds)
  done (took 1.380264091 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084290568 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083999194 seconds)
  done (took 1.370757525 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083206621 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064579912 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090515857 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07772873 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06587895 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064978579 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087497538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065298674 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065631918 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065417954 seconds)
  done (took 1.933980537 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070477413 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078011233 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070663191 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080919148 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073635873 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063844932 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071510923 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067508694 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076724943 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062340985 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07137501 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083008589 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070659474 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08377875 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071362182 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067997802 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070793964 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066621565 seconds)
  done (took 2.506892961 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068253123 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068221668 seconds)
  done (took 1.343744779 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068777015 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064786336 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066122741 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066027443 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063502443 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06189704 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063225417 seconds)
  done (took 1.65832383 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386499221 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113277884 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315235042 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071496114 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081588993 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259019772 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065668041 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070149624 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070585083 seconds)
  done (took 2.681298218 seconds)
done (took 14.082596285 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083340271 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087273374 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096611553 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.374526949 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091119049 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065574421 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113486921 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189277065 seconds)
done (took 2.32197205 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215621158 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639913799 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402967448 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204976212 seconds)
  done (took 2.45317911 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341491762 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088221141 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058296273 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067368617 seconds)
  done (took 1.771068468 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0669404 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06903474 seconds)
  done (took 1.348073088 seconds)
done (took 7.007316029 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068840705 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066643928 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083676029 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063297654 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065890206 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063449419 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063528867 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065983888 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065904188 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065936816 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068110126 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065552856 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063890075 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063502709 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066402746 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06438162 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063537191 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065440912 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063819175 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062882629 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066246465 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063690009 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062853966 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065887993 seconds)
  done (took 2.829066455 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085514066 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065855974 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071312384 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071423926 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069116986 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070982703 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07079932 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065756811 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071185081 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068263295 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069141285 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06960502 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068016239 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069611602 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068193872 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069188913 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071110593 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066027136 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068100536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068930718 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070690089 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065435849 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069549163 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071453065 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068974585 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070179901 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06801393 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06590383 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070734525 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06921198 seconds)
  done (took 3.312038896 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070353851 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063261452 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064067709 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070562584 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063370652 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06433149 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062954434 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063975846 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064223996 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062996854 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064676536 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063144653 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063309891 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064987667 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063911101 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067248451 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078901217 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064073618 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064100056 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063923414 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06655432 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063149977 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063636683 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06305019 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063356196 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063095633 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063605603 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063242237 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064183178 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063172465 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066459541 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067164773 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062947851 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070312657 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067228812 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062965076 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067000253 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062884556 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063781407 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063171354 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062587873 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063003638 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062985248 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070719681 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063181461 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064508727 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063149581 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064099751 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063840072 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065789086 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06310336 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062915014 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.178542858 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064443412 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066920634 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062815014 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063728987 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063031971 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063498114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06285754 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062987274 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06251174 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065583162 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063575238 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077630753 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070227756 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062831868 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064507583 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064428107 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065672636 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06451629 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076989392 seconds)
  done (took 6.02152075 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092152625 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086935901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064985641 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065307457 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0615131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063927036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069455585 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063727086 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064962243 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081272009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063647407 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064306148 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064824508 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067164332 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06419603 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06524322 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07198142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061099522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063277752 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066806957 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064622841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069009576 seconds)
  done (took 2.735873412 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154616741 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070202687 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105005521 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075219061 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06975585 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075630659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069382388 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069809816 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069918473 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066721242 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06698567 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070133639 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070396055 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067157025 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067348554 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067208422 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069511022 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066764388 seconds)
  done (took 2.598361699 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076346062 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065225276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086322424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065760357 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066061095 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068417592 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070472088 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073645576 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068118835 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06559323 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07366968 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068081073 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068215127 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065724657 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068189873 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065475334 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067677383 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065476898 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073532368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069429262 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069130333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073437009 seconds)
  done (took 2.762741551 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079024662 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067967691 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080866541 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068250975 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061584076 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064253942 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069995457 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065565153 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070095869 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067281481 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065036621 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063813055 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068434159 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065470342 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067785845 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064948818 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067329173 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06521726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067221139 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061342616 seconds)
  done (took 2.581001169 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086622502 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066942237 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067844279 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074983375 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067924148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067001998 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0747585 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067317622 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066828616 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088016698 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066573035 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067118261 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074631734 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071802877 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066848878 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074323555 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074673307 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07456266 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066905803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067361598 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08698799 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066266144 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07403494 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066401641 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066648958 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066761982 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066977963 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071330707 seconds)
  done (took 3.230626416 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065983528 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065027725 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063752733 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062758358 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062781618 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063206737 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063325133 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06318892 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065954998 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062931251 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065826997 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065805694 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06547911 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065669525 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0660528 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066347622 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066493572 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062682816 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062962246 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063472121 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065849639 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066353608 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06565361 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063041882 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063005699 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065239517 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06282386 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062939838 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066102708 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063270734 seconds)
  done (took 3.169375611 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075124822 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072786376 seconds)
  done (took 1.385005708 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062581164 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079755734 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062689635 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070346462 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069215868 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065861097 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072768847 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069139133 seconds)
  done (took 1.783384922 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081439659 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077276977 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067659538 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07923204 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07618631 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083067253 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134679318 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066449869 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072949674 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064064894 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079534422 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065815146 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072632506 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066701118 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071454165 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072138403 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063403933 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07115103 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067960226 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06423664 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067205143 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074863765 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068311154 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061495989 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067805437 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08787121 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076806422 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065336273 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068777433 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0733094 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071286201 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059452175 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065284144 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066152725 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063518079 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075375305 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080686891 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068250129 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073847704 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066868548 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075538252 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060748275 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070481307 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07207923 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075511622 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066364602 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066532619 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060825243 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063460068 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067729033 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061251313 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068264361 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060160323 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072168169 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068863344 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07648225 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064377292 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067275748 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068807219 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069171793 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072003471 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067366007 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068294359 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065133717 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075552495 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070146709 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074003353 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06106867 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059261232 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063566574 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074569896 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088415331 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071674992 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065777755 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066370201 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063068041 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069625894 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066392485 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071542505 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071911581 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065702756 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070721744 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073326913 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066039452 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068471477 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07359536 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063849465 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068218277 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063930916 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082219248 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064550833 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063503786 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063694838 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0761024 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068858241 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065292164 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063668598 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072610888 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059707031 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065715729 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066392691 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06650676 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075864178 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06980861 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069280805 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072682629 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071944454 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064674147 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066990067 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061454284 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065305582 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063443313 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072096634 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058524156 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067265874 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065096968 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064853133 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073289846 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062790359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064337596 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071980639 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069847203 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.187359472 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063399646 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069330193 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066127352 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069629352 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074189314 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064831362 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061624125 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061730699 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070314753 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066360524 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0692446 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070071365 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069378955 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060034498 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063699827 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070759457 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074657896 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066434572 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066857346 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07277488 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067763833 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065783478 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07392913 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068617056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065738454 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072182489 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067430476 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061620022 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06947095 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06866223 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06477099 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069861966 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068813986 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067947468 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066012384 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06495015 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073106271 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066534423 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065200684 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066539507 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064753766 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077142888 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068005231 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061926815 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064032272 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07459495 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064372555 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065457188 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06548998 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06908642 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066298807 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064483225 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065655327 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068057896 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075396271 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069733375 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066389623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071707452 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077529539 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065911459 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068548377 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06534608 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067290212 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066491144 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074546986 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071055525 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070877016 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069505054 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062036928 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071286853 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072774785 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064909817 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063147954 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06519275 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069130279 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071036743 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069489425 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066277732 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064120163 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066347933 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068786038 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068361767 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065421891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06587528 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07198016 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063649203 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072135084 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066539132 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076011288 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069141011 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060960505 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068792238 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063984012 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072196589 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06127981 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063975485 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065053304 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067143872 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064595044 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06808457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060373337 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073062201 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073078761 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066342036 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064884881 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065246924 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073016473 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066546839 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06877703 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067927189 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070774546 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074765493 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06415261 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067726914 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074226783 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064131874 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059005099 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069525207 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062713714 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063365876 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063720816 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062373823 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067098958 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072232101 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070895661 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.185682114 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070041667 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064225142 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065588311 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061608425 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070988996 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068866487 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066740374 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073253314 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067076886 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066877353 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069206042 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065261121 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066939824 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067334987 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068935241 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066700533 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068487437 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065406947 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06997783 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064711845 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064356134 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067908145 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066668482 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066785581 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07137238 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065459528 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066371521 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068905665 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067161486 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06720124 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066477896 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066064584 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070267554 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066681787 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066787943 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068217031 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061084209 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073306694 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065564423 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075295506 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066634668 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062648644 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073214601 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068523241 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071455782 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066317926 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067001223 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06725349 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066035243 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069540087 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072660168 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064521778 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076695733 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07346996 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066909812 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068593891 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066547363 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067699361 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065509927 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067253495 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067284221 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066233294 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065835552 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071317702 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068884203 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066565501 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067972873 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066590224 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065984548 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067144227 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061098379 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065214136 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066390855 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065388943 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075639148 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066461214 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065796735 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065366151 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066756627 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064664426 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062636387 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073440015 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074222932 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066662742 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072674673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065646252 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067772418 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077077995 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060043504 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064099284 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063644415 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063711699 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073582787 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06601061 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07534016 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065896398 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064755506 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062628614 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066578066 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063988659 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060168104 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063557197 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069369067 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065099274 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065309946 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065774455 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068225908 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066224675 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075597091 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065070471 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066391821 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065555907 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062211529 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064274311 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0638893 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066893921 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065350702 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062760987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062110618 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06417186 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065646728 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066061059 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066385814 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065943534 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071191483 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06405093 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06701398 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06707624 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05934455 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.198448261 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06660653 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06597778 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065286349 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069352665 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06944413 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066516938 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074929209 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06533814 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067716745 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066421618 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063833949 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065716208 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065678574 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065609309 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065079601 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067384441 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073520886 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063541527 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069228785 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067160053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066840459 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072453888 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067222212 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069322853 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07124188 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06711482 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068329313 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075021845 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070323562 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069871002 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067325349 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067875878 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071601493 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065568486 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072817045 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066897404 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067093048 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068858115 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064497857 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065664165 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066518253 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065790535 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072710161 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067159001 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065524795 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065682387 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064514637 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067262173 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069607028 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074067126 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068702315 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069287271 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061032099 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062750788 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066920844 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063791921 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068154248 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068578952 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071888659 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068871042 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065946832 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065779512 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075636363 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071336419 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07022399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063879651 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069778336 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066886066 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068322864 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06691109 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066049832 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067146827 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069820485 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067341182 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065490318 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07233778 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068616624 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066114572 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067518327 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066556582 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066178772 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060548984 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066155495 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067718795 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070806507 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067793115 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065677 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075973751 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063636711 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066005013 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068230423 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065298068 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070440189 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061654565 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067216915 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066376534 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066272711 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06068513 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06523329 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063893463 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068460866 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064543245 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061217854 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076079739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07447965 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06895057 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064775878 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06430703 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061505396 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061032853 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065345678 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066381491 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067283382 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075617163 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06433815 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064419314 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060347744 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064978323 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068078354 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068029266 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062323681 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060224497 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064349138 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067678623 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070092834 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06335663 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064312548 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067820056 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066893068 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.194532193 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069754217 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063960635 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070356513 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079100958 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06702277 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067543996 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072947721 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074211928 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067447149 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0615101 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06664552 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069859053 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066878067 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066943738 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067369902 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081411081 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069798786 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065579359 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065654077 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068745527 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065960326 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07505684 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067672412 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06718361 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071203256 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068389408 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074525085 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06859581 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073824504 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070062943 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069654916 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064753084 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066217354 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064422337 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065430365 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067006963 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066872485 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071146874 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073552284 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065574313 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077549383 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075808672 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068945357 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062757951 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065433858 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065725566 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061973878 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066675453 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064705667 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063978684 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064258416 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06467722 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067407069 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071405553 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066994116 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067336478 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065337837 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059875967 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068821806 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068628521 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067299582 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063032522 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066912153 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067525384 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07099805 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069318642 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064583851 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068390709 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066915609 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06701469 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061102022 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071980014 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064299769 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067498493 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06499455 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065811872 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066918747 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069196577 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070064858 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066550464 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068120923 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069863809 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067778345 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062811389 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062921471 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07110108 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063570003 seconds)
  done (took 42.20303142 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100516661 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061953352 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061521861 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061138915 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072468798 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062041278 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060978191 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06213316 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06277759 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064017034 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060615042 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061226229 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0693857 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076366026 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072530911 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065791806 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060768135 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062103643 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061338257 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062095031 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06949725 seconds)
  done (took 2.721346913 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072980127 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077002031 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074820045 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08141852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070022917 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069483257 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074536646 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069448086 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078016416 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071531486 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077715756 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069974414 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071551393 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071710238 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071775394 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069931312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077478474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069928751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069986713 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07406913 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069687367 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074058137 seconds)
  done (took 2.918986656 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066744924 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06484711 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067313517 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061146815 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065445227 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061246308 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068468543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063258442 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068654502 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06449861 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064328441 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064423414 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0666607 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060505819 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065661665 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062752685 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107021871 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068001983 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064718781 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065580906 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060085685 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066875013 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060467211 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061400017 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064688945 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068140758 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065499511 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063130958 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064620669 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063561164 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064794861 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062992661 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067604242 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065312688 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063497815 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064653007 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064447133 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064636236 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060508105 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063612296 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06551805 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060474701 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065024858 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066241052 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063070746 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063598867 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066482017 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064749673 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060501284 seconds)
  done (took 4.512396528 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081203835 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107930439 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06709121 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090284165 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079166339 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072456388 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069044862 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089224426 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.0630406 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063408539 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080156862 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078069167 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064562129 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068865457 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068567674 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064771098 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065590761 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064634395 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068717316 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063789513 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068582852 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071898623 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078676388 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077585136 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068438099 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063940823 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063836403 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068835928 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076661646 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069392599 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069024091 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070476654 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079245014 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066747195 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064307339 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067044881 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080067353 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064851917 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067113871 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063095585 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067204521 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068822723 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071698194 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081299662 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064822344 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069512177 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064985825 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062199028 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077071378 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067249639 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072320475 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079094881 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069101186 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065351696 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069409472 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079730304 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064853645 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063220621 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068391172 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076385043 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062514344 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068462355 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077782424 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067183358 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07242113 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078410324 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069745519 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068706951 seconds)
  done (took 6.295845149 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074983608 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094090079 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082929077 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081923424 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074215141 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074825737 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075497352 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075201385 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075138173 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079351412 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074771684 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115475338 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070263668 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077271554 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074663496 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074856718 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074652166 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07449919 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074850048 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074770904 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0748998 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082022883 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074724729 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081805769 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079307304 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070272921 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074586536 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074560247 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08236307 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074578688 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078490805 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074670048 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083195436 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081992756 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07854117 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074058576 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064438951 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074784201 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074518873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074423688 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070120013 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082274978 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074843811 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070318168 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074690498 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074929729 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082255389 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07894699 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076971907 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078879621 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074322172 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081763727 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07409605 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074485548 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081921219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085223021 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0817147 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081850546 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07463667 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081539925 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081601479 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085131039 seconds)
  done (took 6.163027012 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082201126 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073378181 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08143078 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060812347 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063685575 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071424022 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063475222 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063730918 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073566361 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073268851 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075101439 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071332488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074283374 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076094396 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071116849 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074246984 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071432412 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071168721 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073483044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071327103 seconds)
  done (took 2.774563214 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074414036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082806062 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066336703 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071450781 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068982828 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070655448 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067920047 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068653357 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06648103 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069066575 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075260475 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075364901 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066299213 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070954055 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07559429 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071037389 seconds)
  done (took 2.473148585 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086326549 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073704977 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079340885 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066452174 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066105217 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061871936 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065404484 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060792215 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061461612 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077314574 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065498164 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075702204 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064977873 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063721981 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062788563 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070616828 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061349908 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062351631 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065475682 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077487207 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068744907 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063385393 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068463109 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06479089 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067695598 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069238049 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064173935 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065175602 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062718708 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06544474 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068117327 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068677448 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06205386 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062994471 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063755124 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062355937 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064402202 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06507478 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070516575 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064982141 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063060275 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067178198 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065231863 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065976693 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06122619 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065646878 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061204891 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067175465 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063224932 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067788319 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065136116 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067424183 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065937313 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07221072 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067821356 seconds)
  done (took 5.000744051 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07861928 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068557798 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061731206 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063543247 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068302149 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067332816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068931553 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066456474 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066729659 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06343499 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066482168 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068620145 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066486851 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068638993 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066735854 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069622992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06117756 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066189514 seconds)
  done (took 2.551284992 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073692752 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066369067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072927873 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065631464 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065442776 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067499319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061343572 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064303718 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064017829 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066014533 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0654595 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067955835 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064332624 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067815646 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065224443 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065620041 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06792695 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063772784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065183283 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06143671 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067486786 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063840944 seconds)
  done (took 2.790080052 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09668799 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084080717 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139614635 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078832881 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084010361 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07094985 seconds)
  done (took 1.890423921 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091052431 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101056678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066004349 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06938952 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075324206 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068982306 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069608049 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069355842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077139566 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075246485 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069057284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077822116 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077479392 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076512395 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074737595 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075033237 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069698891 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068912644 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0654402 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082319409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069017832 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07707914 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06922711 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068723632 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06896516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076863627 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077484454 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074956384 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068764896 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077650681 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074810766 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069033505 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077498074 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074893132 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068110996 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07728271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069195275 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082371307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074496342 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076265566 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06815267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07529418 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077976959 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07396194 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078361962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069405517 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074063118 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069129431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069031933 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084828822 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07534512 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076647527 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077860126 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077589516 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077532856 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084711979 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075180872 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076709178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074972236 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075072003 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076727638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074653414 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077020213 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07497004 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074967438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076759257 seconds)
  done (took 6.278911062 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102886551 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066844924 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069742667 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075299528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076849476 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069336241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069673909 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069492878 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069665771 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066034703 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106925622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069680473 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077363458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077227177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069802186 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069003168 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069765803 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076906145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066363273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084963772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069161617 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076681256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077049573 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076570977 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07526857 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075109586 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069732048 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069208364 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069317128 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069275551 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073943066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069664709 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077053134 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065859385 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076703166 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069352283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069164179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073713989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069254163 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074414686 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077316015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082530626 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069646687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068794439 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075239109 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069776411 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069566196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066037762 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069115241 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065721957 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075087884 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075178374 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07551906 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07669163 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069457361 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069870895 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069531608 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069547875 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069494908 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075373633 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077117799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069677009 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084877152 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069489503 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069038565 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077151026 seconds)
  done (took 6.191659026 seconds)
done (took 128.38643933 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183935604 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164704296 seconds)
  done (took 1.681277354 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06918908 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097714159 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077104527 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128148492 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066101567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099348822 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098350112 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07725421 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065456113 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065104429 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065175199 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067438733 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130643239 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065829764 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065482339 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068036953 seconds)
  done (took 2.651238243 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099058973 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161388809 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101973136 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064784086 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098555141 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071948202 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064581557 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074381479 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069844208 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06416723 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072433347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070015293 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064257344 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069505759 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070834818 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071539681 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064158853 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071883955 seconds)
  done (took 2.774849259 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098613057 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091581803 seconds)
  done (took 1.541317608 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156770337 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104880878 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144455902 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.357767893 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164579536 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147121249 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142875243 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142024527 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11610325 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138511917 seconds)
  done (took 2.960880229 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100315851 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153914244 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26648607 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116153187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071837768 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093846849 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117603088 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077594861 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079738186 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079105916 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079391005 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075787603 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099151647 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072620041 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073291373 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074991393 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102538145 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072494785 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075125897 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076074688 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099989422 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065240734 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072982157 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072822721 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076526239 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076843275 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065001506 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065199927 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076167867 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074587066 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076957864 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092896091 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076753168 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104949737 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070049128 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106084283 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075643256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073079202 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074260121 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072922802 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077327162 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077322127 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071648496 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074879199 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064820081 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075494594 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065462043 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065077026 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077029581 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066391788 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077013641 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07595915 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105081395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066071077 seconds)
  done (took 5.941993098 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105813014 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104931438 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070036294 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111922322 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102176114 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071418468 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102137723 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095107344 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103658451 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069135125 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067435232 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069594716 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081527883 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082040368 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114384978 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105693471 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073564368 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070077232 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10684008 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104803233 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067643484 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096311796 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090461511 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102689503 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067208933 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069726722 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067471921 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070037216 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076340028 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077621695 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069207051 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079885484 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084466476 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077899222 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066418463 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066990886 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067615497 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078978958 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07949395 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077839352 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076344145 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067371483 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067270915 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068615259 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069332462 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067445368 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078414241 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079272555 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077536603 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0687642 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069413156 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067331893 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069128545 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079727089 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076476571 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080267353 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078884839 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067647133 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067694625 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071681092 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079996115 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078897703 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07851801 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068585377 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078352537 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068147113 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079545691 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083029488 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067605915 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069222738 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067424298 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068483294 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068858178 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076755919 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076957992 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068678027 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068622731 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067462114 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079123898 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077422272 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067779292 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076060691 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06678438 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067343128 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069165023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06900943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076337448 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079242638 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0695158 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068062008 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068738445 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068253938 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066553521 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075948895 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079284634 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077814889 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076519546 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067357085 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076686906 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076247287 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06808625 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077056849 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066500576 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068459345 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0678008 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075693551 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074735621 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077099022 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.196144534 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067777174 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07809901 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080600931 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068703741 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079015173 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080598601 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078516703 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068663982 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080699755 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068345249 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079675607 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069914406 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078817106 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068814366 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079587486 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068684819 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068200307 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068878421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080373429 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072085248 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06783849 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070488419 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069119545 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078556303 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082343862 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069998075 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077809609 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078023876 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069620551 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078557467 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068335165 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078892947 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06962345 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069270502 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067388071 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082018799 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068871778 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067761947 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069461987 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080736396 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067838354 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079673541 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076797784 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068189349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081661152 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078901107 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077143467 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079561187 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069335524 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067804225 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067946871 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069516808 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077122692 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079233789 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069699557 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069035196 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076794012 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07931192 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066980692 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077447793 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078495655 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078017172 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067790672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069317228 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080093145 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080274619 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077436846 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077956475 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077458505 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067640467 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076844735 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07753437 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068197956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083254842 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067531723 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081829018 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078386879 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076385119 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078036013 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080338384 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079045107 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078937554 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082051345 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067390392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067336035 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07897413 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067555698 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0688426 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077069064 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069145222 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069105051 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082157959 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068097889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079451417 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067706903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078323374 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066504556 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068911699 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080602092 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066809938 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068137769 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076785932 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067469592 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075029503 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077999503 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076085224 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0659596 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067903488 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207306004 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078583937 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068209182 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06871904 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070391502 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078193154 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077925372 seconds)
  done (took 18.501577355 seconds)
done (took 37.407167106 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209898754 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155770031 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182859182 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118843584 seconds)
  done (took 2.125476089 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116585584 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102586017 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092327285 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06480764 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098873672 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064858021 seconds)
  done (took 1.928181374 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311357029 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211041085 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189020231 seconds)
  done (took 2.099956786 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202452062 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190282126 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.42521051 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266043308 seconds)
  done (took 2.585040431 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144745106 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088725159 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06700603 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084447444 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133659795 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161430134 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100324373 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12526445 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078924488 seconds)
  done (took 2.425301412 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149425974 seconds)
done (took 12.71205265 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135410695 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.245294655 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.1984949 seconds)
    (4/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101827944 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062195647 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112614803 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16320145 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105567676 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077475216 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084012633 seconds)
    (11/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.208903501 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.237095768 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072335781 seconds)
    (14/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156483241 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078330406 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076696913 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079406411 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07406914 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.190120275 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091648001 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.215606277 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103122441 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108218524 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.230129954 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173619557 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.20134301 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065196703 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091662826 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161271593 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149013877 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071103829 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.203373003 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177682984 seconds)
    (34/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071382469 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073502572 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072867679 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112486905 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073076898 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087782775 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06921853 seconds)
    (41/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.154184668 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072158451 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050299048 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088892896 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.142444378 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077088734 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087554277 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073153379 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085187537 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.099316722 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08137272 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 0.132698165 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159507134 seconds)
    (54/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069086872 seconds)
    (55/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119693429 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067070973 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113839311 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065051469 seconds)
    (59/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076782788 seconds)
    (60/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082158944 seconds)
    (61/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089678135 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079400643 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.186291543 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065503828 seconds)
    (65/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100047702 seconds)
    (66/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081079077 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073694105 seconds)
    (68/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069714856 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070989413 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143169655 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.215300569 seconds)
    (72/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071378936 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.161675804 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.130072475 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089225817 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050144819 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087611677 seconds)
    (78/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.151926759 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141045942 seconds)
    (80/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.153947773 seconds)
    (81/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088932802 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179832608 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094663222 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.065309564 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090550688 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.319235209 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18620567 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143009673 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088986141 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092920193 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.178021083 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.149442282 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072968166 seconds)
    (94/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068685576 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077678657 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069511202 seconds)
    (97/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067940354 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079760833 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07419694 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054774122 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076886266 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098153049 seconds)
    (103/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111581332 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089956259 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052694789 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050929419 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068241222 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073719685 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093312521 seconds)
    (110/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076777375 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183571072 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073261846 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051169615 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185217906 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196425967 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073031153 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052228464 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090690434 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145826962 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.144533669 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091387933 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140214155 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191726286 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109240947 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100657447 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070320212 seconds)
    (127/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.209021327 seconds)
    (128/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072543709 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.112166675 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.138256627 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073175525 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075088733 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094820991 seconds)
    (134/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10876357 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072940155 seconds)
    (136/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108755859 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.1969962 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050486623 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07143855 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168222183 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072443509 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051693035 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052492768 seconds)
    (144/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116506577 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071600609 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066338955 seconds)
    (147/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119376401 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071106727 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075665994 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065249427 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.205741209 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066919463 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064542201 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.161122544 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073025433 seconds)
    (156/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100225752 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050418505 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069961715 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072922381 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066098091 seconds)
    (161/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052000508 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064581465 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082688391 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.274578339 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073632088 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06509203 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06796128 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155293604 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050856089 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093529074 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064746954 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05122359 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076709389 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071772679 seconds)
    (175/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076841432 seconds)
    (176/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069633029 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065294632 seconds)
    (178/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075622888 seconds)
    (179/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074032612 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060972747 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072184799 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065574371 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050617227 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067073959 seconds)
    (185/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061452485 seconds)
    (186/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063003031 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070036955 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139655301 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071637732 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049881408 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110496995 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108665682 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.051910412 seconds)
    (194/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050871704 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073360998 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149842143 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155176237 seconds)
    (198/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061467373 seconds)
    (199/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063082323 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05046651 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079254936 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.242235292 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090920911 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051741094 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13858961 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199116042 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066094411 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051271155 seconds)
    (209/309) benchmarking ("sort", Float64, false)...
    done (took 0.131972388 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093323476 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064059064 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15558875 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051969078 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051731855 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075059585 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114119887 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.086750445 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075369081 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051211806 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065763806 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163545417 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052217392 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07305377 seconds)
    (224/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069545617 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066041923 seconds)
    (226/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077733186 seconds)
    (227/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100151379 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074409917 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070964185 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154948277 seconds)
    (231/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051305836 seconds)
    (232/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052321885 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052962729 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127646382 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051133634 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065812636 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064544652 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052109146 seconds)
    (239/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062153878 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065343193 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066584519 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.077522188 seconds)
    (243/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098646847 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137187178 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065782701 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051758503 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074132658 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065909474 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073061005 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054706028 seconds)
    (251/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064258494 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073558748 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050457296 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051883944 seconds)
    (255/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066191462 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065078603 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051575478 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154342331 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066676671 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07197527 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065195223 seconds)
    (262/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062064738 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071884973 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129079266 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065721603 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073838223 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075528881 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072038807 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066103244 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066266833 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093410864 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064678273 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086483274 seconds)
    (274/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05081239 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050346012 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087413 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065138338 seconds)
    (278/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073507241 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065214545 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068217427 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078680001 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050887259 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067739595 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073241437 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050732556 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064208999 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050535587 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063992242 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050560098 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072954949 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050468381 seconds)
    (292/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050957739 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176899843 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051604772 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088295355 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071363023 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051950681 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 0.142384372 seconds)
    (299/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071052745 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067433711 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051020608 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066784857 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091283685 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050928661 seconds)
    (305/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050545372 seconds)
    (306/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07054088 seconds)
    (307/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060774135 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065502376 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050700089 seconds)
  done (took 30.915373983 seconds)
done (took 32.317312018 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085675796 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092968349 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074293718 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092684739 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080711864 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076576031 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072544992 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077947417 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079730071 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082043853 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078051189 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054090648 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074076041 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073705766 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075534982 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091655603 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078087084 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073069869 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072827621 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064518348 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072874721 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065265789 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067085026 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053917218 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078168104 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071778981 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071901928 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074404297 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065858202 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06558176 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068861 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073397075 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065577563 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.0787307 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072197605 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072572313 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075248539 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077257635 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067147352 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065417434 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073862881 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065146285 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072890303 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073854271 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072240661 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071825981 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072875448 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077776173 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091704992 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06741991 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074363594 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075817252 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075735931 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073115889 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069907801 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072999519 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071101712 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091786862 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073557885 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067878378 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074095615 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074113947 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071351184 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072891852 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072961557 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074816723 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075719858 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071246301 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074933359 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071515473 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064800095 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073624882 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069208871 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065032333 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075841833 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07704468 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06406042 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070934298 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072308584 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070541559 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06428374 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066816792 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067026095 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071848096 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066697349 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053463303 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06924079 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071585005 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064096111 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073046935 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071269017 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072627264 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066560802 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07548013 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064591838 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070988488 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065048456 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065121942 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06712191 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069306363 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065370725 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066468751 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074358695 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066324536 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071722267 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078728852 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064861726 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071969815 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064111766 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064104468 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07945265 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074296335 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06519859 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067347072 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06437858 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072758101 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064299005 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064704512 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065240279 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065365887 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07159941 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06552875 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066611906 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072621841 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07804159 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064339637 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067848228 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065732276 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063803758 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0697288 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06433516 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063734927 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06525361 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060264335 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065153826 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063481181 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071185029 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065275585 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.20489337 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067461439 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074040835 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070576432 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071826235 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071261756 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064458835 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058733361 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067233989 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067521628 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06736741 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065314336 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067059453 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065479974 seconds)
done (took 12.417589055 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067136313 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140134178 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096513892 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096283078 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086048379 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066362048 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076178137 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101611395 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06737557 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101838162 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08739461 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085944696 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114392391 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064613237 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065324187 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069969535 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067125384 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081544408 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100966176 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086946327 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115414668 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064954461 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092788275 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089088385 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088250965 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103308614 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06897266 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070182663 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069073704 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092835167 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088118056 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069583617 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066086083 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098834743 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094095632 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084215292 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066075288 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083260625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066169815 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065811053 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066915781 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099419204 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080468887 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080633491 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070003217 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069896768 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06686054 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083864715 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09037918 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079758043 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085950508 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102135728 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068949558 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065243661 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064843463 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086085356 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064830212 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068363927 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066111458 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06832316 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065466027 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069078057 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080836848 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080554176 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070214064 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079873392 seconds)
  done (took 6.798403248 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084015324 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091554003 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083590597 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084068087 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065771728 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06637999 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065770627 seconds)
  done (took 2.035935866 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067005657 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088674568 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089547631 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089314359 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081443708 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088249497 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075287031 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066467848 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087589294 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06709289 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087229886 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100643276 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069924678 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073854506 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090602248 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066016675 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090718523 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065850729 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069454211 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089890691 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068674648 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09557299 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069378083 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066852825 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080768068 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06627617 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114260352 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070161124 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06788799 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069662142 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063818219 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106774771 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08012901 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074426376 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065897196 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080600457 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08084275 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064696405 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082742827 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074365553 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080270559 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066032263 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066747354 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064266654 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070490354 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076952138 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067125938 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066837892 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069249477 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086261032 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066911054 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079913692 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069607347 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07201545 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06757685 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072863578 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076652823 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067073805 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086664424 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067616833 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083376611 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083306403 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080848264 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082734372 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068936449 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08014626 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07994857 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068521307 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067878085 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070322531 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082816483 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064616396 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06708388 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077206274 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068140629 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089349095 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088777293 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067382602 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079027339 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066747882 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065990237 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06651831 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088843215 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071202607 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066043543 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070430904 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069270359 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064283965 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065401159 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069674317 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064473164 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067842773 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069334228 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06962535 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068897309 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083023199 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068716466 seconds)
  done (took 8.77889811 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068345649 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066882178 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069294931 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067808811 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067774761 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068122844 seconds)
  done (took 1.92588234 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093695193 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068887885 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079271553 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071892482 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1047672 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086815692 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08691361 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077869479 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083905688 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07808412 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087356169 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088437679 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092198389 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071884559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086221726 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071883487 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086713102 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074985558 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078169113 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072658428 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086394724 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072220081 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072598743 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081758104 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075523273 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071536099 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067189626 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078778308 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077923702 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078188038 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072171865 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075775312 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070523879 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077819945 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087141408 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070058953 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071373105 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077060088 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072230423 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07530425 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087575903 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072557648 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073703465 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076872576 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078071499 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070186799 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076958541 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07454407 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085538428 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076704172 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076508571 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070745986 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074715987 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076065511 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069993414 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077022811 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076677309 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086459611 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071905811 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06965792 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067832749 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075235281 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077501182 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07454089 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07875694 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076375034 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06976073 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072237209 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072470891 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070892633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077230736 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068244129 seconds)
  done (took 7.055622928 seconds)
done (took 28.079806961 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538893165 seconds)
  done (took 2.017038717 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616667051 seconds)
  done (took 2.122423074 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.605271718 seconds)
  done (took 8.107032373 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398868435 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.495851055 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.720162022 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131517051 seconds)
  done (took 3.28074075 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.697885925 seconds)
  done (took 2.215795631 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214375012 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201033551 seconds)
  done (took 1.941481816 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376653189 seconds)
  done (took 1.885107208 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.138444987 seconds)
  done (took 2.650208877 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257693762 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174977937 seconds)
  done (took 1.945297101 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.479180267 seconds)
  done (took 1.990916046 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.827778275 seconds)
  done (took 6.340833898 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213053184 seconds)
  done (took 1.760722509 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239893735 seconds)
  done (took 1.751407078 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.704423683 seconds)
  done (took 3.215163524 seconds)
done (took 42.732599287 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080429233 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080997796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081091319 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078172523 seconds)
  done (took 1.819850061 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077130813 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072674929 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07717102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072564226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077273226 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072650378 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074553522 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077367323 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072754862 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073418785 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073229909 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073145754 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075684053 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075014321 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071832187 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075141034 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07641238 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07273355 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075220876 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072821988 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070390989 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075232886 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074986953 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07157833 seconds)
  done (took 3.29834478 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078273379 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073025352 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07438716 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072028453 seconds)
  done (took 1.821647092 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078179897 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.0957857 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089581823 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078591703 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093481444 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086946822 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068939469 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068910728 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07082445 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077565516 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067905991 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096748775 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088975287 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078579634 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079901774 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065885527 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068522361 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08777649 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077968445 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078482862 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070155416 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077984417 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068389298 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089216944 seconds)
  done (took 3.424614786 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088499541 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105890393 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083596885 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088312915 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091003353 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065251134 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087852007 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092321192 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127070176 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065345123 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07047457 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065326961 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073171022 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065547644 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081505189 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107571583 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111509505 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068930318 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096964453 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065614016 seconds)
  done (took 3.23172902 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072548162 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070263049 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066159709 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069604204 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077481836 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073038635 seconds)
  done (took 1.959872908 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069559131 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067919176 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06789539 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066933823 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071948111 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067382575 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067343652 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067269748 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067692672 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067112757 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066646342 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065560222 seconds)
  done (took 2.338096199 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204861038 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068492154 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06914207 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065952014 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070603899 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066274229 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08106791 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067943782 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09109249 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065841704 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067057361 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068383231 seconds)
  done (took 2.515138729 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208690211 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076048632 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240118612 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150175771 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110997667 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11579891 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111809152 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114580072 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142788355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100925765 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168581361 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167547895 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107649586 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137365271 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088959684 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100485281 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154054408 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163224493 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105672353 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167410542 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146118394 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126465517 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154240148 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102325811 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10692884 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122352437 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070900861 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080058213 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170343649 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134034877 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144639625 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110859873 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092451372 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177275409 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172949742 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140938633 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146391161 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084142602 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104790996 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134184684 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202871974 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08959289 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160541439 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107760555 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219099053 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134796814 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122079696 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120651715 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105847619 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090567514 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146607513 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185511012 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137955826 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0883317 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123893791 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113862071 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115634055 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114270334 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183340054 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163029915 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128751577 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071452268 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108873192 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153965029 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134570246 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10796712 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125492166 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092639448 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136744034 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15579388 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122213512 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147185909 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11803152 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090407989 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120694919 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140893876 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128077494 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161652385 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125101621 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07336964 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124721049 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10259118 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08119496 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145732983 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075308019 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176912775 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099101707 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109305615 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127284396 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112559061 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111062631 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160433297 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144375769 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102751578 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064972079 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24607938 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12220801 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148414682 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087513759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109266743 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118228673 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077910556 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138892326 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075602318 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124149907 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078240055 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129489357 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130500935 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077035843 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122929568 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103652796 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100645567 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132978613 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161980551 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088303704 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083077092 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170720187 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123120711 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104263004 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144579537 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158123021 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102333415 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1013543 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15082907 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18021473 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089684215 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16359731 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106696716 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083768757 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08765708 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124405209 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112517443 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123835355 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081879694 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118530557 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169741501 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074874456 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096208333 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134459303 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078995815 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081223322 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106000981 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104684187 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095481576 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099572312 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10298134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135802827 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123513531 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105649842 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123555089 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097904113 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315412381 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088497603 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102808424 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104644626 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070488581 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136698443 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16015899 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080118771 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16545616 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124045052 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116565816 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120381696 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084653449 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141651701 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079297666 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0703902 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145286501 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110937748 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111196958 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15164028 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11655635 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126084213 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120135504 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134135946 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132084338 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131641397 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105865376 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088990821 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11247927 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126667265 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073205205 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09084049 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079944284 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104404868 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095575481 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083112063 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141323879 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124820411 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109444753 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112450652 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096876936 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148743421 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076132697 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128345367 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119789293 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096024783 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153102234 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153145777 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131175664 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099135136 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136393326 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069982708 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073692218 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08809908 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122570649 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082393053 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082606446 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258965005 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150175555 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132000788 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136808642 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12330047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120823132 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156880161 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070636149 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117732314 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149077568 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121845461 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105528473 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091493098 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099162237 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14432738 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108168768 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183647316 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117383753 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125151056 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153148927 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101460067 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079503337 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103427491 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136412436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103918583 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14415997 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099617715 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088029142 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110513293 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074339386 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099063204 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127270769 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118907539 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135207742 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115537996 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132772694 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077530181 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11592966 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122124586 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122326067 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063805321 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120723792 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162604889 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09461318 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118868442 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153592939 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078816822 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134086403 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175090102 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144136333 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084824946 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252248473 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121814405 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129933193 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121858075 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141903063 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108171572 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138306879 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109868064 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087043766 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088400489 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098294183 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105670409 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096030557 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107125105 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115058118 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095612479 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131984408 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104540854 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110998943 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11846703 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09851653 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091598664 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098028858 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179134134 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120325794 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171358586 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100444693 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145052104 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165084349 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075704832 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079169176 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078412067 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140952251 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084309304 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130030917 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107464914 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117908537 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123985673 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143642484 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096291071 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068741248 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109019956 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133166492 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124307222 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09832032 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103755709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164844976 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101543322 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079285881 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114459789 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115684576 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102959026 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171454604 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061527521 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105647233 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076028656 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080213158 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127052433 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29246273 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080686285 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105200166 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120973902 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112692599 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129349922 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100545661 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109910946 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127117751 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151264901 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129436388 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090560806 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111702824 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130215749 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157764938 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105338488 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096454502 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174826069 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153760571 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160966739 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088152551 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115864951 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115438343 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110060999 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13828195 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083227484 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164637644 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082261578 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137419757 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10356372 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089350319 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129177471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108657906 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087907428 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148460375 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118063339 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082826991 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07773939 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118381058 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120051838 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106099375 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075360716 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139656616 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073507843 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135532953 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160224117 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080294159 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107544325 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09632537 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078719952 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105690818 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101703115 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086821484 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239156061 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177474338 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089839569 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151476393 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134606215 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113982672 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136540613 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10256597 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640483343 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078285952 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154337647 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11649686 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177390656 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100577802 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118055182 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112239152 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124033304 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145645234 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104944353 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182435478 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132584548 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116879362 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079481295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103856127 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103997016 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088331038 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108171287 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114511702 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115162781 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092582191 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116431035 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125136063 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082751645 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096195675 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157012703 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117066132 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144356816 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141622856 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086031905 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118602876 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139135483 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080618213 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121733797 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152089598 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105877521 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098640455 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080565717 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099973149 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159111902 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073177526 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158197158 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117896534 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253171458 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114299549 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113585705 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132870709 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108167157 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122849475 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093559292 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111575131 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114212455 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082599551 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077037172 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107221482 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112712659 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099283122 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098912463 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100211585 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152567569 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072207699 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09942186 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114872894 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144652614 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175899736 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088844578 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08275046 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119362195 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114347937 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113455549 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121526471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078920122 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081880802 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081561919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077762072 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109620674 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11318965 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115419159 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11176121 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164202712 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083295816 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231731459 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095918334 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10538589 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069603223 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078365681 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09630039 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098428484 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107243645 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109931926 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159983283 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095587864 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090529463 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091504734 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07396418 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084193332 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129127422 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109744398 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118505466 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097805866 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061541893 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106909345 seconds)
  done (took 59.162189852 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110217229 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082562003 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097021841 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144136139 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122496841 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202685172 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154027849 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18922736 seconds)
  done (took 2.753151458 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068637981 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095953168 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103705496 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083619791 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067173535 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069189896 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233222678 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081469043 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066221289 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099272829 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079271074 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069492309 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430460395 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066491556 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067734371 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061850968 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067134549 seconds)
  done (took 3.437577137 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388252614 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610234575 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.382688126 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07347511 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.451534074 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092212418 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.142818011 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132435224 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073165077 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536860343 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703315385 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123817768 seconds)
  done (took 18.351364272 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07596092 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069660191 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084722358 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083289919 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072742584 seconds)
  done (took 2.021125143 seconds)
done (took 107.699438559 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081888205 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.613614892 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053017729 seconds)
  done (took 2.32701724 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087208817 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086324904 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085838925 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083745831 seconds)
  done (took 1.983948401 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076520356 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077276302 seconds)
  done (took 1.788960542 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233846054 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170027275 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096905399 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083777879 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079450954 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081524943 seconds)
  done (took 1.884551478 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072509249 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07632678 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073116522 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076869445 seconds)
  done (took 1.933690351 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077186056 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051727131 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054811321 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057963176 seconds)
  done (took 1.878462744 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087822581 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080539079 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079217171 seconds)
  done (took 1.884971378 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10233415 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086742598 seconds)
  done (took 1.82594951 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082235799 seconds)
  done (took 1.720130809 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101327322 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102301207 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133112481 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111765028 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14104688 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109835332 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085275069 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086227311 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076727063 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087472382 seconds)
  done (took 2.672297978 seconds)
done (took 22.114906731 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078992642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36981066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359783642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090462855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668400099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356033247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993593989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093286725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115483594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06730735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084627294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648618055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986840014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.337441402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973091368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319088817 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650123986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068225153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067432124 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068319987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979541301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068332905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067804595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068082905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647539359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37254732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068076732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31832313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067907455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07010574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355067198 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068363018 seconds)
  done (took 16.17247784 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070492022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121145621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073985728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084845413 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071278238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070136422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071800073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069093463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122272247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067588593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085119014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068235745 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072162345 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068923346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088771435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085889403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068994481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06859328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06774488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068838372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087017649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067762621 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068343219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068737757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068250036 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080960667 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068381626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068238677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068523252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069903264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070902373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068902588 seconds)
  done (took 4.074695787 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119532805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127991707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073935644 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105902053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114489238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069980727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148051208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093695815 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130478199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06803406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085098823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068159914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102805799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069213398 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088899474 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068958122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068940024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068383419 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068171868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068097676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087906113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068057972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067958734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068937919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068503673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081810261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068064124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068231107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068021888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070034148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071229976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068404323 seconds)
  done (took 4.322115429 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07369246 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076218091 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084199167 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084368456 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070244387 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072339817 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073498248 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069582111 seconds)
  done (took 2.261797326 seconds)
done (took 28.473529387 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079264413 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06969506 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072820391 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082453698 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073648842 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078356227 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067338793 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07573674 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072264967 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073626753 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075853696 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068012164 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071702131 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067552474 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074889877 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068317275 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079206363 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071957371 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079181198 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080056736 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069891617 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073093586 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074843969 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079282979 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079387637 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079391249 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077554535 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072901769 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068954924 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070620958 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077030709 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084345102 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068103224 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079110139 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067461047 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067737197 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071755693 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067461061 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079456096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076610047 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069528722 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076347621 seconds)
  done (took 4.745931886 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089528218 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093354978 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084552368 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062629538 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067482424 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065968556 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090039031 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059889916 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05929863 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089022286 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055359068 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059253416 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065844525 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053349704 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060459878 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056177636 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061511156 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055447786 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060168605 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059598326 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089245863 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053397075 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07778794 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064418897 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055898789 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061375636 seconds)
  done (took 3.414077062 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075205832 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087497094 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090406306 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131109041 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105881652 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079201536 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08116635 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095970731 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088808618 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066895204 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071688034 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093150854 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091927647 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074053052 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067466938 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086589529 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083862648 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069281375 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073184224 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096568781 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087385379 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086985595 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100118468 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084649074 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067198498 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070050165 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071977879 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081783659 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072998869 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077435041 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071692106 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071686996 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070067267 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080211425 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072642495 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070231842 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093573745 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077779623 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079677643 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068471201 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071053301 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069615339 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093434567 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134191702 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069394085 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075878744 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076287527 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077991588 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068374958 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089145874 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080036147 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067629559 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071108247 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067776957 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06799081 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081726673 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070308256 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070651995 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077804663 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070882233 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093547692 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072876307 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084306389 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068288521 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07582912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067214466 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069417864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067062806 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09657002 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07038656 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113334254 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069726069 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069446279 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077842777 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076390508 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074688187 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069256971 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084460763 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078869948 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071309027 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077377931 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071999191 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071178752 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092401975 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070435083 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06962642 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069958958 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074749825 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070733372 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068903868 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081223267 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06776414 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070764671 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086226356 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070028914 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069015874 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073852884 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072796704 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067301792 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079464739 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072707809 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069303623 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.0771204 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068069542 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070858912 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081019546 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.0747568 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067021627 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072533768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07405738 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068875968 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069571412 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070983013 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069297582 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076738935 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074642828 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072069131 seconds)
  done (took 10.739219522 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166583802 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157564759 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070546236 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150233843 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076719481 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079138644 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151465669 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095777804 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068344837 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068193402 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068454239 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11108203 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106745704 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116924449 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079194333 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067769794 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085254368 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115605454 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154302864 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147753395 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084882847 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077699888 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070389621 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06862135 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070228743 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078426266 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085964305 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07678361 seconds)
  done (took 4.444819842 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080317154 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106726196 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074908963 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091363643 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091313493 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068619886 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070621594 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069824972 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081513151 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078759237 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06761357 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073637154 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075161991 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07130587 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068929523 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075051968 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075050552 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069205092 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071671451 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073498192 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078169354 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092244062 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071852344 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066694441 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073053948 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067041009 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063459066 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084649618 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068589022 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095511544 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066059838 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076446095 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082024298 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068641795 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067985486 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06782619 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067968961 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06777756 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069730726 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06664472 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066558015 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057583066 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066793964 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080247616 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074948846 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056400036 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073349724 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073834541 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07355053 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065766127 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07057864 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070567385 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071308526 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075901463 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073195362 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073416826 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069069895 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074565484 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077375569 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067953655 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065420893 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066391124 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073266159 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065636225 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076631899 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072678171 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066522235 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067918247 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070045226 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075144991 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068252793 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071198531 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065359281 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070061358 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072660182 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070133995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069246624 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066450656 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067483976 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068165198 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054990196 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068187447 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052776318 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071559046 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066077158 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066731121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06742543 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073105893 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080691302 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069472662 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074098312 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069701859 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066904606 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071360602 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060177112 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070580904 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083774197 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083930769 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068070838 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065705408 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082867529 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073289064 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067198025 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056254179 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075540034 seconds)
  done (took 9.222463888 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090476677 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070212424 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086424026 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093988273 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087463758 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075634547 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077843033 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069307835 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083616686 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074638561 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077935628 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068433288 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078638164 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077668804 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070750127 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078135445 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07258999 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085647541 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083203509 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068678423 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076915565 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081183799 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090927115 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083165014 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081259543 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083381784 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092186915 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072482187 seconds)
  done (took 3.929676489 seconds)
done (took 38.146931734 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.731154937 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.907019708 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.728646317 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.102490511 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.064834849 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.74878885 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.88689547 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.724889125 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.946116622 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.764689938 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.960295652 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.851550038 seconds)
done (took 65.081837283 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.796061375 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.869916084 seconds)
    (2/2) benchmarking "String"...
    done (took 1.96706826 seconds)
  done (took 5.505722582 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.967425018 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.29772141 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.979714955 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.725414606 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.732226547 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.068951318 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.542565853 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.244600468 seconds)
  done (took 30.256721078 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.842468303 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.966422138 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.396623931 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.430660192 seconds)
  done (took 15.347626754 seconds)
done (took 62.623594525 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.726821464 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.761966875 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.735329142 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.711831982 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.787049646 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.733938068 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.036075798 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.944272216 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.726426097 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.719619986 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.730937078 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.169631041 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.735848758 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.071423048 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.727471452 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.736470513 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.776701186 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.222959794 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.886228029 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.737606259 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.747484189 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.777522258 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.733134817 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.733662803 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.777841769 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.729776189 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.16289891 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.737462036 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.356483147 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.731470129 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.755568028 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.222486833 seconds)
  done (took 203.80943293 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.72698217 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.727962609 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.809362993 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.76194378 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.207668805 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.91215505 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.862171483 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.266399716 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.732456997 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.760133093 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.958434804 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.727942688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.983259581 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.733367864 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.757404256 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.732233866 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.859901614 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.988626684 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.761499586 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.908219476 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.74570259 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.868359889 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.828303105 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.942723474 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766112797 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.781041578 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.872972611 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.733381585 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.922293515 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.840906365 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.75821577 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.731407174 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.950692094 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.604370486 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.740461212 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.742863072 seconds)
  done (took 168.675668939 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.120902639 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.728697038 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.728456896 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.727472646 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.739368499 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.727417473 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.848717107 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853875046 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.336284931 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.127312784 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.78179274 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57291018 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.72786984 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795565652 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.741457461 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.731663187 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.742484166 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.753926819 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727356461 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.727729919 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853025937 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.740914383 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.784016768 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736880356 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.728474642 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733973374 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.101241193 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727467898 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736242446 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.990150213 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.730815891 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729757373 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.624164183 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.338581747 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818948912 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.730950354 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734486885 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.730212251 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.949517086 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.729033536 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.729312123 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.732130359 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901396508 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.72985413 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.854395604 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.730194556 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.231404842 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.728752501 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730211489 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.653104684 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.413673757 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.729813853 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.731700279 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.734729064 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.731235952 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.731442065 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.737195533 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.566611823 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.810145187 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.733428534 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.734640695 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737667371 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.732255036 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.856862776 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736108453 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.286373419 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.793178089 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.860501992 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.73404592 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85474746 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.737812814 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802160366 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827500764 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.733233031 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.732399206 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.734275541 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.732045395 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.814833549 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.732939438 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.856308382 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741163804 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.734062935 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.785656055 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.801717927 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.733640176 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626791374 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.734972103 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.733964111 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.045004467 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799387105 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.733028548 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.733878369 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.733830315 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.890046926 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.735918845 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857205337 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.512651177 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.737760256 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.422079041 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.741537584 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.916046869 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.737311589 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.735335602 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.735689114 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920899916 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.737497248 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81808299 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741907292 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.737265849 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.73536821 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.768794881 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.737159483 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.794545837 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.74033368 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.110843289 seconds)
  done (took 397.822896869 seconds)
done (took 774.151773769 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.420161623 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.367647134 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.48705185 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.390963651 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.359167088 seconds)
  done (took 13.700782703 seconds)
done (took 15.37550005 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.823452691 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.828710707 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.759881123 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.825825588 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757208812 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.828282934 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.808358486 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.762461702 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.792671637 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.763002574 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.793965441 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.76116076 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.747497877 seconds)
  done (took 24.927146169 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96691931 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.981057539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.808179734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.970294169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.783035538 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.967037067 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906619215 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888594667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89286658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753803582 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750582041 seconds)
  done (took 22.345974326 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.976220506 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.985728379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.816469728 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.980331246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787728369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.976522363 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.902715003 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891391372 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889506729 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761139392 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751821603 seconds)
  done (took 22.396933239 seconds)
done (took 71.344773096 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.747974168 seconds)
  done (took 3.424551264 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.771073073 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.926384931 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.752585969 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.750267627 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.747783144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.747416629 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.751079049 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.748416157 seconds)
  done (took 15.872224373 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.743585178 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.743801768 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.743019048 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.746911739 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.746040354 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.747979763 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.746857593 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.747662958 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.744403873 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.746375271 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.747472647 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.743015443 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.744792652 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.744211828 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.744861944 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.748149774 seconds)
  done (took 29.606584499 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.746653413 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.744682989 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.743339717 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.745283024 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.745150656 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.745930275 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.745177536 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.744932908 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.744363096 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.744990316 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.745649267 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.744717848 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.745864401 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.744623889 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.745569775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.747122206 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.745510333 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.744705007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.750493878 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.746946506 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.746028294 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.745858581 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.747097027 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.745963247 seconds)
  done (took 43.578185588 seconds)
done (took 94.159018426 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.635956379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.132567447 seconds)
  done (took 8.448139663 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.751855109 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.748762248 seconds)
  done (took 5.213530187 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.749059443 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.750088507 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.748188918 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.748678576 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.749721471 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.748284225 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.748621382 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.748998171 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.749934951 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.74861357 seconds)
  done (took 19.170688906 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.749315129 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.748965363 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.746388982 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.748594356 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.749304493 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.747341275 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.750312028 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.749047234 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.750558592 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.746892574 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.748329558 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.747346087 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.750592725 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.747962613 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.748698525 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.747470035 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.747283564 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.746924643 seconds)
  done (took 33.151968554 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.750119956 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.749923741 seconds)
  done (took 5.181906995 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.747162473 seconds)
    (2/7) benchmarking "second"...
    done (took 1.747776201 seconds)
    (3/7) benchmarking "month"...
    done (took 1.747277876 seconds)
    (4/7) benchmarking "year"...
    done (took 1.747858338 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.748952166 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.748457087 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.747519958 seconds)
  done (took 13.916153662 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.752606078 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.913894947 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.985458248 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.389028404 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.751175888 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.753932378 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.722953774 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.754181375 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.756254697 seconds)
  done (took 19.461330701 seconds)
done (took 106.223621174 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.590095363 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.745638179 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.102990105 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.822862804 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.763279245 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.087985653 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.793857704 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.07022432 seconds)
done (took 42.658302436 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.797761881 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.31165807 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.344600486 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.229311296 seconds)
  done (took 12.57015983 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.730353553 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.309906134 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.788488377 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.418108717 seconds)
  done (took 20.116662874 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.11665254 seconds)
    (2/2) benchmarking "read"...
    done (took 2.097918368 seconds)
  done (took 5.903348046 seconds)
done (took 47.072093451 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753850146 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.753670025 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.749728193 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.750842068 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.753446308 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.75138556 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.750840614 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.753719857 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.753392728 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.753704016 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.754569506 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753549007 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749959579 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750312222 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753162398 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.751538425 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752123972 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.753985238 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751584101 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.750550199 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754007238 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.750835025 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.752140516 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.753963081 seconds)
  done (took 43.74259923 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.754602292 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.752232809 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.754893044 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.754004525 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.752542635 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.7547136 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.754596556 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.750800705 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.755297859 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.754706478 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750906272 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.751655183 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.754362037 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.752336172 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755458989 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.752953373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.754751972 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752552647 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756205052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.752087441 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.757925407 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7527053 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.753313421 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75415816 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.753004888 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754574187 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.754706596 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.752337042 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755955 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.753742498 seconds)
  done (took 54.299842287 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.760602622 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.76471083 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.755679848 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.756652968 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.75632969 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.755597648 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.757241101 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.756207746 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.756368695 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.756880666 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.756851186 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.756705692 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.757551336 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.756701764 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.757005681 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.758197088 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.756571249 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.758546625 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.757189134 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.7577844 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.756578791 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.757644125 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.756995076 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.757916251 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.756436011 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.756176627 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.756597165 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.757811335 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.757256477 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.757139156 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.756863292 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.756975199 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.757966701 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.758192506 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.757719124 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.758009495 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.762170812 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.764411559 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.757453388 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.75834252 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.757822734 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.757887446 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.757637701 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.75759696 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.757943592 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.758375299 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.757982236 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.758607343 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.757741424 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.758118227 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.757840639 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.758903051 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.759727399 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.75791378 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.757482177 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.758183228 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.759237406 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.758468 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.757957136 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.759894603 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.759330534 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.759210145 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.760051092 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.761223424 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.759724807 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.7588959 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.759231371 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.758515272 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.759524275 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.759854152 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.759827587 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.760150544 seconds)
  done (took 128.27781576 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.760073513 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.759293771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.757136724 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.75780768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756871128 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.760169223 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.757685565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761762653 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756323083 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.759611747 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759484192 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.757924519 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75732754 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.760199497 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759740533 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.757921376 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.76037606 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757917604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.761430214 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.761550234 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760010411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.757788137 seconds)
  done (took 40.390161805 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760682933 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.761382212 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.756940854 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760289154 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.757841257 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.760768458 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.76152504 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.759661913 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760247072 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758125068 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758640087 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761222483 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759057673 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758537385 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758781297 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760217483 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760833686 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758611688 seconds)
  done (took 33.366994506 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.759251074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.75763401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.762863095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.759970773 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.758907112 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762807214 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759432276 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.76307149 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.762108815 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.759743061 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.765212736 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763480926 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.763751271 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759912131 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763142359 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.759721642 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.764315214 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759894532 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76259906 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759784086 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.761097358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762399176 seconds)
  done (took 40.444899476 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763648879 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761984149 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761388264 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.760283038 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.760901093 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.763476879 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.762532394 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.760453673 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.764425 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.76305736 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762213976 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.763272054 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.761407934 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.761851177 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.760299797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760711523 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764555733 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.762543698 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76408193 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.760026773 seconds)
  done (took 36.938440923 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.765765479 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764964524 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.765323116 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765556207 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764907604 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.765297681 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765514196 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.765093008 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764473776 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.765532045 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764712589 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.764989484 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766749033 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.766027962 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76587193 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766272254 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767771715 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.767246205 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766866696 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.765727147 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.765924012 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.767638357 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.765755056 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.767994819 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.766291644 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.765755831 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765216082 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.767591601 seconds)
  done (took 51.143902583 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766438903 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.765007322 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.762418679 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.763210516 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.762679157 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.763831339 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.76302348 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.763479328 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.766281318 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.76378762 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.76535298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.767208656 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.765402216 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.766330098 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.766847288 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.765959725 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765299271 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.765113757 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763769437 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763919514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.767009754 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766582801 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.767852518 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.763822036 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764284714 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.766606243 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763497495 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.763825225 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76894726 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.764144026 seconds)
  done (took 54.648930668 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.784589613 seconds)
    (2/2) benchmarking "in"...
    done (took 1.78512004 seconds)
  done (took 5.266574734 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.76549855 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768750198 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.767312869 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.765477412 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.765122308 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.768642508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768229291 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765147796 seconds)
  done (took 15.831744457 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.767366474 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.768669834 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.769847914 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.76827384 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.768802831 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.769139794 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774010414 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.768999961 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.769524218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.770738085 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.776242314 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.776006241 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.771333246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770406395 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.769329598 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770497193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.769392306 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.770192686 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.768729606 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.771011781 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770004383 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770208935 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771191256 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.767102514 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.770669267 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.780945281 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.772966902 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.769865214 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769099721 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.773314054 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.770602802 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.765865183 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.77086362 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.77038233 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.769836142 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.770389222 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778646704 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770623559 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.775074829 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770644383 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.771599299 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.767355999 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.772634903 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.771674676 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771593643 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.770675694 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.770788234 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.769934952 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.770271765 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.77372708 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.776806059 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.770595352 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.768008325 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775680912 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.772777486 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.777535038 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.771166402 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.774306615 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.780752983 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.781917254 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.785130633 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.781646452 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772404948 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.772377201 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782375571 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.798707291 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776475787 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.769438709 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.770189075 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.772702058 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.779481246 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785671534 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.782076208 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.772288117 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773104958 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.773079098 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772714506 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772103952 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779643708 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.77455492 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.771948854 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774786586 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781668762 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79676582 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.772598198 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.773995379 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.773247389 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.773296216 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.774035703 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783226016 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.773734237 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.772375963 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.774471454 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.773778058 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.772976326 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.77340146 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.77222282 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773404626 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.771507567 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.773382116 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773656694 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775814939 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.78203481 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77470969 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773884038 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.778698879 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.773379752 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772724899 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.778626683 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.775105302 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774056119 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.774562126 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.780295774 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.772001423 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.779361858 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.783179571 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.774923104 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.774729252 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.775916356 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.77528342 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78495555 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.802538613 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.774488202 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.775373066 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.780763923 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.789143049 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777617891 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.777560814 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.775925021 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.77292412 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.772626147 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.775999776 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.776290988 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.775411259 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774993451 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775218781 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.771948382 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.776669985 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.775395774 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.775933973 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.776642761 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.775370488 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.776569022 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.777318777 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.776832702 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.776762097 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.781978882 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.774682114 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.776640059 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.777679438 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.773504114 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.775815366 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.776857169 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.77629641 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.776591278 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.777319776 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.776174865 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.776616389 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.775630266 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.77646703 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776285657 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.778220335 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781139109 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.777574607 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.780589298 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.776212002 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.773802591 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.775664907 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.77680501 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.776025779 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.776443062 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.775319606 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.779942069 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.7860318 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.778039077 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.777813508 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.780218295 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.77864811 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778227782 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778734377 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.781138083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.785230017 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.77947034 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.782478194 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.778183169 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777973885 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.777857807 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.778688818 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.777461665 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777835236 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.780727434 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.78568373 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.791511124 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786194659 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.780943652 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.781612358 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.779566686 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.782148629 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.781801521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.779550829 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.7788251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778762843 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777362862 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779686092 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.779848311 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.779468198 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.777200183 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.779739771 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.77940112 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.779981961 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77905983 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.779464434 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780632002 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.776516713 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779263809 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.779714573 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.779604727 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.776293958 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.778401443 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.777665266 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.779099144 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.780514063 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.786929776 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.776851462 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779967198 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781520849 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.780378791 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.780464936 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.781102356 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78150576 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.779472654 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786152432 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.779446322 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.780676641 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785299872 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.7799144 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.779558891 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.782718899 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.781370733 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.779747562 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.78306326 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.788481054 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.780303903 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.780968471 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.783605731 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.781063618 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780174558 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.785749842 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.7776337 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.780592564 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.782024269 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.781833816 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.777557594 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.781161773 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.781412401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.78214216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783404152 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780480077 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.781672322 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.782457834 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.782317844 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.78346639 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.782064907 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.784331346 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.789783206 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.785328232 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.781382882 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.783658143 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.783757746 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.785872174 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.781977136 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.781389881 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.782152848 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794624644 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.792073949 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787252106 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.783049176 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.782292785 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787933265 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.782628771 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.787027286 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781387065 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782887442 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.783307277 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.780589425 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.780464751 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.783713695 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.782593375 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783062804 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.785846913 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.787710183 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.784339109 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.782665984 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.78417305 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.783157344 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.78415632 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.783132538 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.783077784 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.784917495 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783970421 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.783559837 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.782714281 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789205492 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783603231 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.784646845 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.782275007 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.783814092 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.782857003 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.785082231 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.783574444 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.787145011 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.793583396 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.787870668 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.793684389 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.785528313 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793931709 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.784509731 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.789077985 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.792290443 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.781058677 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.783189598 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.784671668 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.783570487 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790407091 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.785376403 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.786310005 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.78824235 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785811599 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.784816027 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.783833887 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.784508447 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78431569 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.784682312 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792302698 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.786975808 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.789430448 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787238727 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.781984773 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.785055984 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.784382948 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.785377772 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788441474 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.786658795 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.786286643 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.784371922 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.785404114 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.785901156 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.786332277 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.786257082 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.783756991 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.785020315 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792444786 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.787688731 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791456992 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.786143343 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.793138257 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78773349 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794402481 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.787391203 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.787486518 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.786785186 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.785779431 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.789956275 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.786747287 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.786439979 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.787038438 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.788390187 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.791861346 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.78789165 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.789855035 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.787772601 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.787841065 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.786822234 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797588329 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813354398 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.788512403 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792583852 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.784921107 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.788742309 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.793680612 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.787911286 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.787253899 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.79051187 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80051061 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796216096 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.787980215 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.788828096 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786953964 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789298561 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.788171827 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.787921406 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.789282116 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.788346473 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.789542628 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.788791039 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793356521 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.788847612 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.790322789 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.790196322 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.789316493 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.798737021 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.789079291 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.789826769 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790359608 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.789060323 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.789667665 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.789094015 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.7897897 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790582753 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790495405 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.791228098 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795714809 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.797782954 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.791724497 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.788886579 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.789075975 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.789408854 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.789838162 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791308893 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.789898783 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79153556 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.790576891 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.789724729 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.790275937 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.788783863 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.789942836 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.790517016 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792093669 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79402382 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.799328775 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790404377 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.786578819 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.789666338 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792083065 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.79037167 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.790680178 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.797374406 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793791885 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.801523764 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.79968199 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.797556914 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.790921295 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79521379 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.799113821 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.79007387 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.791069577 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.792176021 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.792263241 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.792515121 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.795104811 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790729696 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.797550951 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.79137422 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.791356635 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799384931 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.793858242 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792635439 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.794131419 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.796579853 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.79290184 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.788896748 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.792645072 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.793066418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798097037 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.793325718 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.793742656 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794529341 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.790623428 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.794389793 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796662145 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79312907 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.79450784 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.791092449 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.793575668 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794210445 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792926984 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.789404503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.792470742 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.791772678 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.796499491 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.799371805 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.79021738 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794477732 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.792567152 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.793562105 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793623595 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793394825 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.791055719 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.790303759 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.792816688 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793297985 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.79370465 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.796659696 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.793901165 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.795962263 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.794922431 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794904321 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796909662 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.804338311 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.801709558 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.790345977 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.793458245 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.794447735 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.796745383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794260166 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.794816103 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.795548435 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.79684207 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.795276091 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.796036031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.79544201 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.798012019 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811370563 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.795599997 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794098723 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.796307725 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798946291 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.795091784 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.792117016 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.7960954 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.798268154 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.799415682 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.805312649 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.795446735 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802040148 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79658745 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.797651225 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.800129868 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.800161455 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.804476397 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.798844213 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796684267 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.797006947 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.800561771 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.812863797 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796057196 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807095691 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.827695354 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.795566999 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.796849041 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.797410115 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795470069 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.796524157 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.797843167 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.796871541 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.796494179 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797283973 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.797217998 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.797293781 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802251035 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.797715728 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.796783521 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.795837768 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.796784751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.798656891 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.793905845 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.797934222 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.797030138 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.798103543 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.797736155 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.797440862 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.797243604 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809910885 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.808444109 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.79697449 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.798510526 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.795102355 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.801728183 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.801091185 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808290339 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.806536387 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.798588703 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.797896673 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.799441007 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799638044 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.795375438 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.797159156 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.800914958 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797742158 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.795629753 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.811891517 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807984512 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.803236405 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.79873369 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798858512 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.798906932 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800405917 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799276595 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7993934 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.799480888 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.798884626 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803429241 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.799079659 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.798572613 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.801847537 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.807574441 seconds)
  done (took 1065.917444656 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797296141 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796249063 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796103351 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798419302 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796555052 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797163167 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797031174 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796558066 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.797273002 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796224841 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.796941498 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798434203 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796883724 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797600526 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796508591 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796741063 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797878207 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796878763 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796598153 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797730369 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.795960488 seconds)
  done (took 39.466639086 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.800955414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.798130795 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.798430917 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80104815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797647983 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.801178462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.798586415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799836885 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800909235 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797411707 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.801955799 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800622408 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.798137071 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.798792506 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798356825 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802900293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.801081842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798791652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.801370297 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.799803768 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801047117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.799342497 seconds)
  done (took 41.32659753 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.801633544 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.802423306 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.800571356 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.799203076 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.801768798 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.79842269 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.802832285 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.80421163 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.801965368 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.803377792 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.800971077 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.801685621 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.808347457 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.808547237 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.803054408 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.80149271 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.94378386 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.802139643 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.801420962 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.802303653 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.798793903 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805814252 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.797861083 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.798784569 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.799974625 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.801089741 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.801230816 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.802152923 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.801934052 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.804516541 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.807433951 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.802402564 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.804579065 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.798620943 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.797253976 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.799044498 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.801540302 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.798444145 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.794592231 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.798373031 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.807806626 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.820773688 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.799461209 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.804188834 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.79792185 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.798950275 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.8018022 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.807025108 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.795450987 seconds)
  done (took 90.170863074 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.795455704 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.794720447 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.793139242 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.794761021 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.795374107 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.794082727 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.794442825 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.79553338 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.792652603 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.792547826 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.793057535 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.790942843 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.790056847 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.793855035 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.794333733 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.791137669 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.79006174 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.79023444 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.789289191 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.791459666 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.789151432 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.794825021 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.793192454 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.789435861 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791695923 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788377145 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791909817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.791415664 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.789524092 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.789337669 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.791680017 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.79136852 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.792175971 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.790622304 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788920276 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.79187211 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.792569433 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.790812184 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.791424972 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.789137695 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.791801893 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.792902889 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.792270204 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.793343798 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790301198 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.789681682 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.790200117 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.791135889 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.790026323 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.792649372 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.792195174 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.790416519 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.792026888 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.789688361 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.793104367 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.793298076 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.789987045 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.7906409 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.794098222 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.791995259 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.791117625 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.792776964 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.790932714 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.793000672 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.792833017 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.78986007 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.789708521 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.793191442 seconds)
  done (took 123.569583932 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793214283 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.794181569 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794388967 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794380689 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793208707 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.79461303 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.794284281 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.795119078 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.79441222 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793856547 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79379018 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.793741548 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.79485458 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.794373829 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.793159978 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794024274 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794874877 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794638694 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794418527 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798058437 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.794737486 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795787349 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.795290094 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.794024066 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796501667 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.794872855 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795579657 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.794693919 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795204054 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.795379086 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.798042782 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.795664841 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.79558276 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796169774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.795527007 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.797076322 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.795778477 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794612739 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.795640054 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.794964253 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.796465493 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796459452 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796153705 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.795841648 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795720408 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795934253 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.795738889 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.796493134 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.794760858 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796249126 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.79614697 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796318187 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795073278 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.789549377 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.787910034 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.78830451 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788751827 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787487793 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788831039 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.787636703 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787016078 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.7867911 seconds)
  done (took 112.962347759 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786402003 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786858182 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.783380294 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.784445746 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786201788 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784262262 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786381571 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.785698695 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.785439587 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.785095303 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786449493 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784061499 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784252468 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785553692 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783520403 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784457384 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783453754 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783969912 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786055952 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783554715 seconds)
  done (took 37.415777066 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.782954126 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.786254114 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.784282844 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.783836861 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.786688131 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783778439 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.78720329 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788244426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784321335 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786550498 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786582255 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.787046899 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784073078 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784205014 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.786416583 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.782898716 seconds)
  done (took 30.280778458 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.785079057 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.786307755 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.787353241 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.787345833 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.784347292 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.783912654 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.785358124 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.782416504 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.783628285 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.786096252 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.786630343 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.785859851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.786553546 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.787088263 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.782938413 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.787060681 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.783848502 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.783305279 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.788995853 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.786993369 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.784817495 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.782788044 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.786396672 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.785756039 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.785379875 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.783258392 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.783016842 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.783586752 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.782175996 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.786238379 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.785471593 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.783103423 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.782298023 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.783854806 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.785826398 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.781437018 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.785557093 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.785414304 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.784702451 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.784507574 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.784117555 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.78580892 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.783849331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.783707062 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.781879098 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.785357783 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.783978881 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.781583801 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.779914246 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.780004943 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.783989259 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.784374569 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.784930088 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.782736866 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.783447878 seconds)
  done (took 99.864058518 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782485049 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.782996938 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780188035 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.783621398 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.781313609 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.779297852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.782884572 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783715567 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778955317 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.782380947 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779600059 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.78128997 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779058931 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.781847663 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.779438836 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78164534 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.779108584 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.780266817 seconds)
  done (took 33.773287013 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781480782 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.780539373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.781717703 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781251584 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.779618028 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78721917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779673763 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.781197984 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783553515 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.780072462 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78023389 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.783243182 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781412779 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.781388881 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779084619 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779388205 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.782086946 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78237395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.779937498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778205592 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.783557428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783237421 seconds)
  done (took 40.901255776 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.781305761 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.781847939 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.796803356 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.805256487 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.80345285 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.816745017 seconds)
  done (took 12.499347205 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780696419 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783498519 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.779883166 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783507311 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781563155 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779540591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779111593 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77961976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782691406 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78197819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780855079 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783053407 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782120908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781259657 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783916538 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782064962 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780823416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780498679 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781277305 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782082415 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779529625 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782217485 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779773214 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779174503 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779717288 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780989681 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783293814 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78062932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78021245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783313149 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782683514 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780623169 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781020366 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778733444 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780312826 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780634193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778907888 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782010425 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781599999 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778830728 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.780466548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781667628 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78180021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779453129 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780839779 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777125655 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776926212 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77784677 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779586738 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780510418 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78079904 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777301055 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779445214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78031505 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781243999 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778727674 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777737504 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776408982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780056253 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780994874 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776856824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779415962 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777817516 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77889845 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780699472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779225105 seconds)
  done (took 119.219977928 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777397731 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.775670772 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777369126 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77751966 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777127205 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776995826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777632692 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776986866 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777371614 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779099787 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780854217 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777205494 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776945775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77820171 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776574244 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779430128 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77773608 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778494742 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777848265 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781302481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777861766 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779024692 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777542992 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776967543 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777709527 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780504288 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780098172 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778585243 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776777793 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777360835 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778019027 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77730981 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780314138 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.776600516 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776450791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777727373 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77864138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779606636 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77746116 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779463786 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777684097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780013832 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778682918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779885899 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777865286 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777769378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778378281 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778288548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778085295 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77872247 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776590173 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778357517 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777881996 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777168002 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778569562 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777064452 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778731383 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777077273 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777746573 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780051584 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7787725 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778371305 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78013218 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777818277 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777644944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777885235 seconds)
  done (took 119.070044119 seconds)
done (took 2472.475505765 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.804435242 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.870991837 seconds)
  done (took 15.385036232 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.940504414 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.892512337 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.775579684 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.817527181 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.774560734 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.789446329 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.793311795 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.77648324 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.775919089 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.777394392 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.775694697 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.963264443 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.773619677 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.776800999 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.776382913 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.868903684 seconds)
  done (took 50.757605373 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.779568408 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.780605971 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.790846939 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.781747501 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.780149746 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.792871012 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.812660968 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.784233037 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.821340215 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.792637138 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.856832391 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.790137627 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.779198668 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.833261697 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.793539348 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.792922705 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.872490461 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.854684763 seconds)
  done (took 34.197038146 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.856480872 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.782065361 seconds)
  done (took 10.352200421 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.785976738 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.8038281 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.78456535 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.799952062 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.806204419 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.772212677 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.787940898 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.788614525 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.806268354 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.783783395 seconds)
  done (took 69.630469644 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.785764798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.78034131 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.781076223 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.778085024 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.770769889 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.777239553 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.780297831 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.7777377 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.467184985 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.816104719 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.78523621 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.783913811 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.779574988 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.780784328 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.777254204 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.803339986 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.971415601 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.776617261 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.778584111 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.78494978 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.780674885 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.844494373 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.792978716 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.781357964 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.810681205 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.4657967 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.789185612 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.787469548 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.92022776 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.778877035 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.780185669 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.779476526 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.782996676 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.153768887 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.04765086 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.780868174 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.788628911 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.789335594 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.778170767 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.892523544 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.781300785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.787111606 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.672482722 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.025626532 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.894130659 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.822320694 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.152971558 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.784005007 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.78112608 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.810821861 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.78192076 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.781028542 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.794037147 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.288382408 seconds)
  done (took 127.732492297 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.776538717 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.040345583 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.933057889 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.774799186 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068065658 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984714456 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.776999653 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82558772 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.779096408 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009945747 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999754925 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88674825 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778103538 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.777868594 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.774129971 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.775842381 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.939251465 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.852466068 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.779926967 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.774873362 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809653273 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022764984 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.91114552 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.777613725 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.800253758 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.989631091 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.915061415 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.886448881 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.223252342 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.774664154 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.842759613 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.779095281 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.779335724 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.775847166 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935718338 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.875938631 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86825104 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.779322645 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777640432 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777862883 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.452439665 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979569664 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.87771585 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.925792515 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023972822 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.985022093 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.567513063 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.777102903 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.513795964 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941101584 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.011779261 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.009655064 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.904482755 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.781076694 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.298965142 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.774749831 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777128276 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012541472 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005564776 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.881922762 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780099968 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.777532559 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.775315645 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.024354238 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.779519797 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.874336331 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77869975 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.777685933 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.875089575 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88295051 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.010110741 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991203792 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.812842396 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.097630985 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.260028783 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.026243545 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.848708433 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01494377 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.779824516 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.77619975 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863974914 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.730366986 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.97699144 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030805474 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036450678 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818706653 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.499502069 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.778503745 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.007926452 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.003978042 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.082880949 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0217385 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.931599794 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.065010504 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.77813035 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.780048832 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.013365373 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.917163029 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782856431 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.141759523 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015942313 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.354498622 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.808678054 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122863555 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915093084 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.781282097 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.422699175 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.779716855 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006224712 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.823364396 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.781877317 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778817788 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.00014793 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.853312537 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.77968422 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.40579124 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.845426714 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.78253599 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016107313 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.781824194 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048030106 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783345799 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020035385 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.193800008 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.81679623 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.011425243 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.020744555 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.781397439 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.029241662 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02863446 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.90130369 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.002992993 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.405541736 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.782791396 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070795283 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.783265005 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.77972532 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.954632862 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.782273059 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.958442178 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.782352296 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114484853 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807177768 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935805721 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782637797 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041058237 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.820736804 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.834944341 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.783030448 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91579767 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784092616 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.772371067 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.937304592 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782722074 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.780292316 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.485207214 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.781994484 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.939823682 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.017467477 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809313596 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859004212 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.450488494 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.781004032 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869129343 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809500884 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.130453549 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.783100594 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.996867602 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.785508679 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.315985885 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.783230816 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.027849937 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.967798282 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.78739447 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.781335409 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.689030654 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.780871471 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.78235566 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.946362183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.200820649 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.782628392 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988289429 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784790254 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924473615 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.787266671 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.865816417 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.137591914 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.782713307 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.783260953 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.783278671 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.782555033 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78551677 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050812868 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.817617331 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.317072176 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.924731176 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056061742 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.104461284 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.036323853 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.832092119 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787326007 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034342862 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.787568368 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.850163804 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.785921162 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.808344328 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020569779 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787058525 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.9982025 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.068533905 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.708955083 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.835274649 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.786750793 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.785528985 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.729065594 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.944025942 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878665466 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.786730769 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.78415322 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.911335676 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.917807967 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001202479 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.785521277 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.116849477 seconds)
  done (took 884.914726704 seconds)
done (took 1194.680174111 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.785914903 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.785930023 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.771861046 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.781223837 seconds)
  done (took 28.846520522 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.789612096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.786174522 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.788582687 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.786854969 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.787824551 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.786841817 seconds)
  done (took 12.441384622 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.80053465 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.780030285 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.784327637 seconds)
  done (took 21.082221427 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.856067845 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.200651028 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.89922977 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.228875292 seconds)
  done (took 9.902261836 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.790010513 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.788853092 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.789103874 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.789954928 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.78871371 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.790090449 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.789845306 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.790176819 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.790685829 seconds)
  done (took 17.824219802 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.130528019 seconds)
done (took 95.947054358 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.030026443 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.250983361 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.783709316 seconds)
    (4/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.975797215 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.959669667 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.57129836 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.72979328 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.167654308 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.872549263 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.10962639 seconds)
    (11/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.988839865 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.084820234 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.92385843 seconds)
    (14/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.786037231 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.830330824 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.62542166 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.860170121 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.88022734 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.885980324 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.98685752 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.86714092 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.29819953 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.809312774 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.535176544 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.964776376 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.181609883 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.166087944 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.785598004 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.754235583 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.823228258 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.892114226 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.085380363 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.999756639 seconds)
    (34/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.899434902 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.864595865 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.808559067 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.857669671 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.406805651 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.845122995 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.846427378 seconds)
    (41/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.949288991 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.188943179 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.863864813 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.988372673 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.170204087 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.786776267 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.73662908 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.903005488 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.035986962 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.693185699 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.359639949 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 5.51689277 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.771470456 seconds)
    (54/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.507439297 seconds)
    (55/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.065505477 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.845095022 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.346007856 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.384375225 seconds)
    (59/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.883005642 seconds)
    (60/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.765300826 seconds)
    (61/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.876282964 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.458680185 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.976921393 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.193733105 seconds)
    (65/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.927568954 seconds)
    (66/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.30424885 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.820769341 seconds)
    (68/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.908680544 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.80433848 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.78657807 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.775708959 seconds)
    (72/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.875742429 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.33809624 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.771848119 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.131490653 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.958507944 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.082012497 seconds)
    (78/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.923258552 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.897388784 seconds)
    (80/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.588856981 seconds)
    (81/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.901005482 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.787453177 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.799711383 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.476430212 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.771145316 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.794754966 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.080912345 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.794216535 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.806769481 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.675646413 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.715780476 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.953777356 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.936893037 seconds)
    (94/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.854980794 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.085200872 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.776005751 seconds)
    (97/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.872340871 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.871898773 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.87087582 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.982507386 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.962967092 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.848814976 seconds)
    (103/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.279614481 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.879240448 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.856278658 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.950364692 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.858173526 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.031238748 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.190682718 seconds)
    (110/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.873392714 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.785604941 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.817264917 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.710608487 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.787603685 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.773247781 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.524944063 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.36130937 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.898307285 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.920282331 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.147101723 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.477351235 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.79720834 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 6.791774521 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.77725075 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.903857302 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.265600572 seconds)
    (127/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.152588542 seconds)
    (128/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.897125369 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.039708724 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.243821365 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.812696757 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.788053631 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.856617636 seconds)
    (134/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.049315568 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.061574301 seconds)
    (136/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.981114656 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.777271257 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.198329095 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.008236484 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.052723896 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.053470935 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.262032728 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.775960543 seconds)
    (144/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.99602003 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.903498562 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.914781192 seconds)
    (147/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.790527232 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.028431632 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.868758979 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.790143972 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.863824779 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.912633018 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.008718874 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.271804336 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.821461192 seconds)
    (156/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.131850802 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.092228239 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.360917323 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.818604345 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.7906995 seconds)
    (161/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.439384955 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.91723719 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.607805127 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.978132838 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.815161427 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.119017167 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.794313611 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.06455004 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.1711136 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.428112489 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.05129942 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.949764028 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.811026261 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.126384275 seconds)
    (175/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.804370318 seconds)
    (176/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.875816767 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.02917847 seconds)
    (178/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.881210486 seconds)
    (179/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.800007173 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.293639457 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.917747609 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.791788585 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.533652034 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.899416315 seconds)
    (185/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.097417948 seconds)
    (186/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.190020827 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.910563608 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.792599652 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.820332084 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.86146825 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.784077318 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.906149651 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.776869313 seconds)
    (194/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.189577698 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.827521079 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.809931477 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.891848446 seconds)
    (198/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.003657489 seconds)
    (199/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.90305313 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.004668508 seconds)
    (201/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.610788609 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.495753447 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.842656985 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.883723166 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.799925248 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.144522499 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.067304143 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.779470447 seconds)
    (209/309) benchmarking ("sort", Float64, false)...
    done (took 5.536939431 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.585397316 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.860764979 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.890241442 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.154783525 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.801726282 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.820812454 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.912627518 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.00986532 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.592937606 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.096821715 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.044003469 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.989643821 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.285256639 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.829457399 seconds)
    (224/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255134772 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.017799504 seconds)
    (226/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.805661812 seconds)
    (227/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.937195651 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.926022882 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.907902135 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00027949 seconds)
    (231/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.934232416 seconds)
    (232/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.33875019 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.879771747 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.912018288 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.125109804 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.79765212 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.865614189 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.265992461 seconds)
    (239/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.079536037 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.078137672 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.898089181 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.165995065 seconds)
    (243/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.926498135 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.680974787 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.14283524 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.782960862 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.889270787 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.083594717 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.825778155 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.780038075 seconds)
    (251/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.145336805 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.549593274 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.983811619 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.847018346 seconds)
    (255/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.574669175 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.228132041 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.782468936 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122093512 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.797011638 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.90398193 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.88361966 seconds)
    (262/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.104822092 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.822642725 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.902192551 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.175434511 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.164647105 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.390697209 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.955733906 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.950979906 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.889471199 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.175594523 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.956249283 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.782986247 seconds)
    (274/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.952458486 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.164977259 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.71637903 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.494023604 seconds)
    (278/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.815406161 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.429292709 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.69288059 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.613196924 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.915426833 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.938742437 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.878588507 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.10157955 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.885141972 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.895130463 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.942622765 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.40092273 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.535614769 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.104274706 seconds)
    (292/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.085239823 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.798207891 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.263803854 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.802485197 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.877725948 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.126186875 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 4.813947354 seconds)
    (299/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.82020299 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.796684056 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 3.225851143 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.948583208 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.467909439 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.19353031 seconds)
    (305/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.994473738 seconds)
    (306/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.82272636 seconds)
    (307/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.966639643 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.133871466 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.994488324 seconds)
  done (took 993.4636653 seconds)
done (took 995.24816571 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.830795034 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829841324 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.808973544 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.829357277 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.925449425 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.837554127 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.81829842 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.810392118 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.856409371 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.858551259 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.813773667 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.836076888 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.815501171 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.814644004 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.809240213 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82905853 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.120948148 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.842510377 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.831132986 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.818128738 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.831354012 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.813305605 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.859144405 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.836337687 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.813532407 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.811360185 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.819950151 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.834714684 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.927825865 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.819087045 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.81332152 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.827435753 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.121703835 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.835639796 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.804780532 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.834911802 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.826281493 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.819305805 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.81340733 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.849376816 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.26479804 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.821542424 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.817387984 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.812294871 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.811304171 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.81436672 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.81778566 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.817523446 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829322393 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.830419192 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.259479538 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.837074075 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.819914453 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.812822183 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.821730997 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.817666211 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.81849719 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.832845893 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.836581382 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833527262 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.119783058 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.842929642 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.814582879 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.833691166 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.824641125 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.295602442 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.813178083 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.814826969 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.264532895 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.823058372 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.295991356 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.83139648 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.813017511 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.832686142 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.849545495 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.124099995 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.834588953 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.812358037 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.826019824 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.817041935 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.821868585 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830546868 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.817011446 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.813946718 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832267394 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.840879584 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.822147268 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.81968333 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.821414858 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.837344386 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.825654753 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.82962125 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.815775312 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.808301938 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.823205881 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.819613744 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.822844583 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.822715035 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.81801243 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.824567172 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.26559562 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84155045 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.810309603 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.811489717 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.812814025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.83320701 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.262663591 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.826920699 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.835791169 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.86240377 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.81709436 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.119455299 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.851480451 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836505428 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.82382581 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.818868015 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.809399395 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.119833502 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.29126635 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.841376782 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.815759256 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.818044785 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.836724061 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.81834271 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.811042559 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.127834156 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.843597635 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83439173 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.941399492 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.824492353 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.851990972 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.819379146 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.817236034 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.843338959 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837162451 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.852138414 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.818786199 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.836063284 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.837163213 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.811902303 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.831437749 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.826172041 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.817768888 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.822271777 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.811033884 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.84419124 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83310938 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833974724 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.837766598 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.942357146 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.813890192 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.123209989 seconds)
done (took 285.695686054 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.885754069 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.809223792 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.914743236 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.814485968 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.895392368 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.898347996 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.811628549 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.810759196 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.810725379 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.187779689 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.810698416 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.812337746 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.807757301 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.811523921 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.895420281 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.81390019 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.810770117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.172288905 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.814723709 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.886551312 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.813122448 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812485907 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.814651785 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.187709979 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.81147295 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.81504185 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.885582854 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.813975586 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.152262874 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.811288039 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.807964855 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.153238859 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.907830133 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.83374972 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.825451127 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.822365104 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.897567885 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.818763487 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.896518751 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.8961038 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.916846784 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.856289892 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.812058065 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.814070661 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.818522805 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.8177232 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.812483566 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.843032753 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.812723645 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.813402252 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.152208862 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.825494127 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.813737073 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.813665122 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.812371055 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.847095957 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.812766246 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.817449299 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.906895057 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.817984096 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.878063564 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.188823523 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.189477027 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.816672365 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.816260489 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.814002733 seconds)
  done (took 180.635172879 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.881805086 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.889089971 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.883295359 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.818972462 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.86665413 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.885124229 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.819337783 seconds)
  done (took 14.788007665 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.822271302 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.817835827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.867701284 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868169235 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.817595096 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.9666083 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817988707 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.828193715 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.814730242 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.869357188 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.818726936 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.817580466 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.825818928 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.815823837 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.865776014 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.828099021 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.932739198 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.819094429 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.818977632 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971523997 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.815480182 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.823718482 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.872395698 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.829012715 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.81925553 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.824039177 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.402068898 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820029919 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815966183 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.818325688 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.814941723 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.860515977 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.819088208 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.81504758 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816006592 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.934399684 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.819098991 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815378495 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.817947872 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.816495711 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.818445445 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.818855803 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.818752912 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.815709253 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.818186522 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.843282456 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819002619 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.819345869 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.818835629 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.819603859 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.869419013 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.819295175 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.816169679 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.818584026 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.874523866 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827685909 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.820006963 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.816521044 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.819472487 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81672814 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.973556005 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.867545274 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.819475554 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.868149997 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.820788369 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.820165751 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.82049641 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.820162222 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914894255 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.820596052 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.870592087 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.81920813 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.979623725 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.843650627 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82271472 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.824255873 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.824050077 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820984078 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.820568431 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.827098375 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.818275038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.822150336 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.827571722 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818295858 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81939012 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.933366889 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.92858348 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.818889959 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.833484653 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.827967711 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.818728986 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.873065521 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.822285225 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.818791565 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875730568 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.936730989 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.876516842 seconds)
  done (took 200.898362177 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.826176804 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.829045183 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.823082463 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.839681069 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.822173267 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.821155017 seconds)
  done (took 12.711777777 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.823564462 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.822283387 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.822089206 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.821889327 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.823225612 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.822974944 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.823023713 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823806936 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.8256659 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.821624005 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.823709867 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.824132477 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.824654309 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.823194327 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.823686092 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.822531366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.823435317 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.820458403 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.823141433 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823845992 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.979949655 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.823581276 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823526116 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.824207441 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.826444596 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.821961577 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830397866 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.823150618 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.82406187 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.831829781 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.827202703 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.82430634 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.823727517 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.829309783 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.829209903 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.823757118 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825910014 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.825089031 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.821181147 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.825005269 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.825465106 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824348938 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.823686014 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.826619341 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.825591233 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.829265088 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.828933268 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.831904833 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.826083451 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.826083537 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.82579796 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.824368458 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.825637983 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.825386686 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.826867503 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828915917 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.829962425 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.825843281 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.825918259 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.825889139 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.825035647 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.827418981 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.827261675 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.837552812 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.824058015 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.828126007 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.826641772 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.828930917 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82507637 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.824918337 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.82688098 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.823549278 seconds)
  done (took 134.337020667 seconds)
done (took 545.126931994 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.915575869 seconds)
  done (took 8.668906935 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.936398976 seconds)
  done (took 8.785383122 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.464579912 seconds)
  done (took 10.218717952 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.844254475 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.861265222 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.821853215 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.826927871 seconds)
  done (took 29.117621547 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.913914267 seconds)
  done (took 8.667469333 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.831603614 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.819208146 seconds)
  done (took 15.440858889 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.821591708 seconds)
  done (took 8.575121755 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.926883897 seconds)
  done (took 8.682017782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.834805587 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.856205618 seconds)
  done (took 15.458977568 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.805732021 seconds)
  done (took 8.558959596 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.535207308 seconds)
  done (took 11.295844606 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.826102176 seconds)
  done (took 8.594443219 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.838424648 seconds)
  done (took 8.592227016 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.051255118 seconds)
  done (took 9.804242159 seconds)
done (took 162.213649645 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.822251283 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.817889494 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.819247124 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.819588525 seconds)
  done (took 29.032483013 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.858704932 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.859516542 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.86099924 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.871151651 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.863421937 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.861145008 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.852470927 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.852548934 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.872955481 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.86421137 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.862392093 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.862838081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.859901958 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.852511969 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.863617116 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.863804881 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.876905281 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.862504133 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.853026249 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.863254541 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.828420637 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.8713965 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.864188444 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.827224188 seconds)
  done (took 46.384222205 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.025567844 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.898157925 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.98222214 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.880644532 seconds)
  done (took 9.541940225 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.87974796 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.881700301 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.892938385 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.932665676 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.963129977 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.890258688 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.854819052 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.849897331 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.83599051 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.881453031 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.957209371 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.877292484 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.967019073 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.828256203 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.032948675 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.828249494 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.830306402 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.881848318 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.93402637 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.94550801 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.829181207 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.880486217 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.884431075 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.87665438 seconds)
  done (took 47.172465281 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.827350402 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.836365162 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.834261406 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.827530423 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.82918829 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.828465481 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.834221005 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.830549664 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.850208086 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.83018273 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.827547929 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.828896618 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.82785972 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.82854141 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.827615266 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.840799537 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.843372222 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.829168899 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.832836224 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.834732323 seconds)
  done (took 38.406693959 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.822777408 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.677318897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.174042385 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.078889652 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.823940004 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.826560208 seconds)
  done (took 31.161621991 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.842511672 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.835180222 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.829703781 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.892148539 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.968701409 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.837562725 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.830911752 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.840073636 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875082327 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.895767074 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.848944153 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.856527435 seconds)
  done (took 24.111370208 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.825599898 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.826295676 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.827447931 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.842625105 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.840877344 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.836788311 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.837204583 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.825375078 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.844416904 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.848620846 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.83841563 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.842822408 seconds)
  done (took 43.797591628 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913880345 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.715536395 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.875400164 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550454218 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298797302 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037460666 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352565029 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.165693477 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.829306725 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100397077 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.888236794 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932816289 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083644299 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827541703 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.8506594 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.326483471 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122268069 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070499472 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858532464 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621444578 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877181583 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364215379 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.685665063 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886880615 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043310783 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.962537396 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.091478876 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.782975181 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970284806 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865883071 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839925207 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829376557 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108032031 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215647583 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932502327 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843658153 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504437152 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.546487244 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.823493795 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.604885803 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.638417611 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953185645 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837741402 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832502918 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766237754 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31343767 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20819507 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.835013509 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.540012488 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.832795859 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839399095 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92245106 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.83522252 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.644245381 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785845436 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113416015 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.82841967 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838417732 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401609245 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958978004 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336322601 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.806193699 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.023450873 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.599739048 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231896993 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.985574104 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.836925348 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834454677 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766367896 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.61450925 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887218373 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979712449 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.850452253 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479919435 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133774649 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.926950964 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.192886262 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135158074 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.622814475 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.80730507 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062908116 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.790303118 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7676336 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.696959292 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766932914 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104851126 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870972994 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.492961087 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874156598 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170361636 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.841149365 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849431228 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840427034 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05671472 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.396473494 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833458974 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.656502819 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982602799 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85363454 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165996266 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764692754 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.836435061 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08567027 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.045237471 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062776785 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.350119364 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990399695 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831632263 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.912728119 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.721088808 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880975803 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.109572882 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894153322 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956591573 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893551579 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.795401295 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146707122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864314041 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.007574672 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.948909537 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961687033 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.165851154 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131350523 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900123593 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.834200691 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.835773115 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.700602583 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39028604 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.105543693 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.834902439 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328171496 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88291113 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.838255792 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769187359 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.435584994 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.934710519 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.807194845 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.063611934 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.789633429 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150391268 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76917724 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979377795 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.950053268 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.058486916 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.488814378 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.918908403 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093507942 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319765457 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.08084841 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884783326 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857143671 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958087852 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862266876 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.256804889 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.127383928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.843069816 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.841076107 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.698719536 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.839320609 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83633899 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842982198 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.639521423 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122059497 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8687832 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.844596933 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.730423454 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.85082086 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904816434 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843142352 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848765473 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.381471312 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591760012 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.848697949 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.464634693 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06455858 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849671088 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.628500463 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949407693 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.92130285 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117778779 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901326501 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.773837051 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.549397217 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.533117526 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840442434 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776520659 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841061402 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84937822 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852130005 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.222291283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120416476 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887203502 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.630146499 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.883063136 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852787566 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.84928796 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842058188 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.387913323 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976532542 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337857684 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887894932 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979250923 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.856435377 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77938144 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.853717971 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850432685 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846393761 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.802763672 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894118341 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.626250309 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219324515 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10171934 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.494094734 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860534121 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.661877041 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.90168944 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.868744707 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.693542121 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764610883 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.917379853 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856428773 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.855111729 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.634303722 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.551073791 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414060884 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158394677 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162490024 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289364178 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.319964449 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.148798584 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183205076 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081645158 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.374971833 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909101918 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195283612 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790898931 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930155301 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.497717478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201492581 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85635076 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070719515 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245539908 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.758661148 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867816903 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056897325 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879684853 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.74354217 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806257886 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.05165072 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98413845 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.614876701 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045187514 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181828188 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.5720199 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.963869246 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.844190991 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.537085416 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931020849 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.558722995 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.206986846 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362290957 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.829886851 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336891784 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848427395 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290869864 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201418053 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.138916246 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.967855797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782186406 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.856996002 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.858220954 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.846815286 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.840179343 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.718571097 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.101464906 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860788752 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084946943 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.088846191 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148471953 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.754853756 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.854528246 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846482905 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150837383 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.621306449 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019661635 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.277330962 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.36696201 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851537691 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78241904 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781434729 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.540360345 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.851346056 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.824349016 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075039032 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.036013651 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802957475 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330359858 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088764887 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102362671 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.862132444 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128158548 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12520829 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583586419 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876720698 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.947294991 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.5582626 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.954192767 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.116230642 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082246111 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.650834043 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.079390637 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.90593099 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.675131559 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.848111286 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062765855 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.118082341 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.793516878 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079863141 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.572935489 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.945760856 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161061204 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906611617 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.845876963 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000691885 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.04331313 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859213253 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934115183 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860554246 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.860026602 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.861342211 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896150401 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845116769 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.971449811 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.863876069 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938599041 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990187314 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.377126875 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.857138163 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134661061 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207190178 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183930154 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912011584 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.851822765 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861421239 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785797177 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989390575 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299343568 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123839236 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.981322919 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.148155654 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875835255 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.573804225 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.195550695 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087983925 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124867894 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.746476055 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851030969 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.880230068 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.118052788 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861177178 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.063365405 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083729779 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170655653 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325420805 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.066248374 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2168383 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126814984 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220103421 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848288597 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439804861 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.99465421 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55382013 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.895174067 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.788801506 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118669922 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859711506 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234538538 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.876202209 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.054635422 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.371514926 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651167222 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140542882 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.849418619 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918586721 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136978422 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.247593859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164232004 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927015799 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863647401 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.55963521 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991073987 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.717986907 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.124564966 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854497112 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066293305 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.563561565 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.85903714 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135865048 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162941698 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.851754313 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.726357914 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862970166 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.862638523 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.076716093 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127979122 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106609982 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861383624 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.858482783 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.667097062 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134198178 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913172475 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788944908 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.857223889 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955560142 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104884585 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879697712 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.373460901 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.568018547 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15805308 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.772198466 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877463649 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364664606 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224047211 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189010619 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.395572622 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092280421 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.418624466 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.80903158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157278282 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.85950231 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315579446 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165020419 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.859760713 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.44193608 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892906596 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.131455404 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175566632 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.994328178 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645687322 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.824647232 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079807538 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455065029 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798709301 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855223895 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.917674377 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856676692 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.986410579 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867658793 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.736235166 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759322802 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.602506382 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350222894 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.86374005 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.850295884 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.612577137 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453250613 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890248111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999398717 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863670146 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.569786484 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.148122444 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114158417 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.458668467 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.862926096 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.861914241 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854377636 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784131968 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057465128 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.237661709 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157820812 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.302964473 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.892425867 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.861685301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.073325664 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070315695 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.819706528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995112657 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32493725 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897201328 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.604020402 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.53698557 seconds)
  done (took 1673.893962196 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.867193987 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.914755542 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.880656753 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.900962543 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902870075 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.911115633 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.901407133 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.883377603 seconds)
  done (took 56.953389311 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.860057699 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.057676061 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.870157642 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.863014153 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.869023631 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.862408121 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.027997952 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.881930596 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.872318025 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.874034031 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.862274272 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.869348278 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.171179365 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.883493345 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.86403724 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.842912114 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.867724992 seconds)
  done (took 74.217408994 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.862067293 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.07130973 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.891076321 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.876269533 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.804483022 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.86107917 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.827100448 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.869110349 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.865874718 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.071455902 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.498227228 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.874254004 seconds)
  done (took 90.164554153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.868739019 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.869805151 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.868569756 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.867118682 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.869754682 seconds)
  done (took 11.139205189 seconds)
done (took 2177.758398705 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.111393421 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.094035229 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099915046 seconds)
  done (took 5.985170577 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.011313198 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.062179338 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.177394329 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.183398805 seconds)
  done (took 10.22823499 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.158312341 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.236565927 seconds)
  done (took 6.187393354 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.264390809 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.872341053 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.262250571 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.860210321 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.861327605 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.866251211 seconds)
  done (took 22.386066957 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.866397715 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.870127085 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.868625834 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.870387254 seconds)
  done (took 9.266133965 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.846040436 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.597977701 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.848353989 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.860569723 seconds)
  done (took 20.945878432 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.61739673 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.267198792 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.611130825 seconds)
  done (took 9.288255447 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.410987431 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.762733911 seconds)
  done (took 8.967377469 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.142166461 seconds)
  done (took 3.937133543 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.898325738 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.137062828 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.384457692 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.385964925 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.482971508 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.713112908 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.177461397 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.108076371 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.28403041 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.300793165 seconds)
  done (took 24.672937414 seconds)
done (took 137.167818498 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.245975492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.865181357 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.112998311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.213622246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.08238818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.065878806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.07445473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.195834817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.711897725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.707878795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.211969002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.08272823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.022225193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.096914801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.031780243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.097961031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.083519701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.259413305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.904293847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.102991932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.076511178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.840245692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.05336356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.849414405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.087247409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.014877682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.428621709 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.107409156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.062999033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.435227573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.096461474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.258047082 seconds)
  done (took 171.272996664 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.601035448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.866380923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.863803375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.863852487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.338680003 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.863725655 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.867564728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.86233497 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.97666294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.96887934 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.863652536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.350954358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.869332216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.863178095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.879554924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.869532971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.14780637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.698707786 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.886302072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891508206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89535322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.299649289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.892536068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.346343216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.155693467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.891021743 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.848281258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.883760464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.869843688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.831796843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.872870745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.864075394 seconds)
  done (took 207.83975224 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.866805775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.86667 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.865191732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.868078632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.865784495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864613444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.866754269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.864923362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.546938649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.540195385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.872920845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.868948346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87151479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.864767819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.877607792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.868735197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.873135004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.873110953 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871588242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871789322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.871646035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.687423074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.873297039 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.697177007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.871291213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.870140599 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.865606365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.872658423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.877114424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.875473607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.87531914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.867219394 seconds)
  done (took 220.640491312 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.06564402 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.879710034 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.873938051 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.823388214 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.877808511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.875139986 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.834935065 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.063887207 seconds)
  done (took 19.10324401 seconds)
done (took 620.660492015 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.343715259 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.177644998 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.042496627 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.901304902 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.149162771 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.926208261 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.893631377 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.958019087 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.616632752 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.958627123 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.532315617 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.908288566 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.627488395 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.915406017 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.019735724 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.947785393 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.42946228 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.529962933 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.067953169 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.97067693 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.064464445 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.825890212 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.966301019 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.648643065 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.64392169 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.871970437 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.061528505 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.441999904 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.901084273 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.060533922 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.650016844 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.262088811 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.901341205 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.894047866 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.951841592 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.928177896 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.230252108 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.904121539 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.011738985 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.631936018 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.97550462 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.504616681 seconds)
  done (took 103.046049859 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.867267728 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.863954452 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.863624664 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.866593205 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.864040454 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.865663754 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.864547923 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.863531441 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.869312066 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.865155369 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.866099566 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.867857211 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.863608208 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.864028915 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.866754615 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.867493844 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.86590566 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.868197301 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.866409268 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.865688554 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.86955005 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.867890926 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.878959714 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.864360998 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.866834026 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.869593066 seconds)
  done (took 50.340531258 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.880898491 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.038851788 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.120076542 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.894184988 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.879215902 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.884730367 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.896239087 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.883017939 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.881500297 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.882605627 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.987861298 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.882135542 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.895873404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.121615143 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.891822467 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.878706933 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.879051076 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.878869638 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.04982711 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.891368477 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.896529969 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.880964098 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.896657402 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.891179312 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.882445971 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.878003993 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.883226601 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.329204231 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.888222789 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.986448764 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.919205277 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.898297926 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.301761015 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.130780833 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.927438464 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.888027594 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.879855787 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.989952363 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.883893988 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.879670574 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.895511735 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.881874239 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.124392241 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.3579699 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.89081991 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.881686372 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.340536463 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.995385696 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.918284042 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.892100244 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.125691271 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.894289685 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.886459829 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.88266018 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.917755386 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.892822489 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.881689054 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.222749254 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.889371577 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.898063948 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.885550299 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.882818141 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.054205376 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.888995433 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.0439323 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.890809961 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.88668637 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.882235342 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.12347767 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.895110722 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.371030141 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.890651042 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.882428143 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.991366921 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045781552 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.368252784 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.89097024 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05630943 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.315763688 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.897623081 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.884122202 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.319131637 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.906556794 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.887632333 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.885657297 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.878966367 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.881388464 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.932162075 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.897084243 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.302795807 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.376978311 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.229006343 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.906240417 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.897157978 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.882368292 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.215410416 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.885140454 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.879613185 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.117839646 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.379161228 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.889237763 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.886644124 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.347730133 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.888451532 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.895559154 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.884016965 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.128119314 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.890902876 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.923490721 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.877731665 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.886971627 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.887804428 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.898284613 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.8848517 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.879444561 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.337820021 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.998497626 seconds)
  done (took 233.263206156 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.872682364 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.881963568 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.874172328 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.868090328 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.877573379 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.875563605 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.87263619 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.871688375 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.877121549 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.87545265 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.870079095 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.874246381 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.87292197 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.879630887 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.388331016 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.889318175 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.540468945 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.888948203 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.894108672 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.903632043 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.574518181 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.897970512 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.888044541 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.883086298 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.885327407 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.890119025 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.893616374 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.938467356 seconds)
  done (took 168.40596735 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.898049404 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.080141976 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.921083814 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.938757745 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.91347819 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.899157414 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.922518522 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.917926676 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.904571722 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.892340015 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.89758034 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.95694444 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.906215355 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.034679822 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.927605661 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.933039933 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.008070766 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.905830304 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.898074144 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.893609029 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.9221322 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.896465067 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.963613497 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.023282924 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.912927258 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.016030024 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.904153984 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.89635201 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.898396245 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.010456982 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.917308168 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.960394104 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.931178965 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.914252874 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.024046228 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.022465724 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.010757586 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.932503111 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.905734606 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.905952635 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.900904549 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.88929259 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.020848421 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.920400108 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.900603035 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008960482 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.922121591 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.90523236 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.912745914 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.896902944 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.91341446 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.918197179 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.97077893 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.029600663 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.93106144 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.924278766 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.924043247 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.181193999 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.907421995 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.003075478 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.892478356 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022342962 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.921810093 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.889716528 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.899966334 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.907199844 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.928172724 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.931181312 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.011961414 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.903832542 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.002300636 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.930910592 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.909098587 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.898565265 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.897704064 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014632389 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027187669 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.934689879 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.941456403 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.932581727 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.892572766 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.896538833 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.886049986 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.923883529 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.90494067 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018058538 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.025703348 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.910335813 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.901597582 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.905264069 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.901797794 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.925425333 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.033745033 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.940922364 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.009557197 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.972129783 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.975359866 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.920152923 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.917334691 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.914564875 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.972411826 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.924380715 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.914010403 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.233732052 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975758352 seconds)
  done (took 206.013372702 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.373488956 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.956752242 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.962080333 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.234234212 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.330081465 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.777924301 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.947751798 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.95188975 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.977312054 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.153438327 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.027850575 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.975255937 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.943828714 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.931613538 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.95648153 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.976862963 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.967950733 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.282872026 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.073929865 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.07382942 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.936074042 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.272588959 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.272767897 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.349904593 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.993390349 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.296223089 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.624094351 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.209273703 seconds)
  done (took 62.663824564 seconds)
done (took 825.531956886 seconds)
SAVING RESULT...
DONE!
