cset: moving following pidspec: 17036
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.386437931 seconds)
loading group "string"... done (took 0.578060684 seconds)
loading group "linalg"... done (took 7.258865567 seconds)
loading group "parallel"... done (took 0.157937951 seconds)
loading group "find"... done (took 1.150279727 seconds)
loading group "tuple"... done (took 1.75365329 seconds)
loading group "dates"... done (took 1.237425419 seconds)
loading group "micro"... done (took 0.219765922 seconds)
loading group "io"... done (took 1.11327634 seconds)
loading group "scalar"... done (took 37.183139185 seconds)
loading group "sparse"... done (took 11.555866277 seconds)
loading group "broadcast"... done (took 0.914082726 seconds)
loading group "union"... done (took 12.124006012 seconds)
loading group "simd"... done (took 4.45562169 seconds)
loading group "random"... done (took 8.911807571 seconds)
loading group "problem"... done (took 1.67852615 seconds)
loading group "array"... done (took 20.674392706 seconds)
loading group "misc"... done (took 1.655801324 seconds)
loading group "sort"... done (took 3.281179089 seconds)
loading group "collection"... done (took 17.01174231 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510475813 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121057174 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115324235 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117240978 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143491052 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.110122468 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119982279 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084319151 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.797342816 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145186142 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115229001 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419019312 seconds)
done (took 4.947009921 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170430013 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08040906 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081330264 seconds)
  done (took 1.139570164 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062982837 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119788538 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06557211 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065146293 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064842886 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064346197 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065284545 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064542747 seconds)
  done (took 1.486578876 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070876688 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067187687 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064114477 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066820774 seconds)
  done (took 1.247295913 seconds)
done (took 5.093091401 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.769678998 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198722922 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183582692 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.403198429 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128678054 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156164919 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.624015327 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.268252089 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185072443 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081438494 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106656834 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319953242 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10881076 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6244754 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.072403128 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088836591 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135073606 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.341543399 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.065259367 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080375229 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087161021 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12493372 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.082493114 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07204568 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145737865 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066248616 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132259408 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078178861 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.064617975 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207504093 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17033008 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.643366368 seconds)
  done (took 9.834269364 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094284663 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094247752 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0663249 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120880402 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096411923 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068951052 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069125134 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066113887 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084395253 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125139561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086626062 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099083386 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064407306 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067558895 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082544663 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199326557 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078075931 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079693157 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069309657 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073407171 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.102290648 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079693356 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076229463 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075485534 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12837517 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.176491922 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09665814 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098270675 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066564955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077034072 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112939367 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125276694 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066778897 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064746809 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120969533 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091853313 seconds)
  done (took 4.354108329 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.976329014 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140304007 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.087460829 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131706038 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063323359 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106168331 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063548732 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079034026 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204814084 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.334689835 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577753725 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108865559 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100642405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065716743 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.066398431 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06484462 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.451321522 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.093143196 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104550789 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079249535 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068266391 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.066822969 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.348046425 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066017264 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062159619 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066125148 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.055664877 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122084048 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066507708 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.933439816 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125418519 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065517839 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099316332 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164254026 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086853917 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138914253 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066531345 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.188087384 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151002638 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.068918374 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110839608 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064431515 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082394819 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102009873 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110613839 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064405645 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065460955 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161685495 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063414421 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077072541 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.59355863 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15186923 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075055304 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062776118 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248618732 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086971593 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067285976 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063583724 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.149042281 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128081277 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065739805 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064591513 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065730569 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067419112 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35593788 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.064564843 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.874143653 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068672726 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074111341 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067674465 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067804143 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071074305 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070992172 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085658259 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064864833 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073167317 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064314644 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064529882 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065226743 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081741375 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.372272118 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065356086 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06691307 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063074034 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063426782 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087741445 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065031682 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063875213 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09416499 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098861572 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062887177 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062446299 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066505485 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064202114 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10432112 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.064572133 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08155677 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067181866 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111031665 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064378309 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.157336385 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066601652 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094344312 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067890867 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097319341 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078672521 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06640464 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.41186153 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064026511 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063626575 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066865124 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063554866 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.065911291 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.064524217 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077077091 seconds)
  done (took 20.381513747 seconds)
done (took 36.522868655 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.230759007 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.072176008 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.072117357 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078186091 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.071957119 seconds)
  done (took 1.589051689 seconds)
done (took 2.629744835 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118902262 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097519314 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062794656 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095834469 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063152391 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099965753 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099248232 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080142383 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09813467 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063010451 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095584747 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.062778289 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06243708 seconds)
  done (took 2.163232378 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081973188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08281184 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069407456 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081511799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062000767 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08180709 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080253712 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087184996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08038439 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071807449 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062475335 seconds)
  done (took 1.879037951 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081175523 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082801438 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068508419 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081836691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062604897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081213183 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080070028 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084780899 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080915108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073338544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062088913 seconds)
  done (took 1.876029554 seconds)
done (took 6.948908497 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076046808 seconds)
  done (took 1.104812802 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582919892 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.103047536 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079465094 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109026644 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187310348 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115481379 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.265358458 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08421399 seconds)
  done (took 8.735855464 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100435579 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06714122 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070722762 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069355595 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068018396 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070426149 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070111461 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069448829 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070497062 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069290707 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066797884 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066800577 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067226275 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067521151 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070121488 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067165271 seconds)
  done (took 2.237247635 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090839352 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089431572 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071209667 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072793958 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070715504 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069938438 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072574955 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071499853 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069431206 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070919327 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072941112 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071979275 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069891189 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062389444 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072167774 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073568135 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069080755 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071960028 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073039716 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073999288 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072880823 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062554222 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070081981 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072706313 seconds)
  done (took 2.875213648 seconds)
done (took 15.98931547 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112399091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069880603 seconds)
  done (took 1.220035566 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078836721 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080587739 seconds)
  done (took 1.205541364 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080347534 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063619195 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08731662 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075636774 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064097373 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063461564 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085578609 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063815055 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064145831 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063530909 seconds)
  done (took 1.757202984 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066331664 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075074196 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068770088 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079031017 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071183296 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062343037 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06981779 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065743168 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075322541 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060872263 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069716833 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08060273 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068833283 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082591673 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069744903 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066522292 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068356561 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065705533 seconds)
  done (took 2.314562358 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063019683 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06469374 seconds)
  done (took 1.177586657 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065344185 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061607456 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064838553 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064597178 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062077795 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060956735 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061578896 seconds)
  done (took 1.488978987 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.376984157 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111636973 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305146669 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069246731 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079358726 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252760479 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06390542 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068536444 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068900787 seconds)
  done (took 2.488128043 seconds)
done (took 12.70112025 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07909802 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084948499 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094255625 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368828341 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08998885 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064839752 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112387694 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182732843 seconds)
done (took 2.135519156 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211312435 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.623736941 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.396446945 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.201846641 seconds)
  done (took 2.27633509 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33567295 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086550168 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057235315 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065884274 seconds)
  done (took 1.609458329 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064930362 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068050507 seconds)
  done (took 1.192053791 seconds)
done (took 6.347616745 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065569788 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084415249 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064511652 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063475506 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06453718 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061944526 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061934157 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064908693 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064716393 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06500926 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066134211 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064930538 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064118935 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062343278 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062490033 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06463952 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061995109 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062382361 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061962932 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064958886 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062148666 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062907613 seconds)
    (23/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065072544 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062841835 seconds)
  done (took 2.645143793 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083126147 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064230274 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070407761 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069223197 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067461003 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069291764 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070174669 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063894016 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069314027 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066432885 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067252452 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067158056 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066648302 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068001082 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066725547 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06785177 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069974552 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064252783 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066955746 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067906521 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06930179 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064243973 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067348639 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069681569 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067155696 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068905148 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066789639 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064148898 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068991887 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06724012 seconds)
  done (took 3.109868126 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068104467 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061379913 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062641406 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069411518 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062671144 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062865767 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06219891 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062457478 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062600492 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062218475 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063085727 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062025814 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062386778 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062978066 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062275885 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06634326 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07768246 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062700454 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062089561 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062612174 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06548139 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061980936 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062609219 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061656493 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062383355 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061811621 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062669913 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062299486 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062930101 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062375414 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065470605 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066144732 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062373319 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0690714 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066181334 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061733646 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066118865 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062085456 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062968845 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06203108 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062071415 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062029913 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062149175 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069126324 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062671903 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064026036 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062658775 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06352037 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062541675 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06425004 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06119371 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061889558 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.165488401 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063542628 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0657765 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061752579 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062454745 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061154438 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063033014 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061522434 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06137986 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06139615 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064402572 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062373688 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076530058 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068124984 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062025848 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063126917 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062287072 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064019571 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064147134 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075811966 seconds)
  done (took 5.769917077 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087436333 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084899692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063351551 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063333174 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060144764 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062459583 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067658943 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062015077 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06399087 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080329665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062371457 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063390513 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063673441 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065120944 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062690805 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063662588 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070324188 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060289947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062267876 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065927038 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062483258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067931543 seconds)
  done (took 2.546552999 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152506626 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068272166 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102891441 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073280699 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069146772 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073884325 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067694278 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068633204 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067978659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065667777 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065972034 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068178057 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067697694 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066088277 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065688236 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066068927 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068520295 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06572467 seconds)
  done (took 2.419988003 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074843356 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064486777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08440527 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064221014 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064325482 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06680398 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069030253 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072625211 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066496709 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06493895 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07204194 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066313051 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066937884 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064374604 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066811742 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06401659 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06659746 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064692961 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072217853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06829925 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068175331 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072056871 seconds)
  done (took 2.579295311 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078387709 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066927816 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080118792 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066404409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059883007 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062505796 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068308004 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064041036 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0684686 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066300207 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06396021 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063191903 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066753806 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063965988 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066276375 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064070895 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065683371 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063844885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066243464 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059633927 seconds)
  done (took 2.401857109 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083967733 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065804427 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066092161 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072838361 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065492452 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065296053 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07292834 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065794743 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065679977 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086150426 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065994573 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065530145 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072969667 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069992154 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065227252 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072263901 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07247616 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072613571 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065196273 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065345784 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085988926 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065620298 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072412514 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065301779 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065513785 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065699863 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065452705 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070340361 seconds)
  done (took 3.032435197 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065315939 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064954193 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062399033 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062465623 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062165785 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06241424 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061867085 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061931879 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064515824 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061346277 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064402882 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064423956 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064332961 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064298451 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064305946 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064313234 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064927802 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062358583 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062210673 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062114247 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064547772 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064858406 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06486706 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062133155 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062034611 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064677723 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062094642 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062129302 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064406058 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061569921 seconds)
  done (took 2.981602107 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072762422 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071232481 seconds)
  done (took 1.226554544 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061280998 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078040152 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061515633 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069071028 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067869274 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064976243 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071893114 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067322488 seconds)
  done (took 1.620700755 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079933942 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075481348 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066281835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077441519 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075965314 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081327938 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131526742 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065116056 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07147785 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062545304 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078075234 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064252745 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071215368 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065315547 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070632002 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070522178 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06279776 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070591863 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066130877 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063407664 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065690682 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0730011 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066963643 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059762411 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06620907 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086571018 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075251238 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063622545 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06720361 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.071907589 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070170051 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058443622 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064248053 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064406081 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062610803 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073761147 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078706812 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066954338 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.072568773 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065248729 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073307029 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05959278 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06933966 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070838147 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0753894 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064703084 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064958216 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059741537 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062588352 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06659752 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059217499 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06707041 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059378958 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07199756 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068346231 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075124939 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063579015 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065918443 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067067589 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067788137 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071571215 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066585588 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066841501 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063588813 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074490687 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068971376 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072062672 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059466226 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058311508 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061908289 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07331544 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086513911 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070364239 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065047194 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064974863 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06213608 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067915436 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065857717 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069927856 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.070510545 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064408148 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069281081 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071388588 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064809886 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066524843 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071469007 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062407129 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066448475 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062627817 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080380774 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063587846 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062529173 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062689566 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074157679 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067734231 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064329021 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062652374 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071364878 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05858706 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064832674 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06496884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065110058 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074970075 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069062952 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068974083 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072835918 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072088977 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064919964 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067468939 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061781324 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065412881 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063040652 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071545196 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058810461 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0667503 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064857965 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064413547 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072190909 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062138476 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063979276 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071143971 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.18717951 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06439184 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063167353 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068402806 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065026217 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0680521 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072630326 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06391145 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060687367 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060006244 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068902923 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065122724 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068621776 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069290445 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067174116 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059372238 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062732657 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069697732 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073183503 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065032693 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066370963 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071265714 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066595666 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064388872 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071459893 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067852123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063802281 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070160387 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065601496 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060021561 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067703708 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06813855 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063314119 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068484204 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06815881 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06751143 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065722588 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063107757 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07162429 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065186725 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063834181 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065408932 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064497044 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.074836922 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06656204 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060252721 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062229688 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072378819 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061862855 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063899454 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064104042 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066850553 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066327586 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06257 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063892659 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067448741 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073828842 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067999219 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065687948 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070128878 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076319187 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064793056 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067664209 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063768116 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066140158 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065286295 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073217644 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.06991265 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069448451 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06631774 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061005256 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069136487 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071338652 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063757225 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061787095 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062972605 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068063142 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070501436 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067801751 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064982188 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063283174 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065025256 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067334347 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066998827 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06394797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063148343 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070434624 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062661377 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070716373 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065319202 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074861208 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068321233 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059839723 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067271093 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062712134 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07108631 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060176091 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063157626 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064461996 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065660579 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063342987 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066733908 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059049339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071676164 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071527172 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064772694 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063118597 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064099133 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070933443 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066050429 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067911787 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067769744 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070205207 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074636043 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063349608 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067639049 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073951992 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063723207 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058402469 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069380468 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062820303 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06288059 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06287638 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062993825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066732611 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071630298 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070694581 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.178937802 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067996335 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063914999 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065473795 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061222885 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069892981 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068163861 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065813962 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071659979 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06635157 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06544186 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.06832735 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064671713 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065962737 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066138405 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067863026 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064838243 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065668557 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064711089 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067140432 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064227759 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062876996 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066789114 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06450927 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065416536 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070158613 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064771758 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065153597 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067286464 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06511458 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065244711 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06511696 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064771929 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067598624 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065777706 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065389868 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067913363 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059772552 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072488295 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064621417 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071995327 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064694112 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061321128 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071599051 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067489977 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070300814 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065620215 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065793855 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06631251 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064696601 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067638881 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071156027 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062702907 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075570023 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072314014 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065451104 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06764011 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064670227 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066395814 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064325939 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066204324 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065573209 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065913151 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06396127 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069255961 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067535124 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065341305 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066646431 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06506964 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065477319 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066009923 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058988586 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064280396 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064078188 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06485798 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073811125 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064970905 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064960446 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063772755 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065471242 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064200359 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061709339 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072047646 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07289219 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064922958 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071281418 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064438428 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066515186 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07495645 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058887885 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063106634 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062949188 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062673334 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071614594 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065148328 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073328369 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064905755 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063892378 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06144926 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06481972 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063106273 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059116185 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062182309 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06779714 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063469052 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063354698 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064134879 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066611498 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065347571 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072930693 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063716953 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064965704 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064116815 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061753657 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063809599 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063403066 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066930273 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064634534 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062066975 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061484783 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063865541 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065229163 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065377933 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065996955 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06549455 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070736375 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064328387 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067396776 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067321712 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059574293 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.190465662 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066410613 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064740281 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065579388 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068779418 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069640391 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0663656 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074473246 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064598366 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065745506 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064861289 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06308928 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064193148 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064588449 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064282383 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06332208 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066215345 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073002406 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063610377 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068659618 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065618126 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065116034 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070990441 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066095123 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068513781 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07098049 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065156018 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067138238 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072650996 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068638675 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067982541 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065844477 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066638531 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070400252 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06411212 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071788942 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065613092 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065896134 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066977674 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062872717 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065250429 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063741765 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064430446 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071128111 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065481291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063843535 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063996363 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063045399 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06612947 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067679303 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072198526 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067836674 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06793773 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059916356 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061955865 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065461604 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063440338 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065996 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067503762 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069871961 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066844372 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065788998 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064372244 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073660328 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07084647 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068769904 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063033378 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06833153 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066200487 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06727993 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066196799 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064321528 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065420417 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068091286 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066150025 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064057872 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070824876 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068354128 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06520187 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065756508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06560211 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064535764 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059388796 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064615705 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066504373 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069025956 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066293794 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064151744 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074138635 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06263152 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064515402 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067231515 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063844212 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069247802 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.05952746 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066323127 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065073843 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065076299 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059124423 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063529638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062651111 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067127159 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06365204 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059763613 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075478003 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073340909 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067561312 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06365404 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063430444 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059574398 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060585644 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063806855 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065145511 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066428369 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074584442 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063461852 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063752545 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060143593 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06421826 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067399522 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067664492 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061904833 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059683851 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06320914 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067175925 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069634145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063325431 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063994118 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067123792 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066283715 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.186893921 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067842977 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06264922 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070233163 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077165312 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065513797 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066625547 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071152213 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07295307 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065355252 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060201479 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065586738 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067443458 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065151633 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064934936 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065600219 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079599309 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068008298 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065283152 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064185005 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06718437 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064910261 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072823296 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065608346 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06510046 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069382322 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066929187 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072700909 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068260562 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072100078 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067519478 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067521412 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06397454 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066032781 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062612002 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063620643 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065691365 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065567665 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069189396 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071925203 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063823322 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076237615 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074410848 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06685474 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062075492 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064566339 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064368357 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060475171 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065546995 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063081878 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063409944 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063640237 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063414524 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066053748 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069446422 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065901693 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065640688 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064843947 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059307541 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.066894846 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067489242 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065159052 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062485399 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0644112 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065855918 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069095858 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068851376 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062293303 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066125081 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065613899 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066243928 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060588433 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070711625 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063338326 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066232583 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064119623 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064610088 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064646182 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067474406 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069026644 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065572096 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066711552 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067504295 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065907885 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06148737 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061741325 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069534745 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062432813 seconds)
  done (took 41.303084153 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098395742 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061803398 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060485684 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06034644 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071112046 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061485426 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060351511 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061554827 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061367477 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063062949 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060169126 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060333399 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06819617 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075288208 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071511383 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065245916 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060278637 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06131788 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060872785 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061237026 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068144076 seconds)
  done (took 2.565376396 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072128414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075789579 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074202222 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080000203 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069165728 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0688503 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073592562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06876542 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07640817 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070762492 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076567812 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068478477 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070472827 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070200604 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070441962 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069080029 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0762909 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069038073 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06855834 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073178205 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06867095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072884821 seconds)
  done (took 2.75309479 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066218417 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064352405 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065896205 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060327801 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064606303 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060100113 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067567806 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062044752 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06716631 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063491851 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06344008 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06381959 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066374325 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060410699 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065191623 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062127764 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104456685 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067020903 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064631018 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065239182 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06036714 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066083852 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05979063 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060217873 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063676189 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067490314 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064831023 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063196465 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063674589 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063054222 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063576705 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061849847 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065492986 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06484764 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063371034 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062859517 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063773948 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063299933 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059428919 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061812234 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064679176 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.059918695 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064185442 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065392572 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062128813 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061355781 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06520166 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063443638 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058902103 seconds)
  done (took 4.32296344 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07699447 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107173168 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065256603 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088897467 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077568018 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070040385 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068095787 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088350652 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061785341 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062225084 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078804174 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076351346 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063744867 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067851516 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070103781 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063661437 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065006837 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062519934 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068411403 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062989277 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067098328 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069921607 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077214725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075727052 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067407399 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062220031 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063406126 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068135867 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074888895 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067835467 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068287937 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068799084 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07770165 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065116565 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063102221 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065371203 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078911814 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06392717 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066236848 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061404867 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06582945 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068103137 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069986854 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079237569 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0642752 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068710071 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063586305 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061293298 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075586351 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066027233 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071123631 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076609959 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067293896 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063572713 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067852991 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077657962 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063703923 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061848078 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066482237 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074456236 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061220469 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066899094 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076022002 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065367691 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070206319 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.0761011 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068355296 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066958058 seconds)
  done (took 6.050955757 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073606369 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092396211 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080810706 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080763538 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073311203 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073734078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072964417 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073293568 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073115293 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077533012 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073376188 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11275266 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069221323 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075644675 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073348874 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073437331 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073173435 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073512003 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073263136 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073288585 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073211782 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080173946 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0732487 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080728772 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076999053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068909304 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072621211 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072876214 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080321578 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073117624 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077058887 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07258009 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080915029 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080412272 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077254105 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073098375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063110788 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072715325 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07298816 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072830293 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068660041 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080057026 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073091395 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068738619 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072943798 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0727758 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08024174 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077261949 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076050584 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077576631 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073290655 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08033126 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073106265 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072998144 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08041648 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083630276 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080322556 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081184839 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074018285 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080378559 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080247358 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083468951 seconds)
  done (took 5.916577877 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080580726 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072803014 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080303677 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059598877 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062096634 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069405456 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062880786 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062877449 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072183514 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071812604 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074222441 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070081828 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072247142 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073626319 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069326641 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072465601 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069633781 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069318403 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071409041 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069678574 seconds)
  done (took 2.598383208 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072029839 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080770418 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064965931 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069615226 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066790475 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068822562 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066978119 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067352412 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064669922 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067068175 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074179805 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073989654 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065648044 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069570461 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073542936 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069215496 seconds)
  done (took 2.300145833 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081613789 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070906711 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07728957 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064760036 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064674424 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060550202 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064062853 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059284991 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060590666 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076018701 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063592577 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074199013 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063687158 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062351732 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0614285 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069004521 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060313284 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061576386 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063440064 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.075946252 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068057719 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061951524 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067012458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063882474 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066428219 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0679928 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063159933 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063616269 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061163241 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063917433 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066224673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066876327 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060893675 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061671013 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062489606 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061127625 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063249646 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064188198 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068983121 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063603427 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062030554 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065466099 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063435556 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064756378 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060295025 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064177879 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060304784 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066176401 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066094245 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063620236 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065604368 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064606224 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070407873 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066118937 seconds)
  done (took 4.773190869 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077370662 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067443653 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059975243 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062761923 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067557759 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065065543 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067018951 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064855334 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065824048 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06182313 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0649215 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066935524 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065373341 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067271771 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065034792 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067552332 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059565713 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065402921 seconds)
  done (took 2.378731901 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069660144 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064077532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072101611 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063814237 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06391481 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066275811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059854743 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062435973 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062249932 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064220481 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064421778 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066783576 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062431726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066456844 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063833376 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063756517 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066612773 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062668661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06426955 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059820592 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066142827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062584832 seconds)
  done (took 2.609456556 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091814412 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08088192 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137085246 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077279643 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081891748 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069738959 seconds)
  done (took 1.731112999 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088410703 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097987019 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064847364 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067636679 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073311647 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067527694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067001121 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06774975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076119289 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07346067 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067948747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075716898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075967111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075480168 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073473301 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073347485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067914696 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067774722 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064152114 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08100744 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067773915 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075745442 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068187911 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067304019 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067670135 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074568426 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076134447 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073519672 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067524471 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07603701 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073835908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067928506 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07583497 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073880926 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067263213 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075795873 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067648425 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080933738 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073751912 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074846088 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066735055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073162285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076085632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072819173 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076008982 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067919795 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072633956 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067870239 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068265826 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083073845 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07370326 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075844835 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076035844 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076512846 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075809044 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08342299 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073595411 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07527197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07389179 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073685527 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075091379 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07343813 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07485481 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073602167 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073300215 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075291318 seconds)
  done (took 6.038504574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101652956 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064604108 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068046666 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074131395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07536121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067814487 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068510368 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06869606 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067991116 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06475649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105831183 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068775964 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075203456 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075131006 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067748588 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067908762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068205807 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075055948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065056474 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082843608 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068145735 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075104533 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075021736 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075201214 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073696459 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073787465 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068643145 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067843172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068462618 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067695373 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072726587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068120977 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075416249 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064879964 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075435706 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068447702 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067542503 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072082412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067723444 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073066402 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074854639 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081362017 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067977952 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067567083 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073539014 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068218328 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067977241 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064901574 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067915911 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0647541 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073370343 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073330506 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073256794 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075017738 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068653235 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06812333 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067603871 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067524595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068286099 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073456864 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07506385 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067783505 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082770551 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067662175 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068210243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075369456 seconds)
  done (took 5.947878342 seconds)
done (took 122.679890814 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.166906048 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.145507589 seconds)
  done (took 1.504147875 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067837919 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096449698 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074286309 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.122477316 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.064624755 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096349117 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.095243105 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.075446526 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064083009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.063731504 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064167313 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066470698 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.125080518 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.064306766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064417269 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066817375 seconds)
  done (took 2.475201536 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097196998 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158581034 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100154619 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063084032 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097154726 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070676886 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063172585 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.072651512 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068720388 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.063346161 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.070850925 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.068301529 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.062944501 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.068610745 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068662663 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070366673 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.062995685 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.070396324 seconds)
  done (took 2.602262245 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09672729 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088825479 seconds)
  done (took 1.393812981 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156867086 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10405748 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141711043 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340166302 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157356003 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14445203 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140805387 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140869158 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121389379 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135023658 seconds)
  done (took 2.78405929 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095404793 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149584853 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.262275952 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113894987 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070923294 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090381327 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114903953 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076288611 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077797788 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077516367 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077319565 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074255562 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097077596 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070746429 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071979687 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074460324 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100259664 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070664136 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072827836 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073746528 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097423181 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064496275 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070868334 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071134818 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075421307 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075377536 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.063915737 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064043375 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07333982 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072566658 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073904161 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089554386 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075581017 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101918607 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069019053 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103299487 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074247153 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071332686 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072584097 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071121466 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075853128 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075589293 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071134275 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073829506 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064165041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074320815 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064519493 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064171172 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075401741 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065357142 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07489966 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074257621 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102337313 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06537578 seconds)
  done (took 5.690050848 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10124933 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10387811 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069602671 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110167879 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101246179 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071043355 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100445011 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093925578 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10176824 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068293201 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066726821 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069026107 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080278527 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080283609 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111801972 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10464909 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072178414 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069932716 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106030805 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103307049 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066959479 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094798428 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089562388 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101389718 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066176453 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068609026 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066107876 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068655994 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074415317 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076681678 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068738371 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078662975 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081399417 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075958915 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066140557 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066632608 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067141174 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.0773102 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076984491 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076641607 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075438713 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066042708 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066526303 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067442691 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068216162 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06600768 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076776255 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077610162 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0762425 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06750453 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068456746 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066690849 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068341802 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078134158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075527284 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078338078 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077137875 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066543295 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066378923 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071031332 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078103688 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076501877 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07690325 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067796894 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077311552 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066647415 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077575406 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081668092 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066527974 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068561449 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06680578 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067461699 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067705858 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075060044 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075400167 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067622211 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067185383 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066862931 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077839473 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075957169 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066596444 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074933703 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065595406 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066491457 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067982364 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067946187 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07566457 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07798762 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067853736 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066437696 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067699006 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066928178 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065608791 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074681165 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077568203 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07692788 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076041778 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06755295 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076333605 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075753784 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067773009 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076813941 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066274153 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068771572 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068198752 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076274141 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074846052 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076236273 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.189543838 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06786179 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07758175 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07988336 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067607758 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076795877 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078561916 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078168663 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066784335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079694167 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067551729 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077665048 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068416962 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078697642 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067687446 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077452427 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067374634 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067084687 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067974079 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077995836 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071230804 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067199681 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067931643 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069461142 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078768002 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080584861 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069062037 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07654548 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076020913 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068617559 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07761716 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066976861 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077799552 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068818589 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068728626 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065851561 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079538445 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067428789 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067424277 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068164076 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078428918 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066808001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077672662 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076548724 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066658482 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078852525 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078253702 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074829512 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07794121 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069009812 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066987395 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066791818 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06828934 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07602631 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077077493 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069758153 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068078718 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076278919 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077392713 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066568716 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076459423 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075920663 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076407386 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067768081 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068668847 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077713041 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079020719 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076127478 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076210655 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076644084 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067122784 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076037733 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075772281 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066278665 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081768009 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066920923 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079300859 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076519662 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074262041 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075821563 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078283608 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077465896 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077151657 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08051267 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06619622 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066259139 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077380586 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067022509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067395035 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076145422 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067405102 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067384002 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080183202 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066953503 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076708234 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065998351 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076736578 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065077104 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067819031 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080615079 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066032402 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067127763 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076534137 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067432173 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074865889 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078044486 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075548444 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065964847 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067822266 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201437481 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078261662 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067302781 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066827508 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069482229 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077146004 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076004767 seconds)
  done (took 18.077506348 seconds)
done (took 35.738676246 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202565472 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148303239 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176628032 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116001087 seconds)
  done (took 1.951952625 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.112201686 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09844184 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090146148 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062908586 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096343066 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063404383 seconds)
  done (took 1.767616005 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298623697 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203105392 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182419688 seconds)
  done (took 1.924205835 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195883238 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184291806 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414655008 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257368047 seconds)
  done (took 2.406020847 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139016003 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08613127 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065407171 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081952113 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128615253 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154408383 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097865765 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12067816 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076101552 seconds)
  done (took 2.246616181 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144718046 seconds)
done (took 11.681182034 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.12215018 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108051667 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075501013 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112626039 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098587362 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.231038049 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07025412 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.246504324 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101090535 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.125324651 seconds)
    (11/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071813076 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.212809238 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072644606 seconds)
    (14/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.180282921 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076597859 seconds)
    (16/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173765233 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072978551 seconds)
    (18/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.158871421 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169221287 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087881385 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087604427 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.175207074 seconds)
    (23/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.10584716 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.236213848 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062591739 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.050408476 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079309892 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.15002596 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079329694 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.230036823 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.205003552 seconds)
    (32/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074873903 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06998716 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188809705 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.201892957 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065552319 seconds)
    (37/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072971303 seconds)
    (38/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.152474787 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197470443 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070626045 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.177461152 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071500511 seconds)
    (43/309) benchmarking ("sort", Float64, false)...
    done (took 0.126957892 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.049140246 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138748172 seconds)
    (46/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.187100751 seconds)
    (47/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129130079 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062065397 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071869559 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069704758 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071155194 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132205662 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0683272 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063642444 seconds)
    (55/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.050045745 seconds)
    (56/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071956023 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.065381164 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074956838 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08869972 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087443111 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.21073413 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078197557 seconds)
    (63/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152921019 seconds)
    (64/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108720927 seconds)
    (65/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145848101 seconds)
    (66/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109060636 seconds)
    (67/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073805423 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061128925 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089797668 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06902944 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.0868179 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071554019 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071852251 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152136145 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.191629192 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.048938577 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.065043846 seconds)
    (78/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10849753 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077238673 seconds)
    (80/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071190908 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106769033 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.136006191 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.101551403 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072001567 seconds)
    (85/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070395742 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.048662098 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06578307 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097784218 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.050240191 seconds)
    (90/309) benchmarking ("sort", Int8, false)...
    done (took 0.27417426 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071392374 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.116421131 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122759214 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075126533 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155707145 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071690546 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07965355 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 0.12934115 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.174562237 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193600622 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098664275 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051570302 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.083270404 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068442066 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14037638 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066672564 seconds)
    (107/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080453294 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123010197 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.049659404 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071405271 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137353236 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09268711 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072371908 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049482856 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140526681 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072601113 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066125002 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 0.134290517 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072685149 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08349777 seconds)
    (121/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076793003 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.153388376 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159597435 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070181644 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153383826 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070786237 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148557815 seconds)
    (128/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05009812 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067322056 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064632873 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065855201 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062094961 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105695368 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.075484132 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.075132179 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070598103 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20246207 seconds)
    (138/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071693849 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13684761 seconds)
    (140/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050005897 seconds)
    (141/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099087252 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074351297 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091838231 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11221953 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.048809087 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.049345811 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129485779 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064930983 seconds)
    (149/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050182822 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072479301 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063193942 seconds)
    (152/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061725788 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071267725 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074409391 seconds)
    (155/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.158162064 seconds)
    (156/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.051548132 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180115982 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138386869 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063871306 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.072795705 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069812331 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.063211092 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072695121 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06391276 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064122338 seconds)
    (166/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.061945753 seconds)
    (167/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061987909 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060923325 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049464426 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077524954 seconds)
    (171/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.28153026 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.050293396 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08826845 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098604231 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095529007 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063498432 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062732772 seconds)
    (178/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15217041 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069658506 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073813438 seconds)
    (181/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159450853 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10894937 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.050326498 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070956414 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069245901 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088221212 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.049379944 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.097063329 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064457124 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063784715 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072653171 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.048892582 seconds)
    (193/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069946843 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.050957055 seconds)
    (195/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071873758 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088373025 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064791411 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069395256 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.049348116 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087853265 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064864943 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.095731721 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084849532 seconds)
    (204/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071846116 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062035672 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.207686326 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096702462 seconds)
    (208/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064178351 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065262708 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064778351 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12348359 seconds)
    (212/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153146381 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051105823 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06463357 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065059434 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050467186 seconds)
    (217/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060318931 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071593802 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073076074 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071175038 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.04918799 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07044837 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066038819 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070975997 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072747946 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192116891 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063520657 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069520957 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085322479 seconds)
    (230/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086928361 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062274386 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17981466 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086237294 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06764718 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.049450097 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067587757 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132677658 seconds)
    (238/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.049866542 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173745169 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065473766 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069911712 seconds)
    (242/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064256933 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068184993 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063832444 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0496595 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090970527 seconds)
    (247/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081494012 seconds)
    (248/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063945012 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063553801 seconds)
    (250/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182381478 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086471864 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.049654827 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.049558826 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126508484 seconds)
    (255/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063673359 seconds)
    (256/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051062026 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063383382 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049117524 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.051069385 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063206286 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133027687 seconds)
    (262/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.059447271 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059765415 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.051612445 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.049550837 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070692237 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063577857 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071155962 seconds)
    (269/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.049344696 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.090561343 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049350407 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088968577 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.050349546 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.050485808 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16654845 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088412806 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059342666 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151196113 seconds)
    (279/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.050226595 seconds)
    (280/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.0490033 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049073149 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049212248 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063386609 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063310527 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.050145232 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.050571282 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072280331 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062714575 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06207843 seconds)
    (290/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.050793892 seconds)
    (291/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060604419 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071485166 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063766875 seconds)
    (294/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063691381 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086537427 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049611874 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177692222 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070165411 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050468147 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106185004 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108355137 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175279568 seconds)
    (303/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049348132 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06447453 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064737363 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051010097 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069642476 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08562662 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087287979 seconds)
  done (took 30.073050632 seconds)
done (took 31.327496601 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084283333 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091642386 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073592474 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091918261 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079083621 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074775819 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071135937 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076603947 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078248288 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080148887 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07610394 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053280906 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072597684 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07232827 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072610627 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088917083 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076556003 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071267796 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071081787 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0634934 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071375547 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064221621 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065433121 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.052554166 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0766744 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070238363 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070676931 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072103473 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064026265 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06399314 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067712058 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071681751 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063717593 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076934062 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070464686 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070878404 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072612372 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075124758 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065879618 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063447387 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072504883 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063730919 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070789017 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072198175 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070268071 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069782742 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071639782 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076060794 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088936098 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066503207 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073158918 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07450679 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07364305 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071020864 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06764357 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071052036 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069450096 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088284304 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071372835 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066004458 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072639117 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072765786 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070112281 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071678497 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071186537 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073668249 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073792787 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069923874 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072993142 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07033993 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063126112 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071205835 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067053586 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064373465 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074174179 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075642307 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06225769 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069669266 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070908506 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069229935 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063109926 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065248983 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065290992 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070259642 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06502522 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.052039705 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068043361 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069746803 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062568474 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071196183 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070026584 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070370396 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064874993 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073844457 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063375537 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068877067 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063685578 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06343122 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065662131 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067390375 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063525681 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06530397 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073011069 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064645815 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070477444 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076531307 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063510061 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070492224 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06256357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062903996 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07800132 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072867042 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063645101 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065384508 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063143216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070827358 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062620141 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063397258 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063869042 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063249857 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069664149 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063813817 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065816533 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070882168 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076511096 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062924966 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067263784 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064920051 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062810648 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06905606 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063190214 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063088418 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06515517 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.05965211 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065401154 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063245429 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070408504 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065278066 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.198490087 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066407154 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072886043 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069649618 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070648351 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069893826 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062560233 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057901207 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065599525 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065215164 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065849216 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064091159 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065248232 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062575219 seconds)
done (took 12.031348869 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064258712 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.135384627 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094224154 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092747192 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083040873 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064429941 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073825131 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.097024983 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066102311 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098064936 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085380524 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083255122 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110774887 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062516749 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063974978 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068137128 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065655856 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079247091 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098016223 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084873101 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111740729 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063561947 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090051687 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087156601 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085915036 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091540862 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067402913 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068291064 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067797349 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099474217 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085979964 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.067618087 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06494525 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094869979 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09103306 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081033858 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064390718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080291214 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065108597 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064005364 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065333956 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096258635 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078594534 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078791184 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068207714 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06778904 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06539846 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081093879 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087007381 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076771081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083382886 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09880076 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066929356 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063759958 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062882761 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083994349 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063407298 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067190839 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064176361 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066377248 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064346588 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067620343 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078851733 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.077860382 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067820816 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.076737879 seconds)
  done (took 6.506841709 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081643567 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088230215 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081589031 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081292231 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063378646 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064259515 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064075007 seconds)
  done (took 1.879080673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064414571 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085930598 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086527552 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087371056 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.079631996 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085336923 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073979923 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064520477 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.085007768 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065645604 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084596272 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097570116 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068073497 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071885859 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088195396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064535622 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.087743203 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065010532 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067644732 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087690521 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06706081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093223393 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06790143 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065181333 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07866975 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06542752 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111222669 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069755464 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066359119 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067588647 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062765863 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104386432 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07812646 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.072543591 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064381292 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078732501 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078630113 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062969341 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080632574 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072726083 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.077742485 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065404211 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065195139 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.062589634 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068703601 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075013258 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065414428 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064956661 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066627246 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084590743 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065033998 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077330189 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067009648 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069515666 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066141682 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07073977 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074201028 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065049791 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084262931 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065648962 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081110092 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081064332 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07814008 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08081953 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066941528 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078335119 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078737536 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067352156 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066646641 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068693792 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080131971 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063318942 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066717557 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07509041 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067320523 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087367474 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087258958 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066863312 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077957885 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065254689 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064448396 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.064428419 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087193643 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069656403 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064266338 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068632228 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068149003 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063475083 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063719856 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068468483 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06267459 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066426058 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06745761 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067617669 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06745719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081081857 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067112944 seconds)
  done (took 8.463309063 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066804651 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065402815 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067253869 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066310182 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065391496 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066206887 seconds)
  done (took 1.775521307 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090968994 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067054425 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078508766 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070526908 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101313006 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084413401 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084694174 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075965289 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08132227 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075967472 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084345067 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085754737 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089362703 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0697628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083924062 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069144021 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084776356 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072238859 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076066167 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070538924 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083464094 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070060434 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070993638 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079358143 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073223975 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069566233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065181144 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076067834 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075977416 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076040252 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069907022 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073450193 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.068524397 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075889836 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084882588 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.068639944 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069498865 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075032181 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069750756 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073491686 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085536745 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070679276 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071903805 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07483955 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07530872 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.068683781 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075540966 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072807693 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083683128 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075244169 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074918567 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068821788 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073590441 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074402545 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.068347373 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075491849 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074455585 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083947216 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069926459 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.068706048 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06644708 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073661996 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074630309 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074362237 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075982251 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074909433 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.068269881 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070667095 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070476051 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069343434 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075532309 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067043716 seconds)
  done (took 6.769120359 seconds)
done (took 26.735881019 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.530448906 seconds)
  done (took 1.875408849 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.591659518 seconds)
  done (took 1.958143418 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.397757102 seconds)
  done (took 7.761981255 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383348824 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478247934 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.706369683 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129040709 seconds)
  done (took 3.087809264 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.685818481 seconds)
  done (took 2.060736204 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210323659 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196466042 seconds)
  done (took 1.795424617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.367742589 seconds)
  done (took 1.734984226 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106292956 seconds)
  done (took 2.474739959 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.248288412 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17122574 seconds)
  done (took 1.793656143 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471162628 seconds)
  done (took 1.841324537 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.639921304 seconds)
  done (took 6.012128062 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206977195 seconds)
  done (took 1.621394933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236406606 seconds)
  done (took 1.60932617 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.651243504 seconds)
  done (took 3.024378887 seconds)
done (took 40.020641044 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07889998 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079498096 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078946048 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076621535 seconds)
  done (took 1.676816481 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075027702 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071540288 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074735887 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07119072 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075019783 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072464694 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072822094 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075443419 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071052402 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071856902 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071754022 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071187584 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073899683 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072891041 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070317743 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073883908 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074644817 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071573864 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073875565 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07173589 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068923049 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073435427 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.072850429 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070099663 seconds)
  done (took 3.120748849 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075991817 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071325358 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07313166 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070549474 seconds)
  done (took 1.675660826 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077041554 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094057859 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086794096 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076235265 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.0905616 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084895324 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067906735 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067676301 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068982565 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076081864 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066553372 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093288758 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086756575 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076081012 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078071212 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064478483 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066804717 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08550318 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076350549 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076774334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068924174 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076333672 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066873602 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086595631 seconds)
  done (took 3.241500926 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085337781 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103741081 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079832846 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08708334 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089744538 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064082451 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085367539 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08930306 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124992734 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064019505 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068924625 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063576271 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071167644 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063624597 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078749503 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105816367 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109677656 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067322217 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094615644 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064112869 seconds)
  done (took 3.051515321 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071821994 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068623607 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065023499 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067546203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075834689 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071308271 seconds)
  done (took 1.81104502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066782757 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066611397 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06588132 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066093522 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070026115 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065371995 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064924965 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066090112 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066062078 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065610507 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065470201 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064239335 seconds)
  done (took 2.179885278 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.197444392 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066608537 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067856944 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065218234 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069275823 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066249073 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078872276 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066263161 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088819047 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064988626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064747693 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066776884 seconds)
  done (took 2.35104631 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201564717 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074917856 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231485436 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14651464 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107346086 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111909274 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108698141 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111099567 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137169977 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097826147 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163265681 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163111986 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104829855 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133948884 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086681143 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098671396 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148604888 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157845496 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102069007 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162011445 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14101747 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123069033 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144430009 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103956115 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103655718 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117888522 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069380791 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077440835 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164471979 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129179477 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139431445 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107980815 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089268782 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172856305 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167624674 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136728496 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143965238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082346018 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102790711 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132204984 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197202972 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086858993 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158959338 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106714233 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210328467 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131847964 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117165134 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117450388 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10230275 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088004347 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141396171 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179549124 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133442551 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085871502 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12058107 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110597905 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110439213 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111067894 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178018522 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157425219 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125005907 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070434054 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105312984 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149417721 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130506632 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104966543 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122811368 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090185433 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131441683 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151265748 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117304185 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140336118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1137822 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086567265 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116856644 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136577147 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123575062 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156348463 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121452182 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071482385 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120169553 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098844659 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078895644 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143656027 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073534415 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172231686 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097066328 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106885104 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122699116 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107422076 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107942634 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155946869 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140488725 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100758685 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063716412 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237235445 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119374407 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143578782 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086257395 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107513243 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114937828 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075789394 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134275502 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074075724 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120343912 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075248001 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124408189 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127167786 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075354448 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120280557 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101227817 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099076321 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128816565 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157458216 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085811925 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079960287 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168392561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1199005 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10083985 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140471131 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152766483 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099739588 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098906809 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14549743 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175684786 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087772725 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159531126 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103378724 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081586505 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085355553 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121139706 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108921057 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120441052 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079689253 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115008429 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164471718 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072731871 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093334491 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131118049 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077422835 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078837745 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102720248 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102160029 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093435478 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097574468 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100593247 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132286603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12130803 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103382816 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120997836 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096530492 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304667011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086310771 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100404045 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102908027 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069597662 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132250995 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153144401 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077847739 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158274358 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119389581 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113648135 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117032051 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082259065 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138299597 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078013242 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068096192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140602196 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107133959 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107627508 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148462915 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113601613 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122432187 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116433887 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129595499 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127752703 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127573821 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10264506 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086560228 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109771372 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122206625 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071368007 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088669954 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078185711 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101218607 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093145115 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081198529 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136929861 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120028611 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106279132 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109651613 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094625814 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144501221 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07452337 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124645183 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116718292 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093370598 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.1489251 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149793179 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128559934 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096910546 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134125318 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068678533 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072020139 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085861957 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119901611 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08105596 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080922739 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24909969 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146743648 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127700586 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13324139 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121305753 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117468043 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15077932 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068755986 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115849778 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143603045 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11955779 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101643402 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087825427 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096922882 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140322074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105701753 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177296541 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113958448 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120877203 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149558713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098693601 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077464954 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100472855 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132201882 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101162667 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139088835 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096674481 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086038209 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107772677 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072905507 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096666426 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123054962 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114910498 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130084094 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112623986 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128314289 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075956708 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111980652 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118985914 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11842121 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062621907 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116957581 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157244916 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092321054 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116289141 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149647121 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07753354 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131933304 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17103021 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140808579 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083019821 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24269994 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118658065 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126328082 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117645553 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137914804 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104387954 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1343395 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108260102 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084430333 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086319291 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095667606 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102453818 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092737234 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102332268 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111017974 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094392069 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127937378 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101977787 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108529462 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115316597 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096935231 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089818535 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094404234 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173021644 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115616693 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16577427 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097155173 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141737354 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159105455 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073224156 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077155676 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076785252 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136835895 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081958999 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126839159 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.104250414 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11389535 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120507079 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138456758 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093365869 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06740095 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106877444 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129102734 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121460807 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096326311 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100597217 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158922567 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099018631 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077189457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110957161 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113209903 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100542524 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167307458 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06014466 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103206481 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074871961 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078245524 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124770244 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284048752 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080556767 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101740739 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117250924 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108459549 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124314951 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098141839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105834301 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123800328 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144266326 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124630363 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087870991 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108952532 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126375602 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152613642 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102596964 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094293163 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170559288 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149310368 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155853162 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08581379 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111740437 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112435996 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106013804 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133605538 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081293114 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159495815 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080691529 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133067524 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100010173 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086230526 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124740243 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.105159912 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085273718 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143307493 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114847725 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080680145 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076079435 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114385752 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116916512 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102910664 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073780185 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134626443 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071987957 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131954225 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156448655 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079081222 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106146646 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094428075 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077767024 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103261238 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099743531 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085339239 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.22910774 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172484785 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08599166 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147534125 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131415315 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111016202 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133180506 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101913521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638151196 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076697572 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149423133 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113398397 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168707933 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098311588 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116450358 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108141143 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119250064 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141217513 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101436909 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17766853 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128516666 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113895566 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078043731 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099952611 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102049668 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085972285 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105066711 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111927176 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113305888 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090941847 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112922003 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121592534 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080441429 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093888997 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152476404 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113320684 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138814369 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136529443 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083588355 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115653588 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134190209 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078618566 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1170706 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147948156 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103894672 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096743286 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079136995 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097713359 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155924314 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071790139 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153802401 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116399024 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244707393 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111711449 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109314078 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127995789 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10391426 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119653373 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090097223 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108232529 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111369903 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080198657 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075975903 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103235589 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109683169 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097081266 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095578896 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095683616 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149108427 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071399315 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096266943 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111651535 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138701013 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170161445 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087319395 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080441552 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115439375 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110517637 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110045897 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117756693 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077599352 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080304143 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079080936 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076067061 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106877795 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110260701 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11171341 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108240767 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159018267 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080848628 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229232908 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093341276 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102740859 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06796691 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076238232 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093844403 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095161832 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104485553 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10677591 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155494142 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094392629 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087884864 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088951431 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072636907 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081451221 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125274789 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106839451 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116119454 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096874426 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.060894178 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104932435 seconds)
  done (took 57.413427272 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108156978 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082250846 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093687173 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.139641592 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121254773 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199942161 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149169984 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186875722 seconds)
  done (took 2.605126514 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066957883 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094023056 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101211631 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081173149 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065255034 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06725182 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227202942 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079986068 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064427363 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09725393 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076569199 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067979139 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416668993 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064812655 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066379745 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060227206 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065515505 seconds)
  done (took 3.25650183 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379078009 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.590582146 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.375384304 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071281455 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.216032354 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089661557 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.857633 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.125939891 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072114653 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.509733691 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70292446 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.121987763 seconds)
  done (took 17.618819962 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074242421 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06765346 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082059991 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081885435 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070314716 seconds)
  done (took 1.876489078 seconds)
done (took 103.299992669 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079858428 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.595784051 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051443914 seconds)
  done (took 2.176662697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081958672 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083675562 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084292824 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08177721 seconds)
  done (took 1.835536822 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072387913 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075814133 seconds)
  done (took 1.645545318 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22940463 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168263512 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093269321 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08145825 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07760467 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077714248 seconds)
  done (took 1.740318023 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070837086 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074448745 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071467093 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074785048 seconds)
  done (took 1.78947823 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074960655 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.050400994 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052841406 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055608856 seconds)
  done (took 1.732691897 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084856625 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078089543 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076913866 seconds)
  done (took 1.739831374 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099954794 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084013033 seconds)
  done (took 1.68413587 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080506745 seconds)
  done (took 1.580203235 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097531171 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099560979 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130365478 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108019231 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13649054 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107208071 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082040882 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083336401 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074818113 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083752749 seconds)
  done (took 2.501831041 seconds)
done (took 20.494469604 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07724387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.209083018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.350966073 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087814379 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.650611214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.347055298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.869321078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090665332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112280644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066202178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082592789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.629716068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.858161138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.164902596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.846685858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.130390819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.630994356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066735741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06613841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066384863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.852595014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066414584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066418872 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06704081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.630745934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.361834212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066751705 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.130527186 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066356491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068392836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.346098293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066642833 seconds)
  done (took 14.681623076 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068378992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117798511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072834347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083078554 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069124403 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068385977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069771008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067417707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118920573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066366467 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083612608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067069359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070234939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067114402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085955611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08253953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066739083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067114278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066569926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066859431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08498018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066904324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066716931 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067219961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06714433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078973572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067171841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066602121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066942308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068514768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069539198 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067378882 seconds)
  done (took 3.874598468 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116699951 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123798032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07294866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103868566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11094628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069014778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144482178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091634741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126498989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066631495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083267643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066298044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100110719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067357334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086222857 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066869495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067559696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067394829 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0665128 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066611288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086369203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066130707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0667002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067521783 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066445269 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080416198 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06640893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06669728 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066387711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068607542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070010283 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066701658 seconds)
  done (took 4.115385217 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070768938 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074255298 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081888138 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083292886 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067757375 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07083573 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071798464 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068796976 seconds)
  done (took 2.104903849 seconds)
done (took 26.278145642 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078385834 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06809901 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071636021 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080716589 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072164179 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077124299 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065657416 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074054518 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071472889 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072262315 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073647348 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066243827 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070057221 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065958378 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072864765 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066153824 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077597264 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070857236 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077266355 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077602438 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06888874 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071743949 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.0735842 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.076961174 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077422375 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077579301 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075709317 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071067724 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067575531 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069231095 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075265492 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082120802 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067141046 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077229495 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066215618 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06680279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070026805 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066471949 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077016428 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074769186 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068182672 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075229249 seconds)
  done (took 4.538833669 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086701765 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092144287 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083774739 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060328903 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065931291 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064363263 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087898287 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058576031 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058105793 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086984895 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054020489 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05816416 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064362495 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052114788 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059505171 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055624347 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060685729 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.053978704 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059066882 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058224348 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086951707 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052049597 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075977653 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061836336 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.054595836 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060030368 seconds)
  done (took 3.23569888 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073480288 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086260114 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088399007 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128379257 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103425483 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07827049 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079992428 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093827391 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.087285335 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065159513 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069539511 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091706159 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08946837 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072537197 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06617955 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084710976 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082733933 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067485224 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071778699 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094454997 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085834017 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085368801 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097670954 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082464291 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066143539 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069412596 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070022045 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080021803 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07127528 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075431274 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070331338 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069931554 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068653868 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077969193 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069793729 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069092758 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091389899 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076292055 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078064214 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067264189 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070285942 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067982599 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092043356 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132590763 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066368907 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073183415 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074772152 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076545056 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0666981 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088004613 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078024424 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067163924 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070343573 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066462503 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066435949 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080283596 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069389618 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068867249 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076183041 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069644386 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091692227 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071381658 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082818232 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06592285 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074432833 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065741715 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067560561 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066035046 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094942233 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068770488 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11086463 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067746447 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067533291 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07608897 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074495742 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072981244 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067159371 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082585863 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077397024 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071661774 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07669081 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070169369 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069570248 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090952166 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069117411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068729141 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067481391 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073148549 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069459314 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.078876882 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079888317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06670654 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069126382 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083950549 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066367583 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067728009 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07234549 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071089329 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06644084 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07699582 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071385983 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067969391 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076054728 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066172393 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069091046 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079054407 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07237859 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065481312 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070394381 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072012844 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067579986 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068605102 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068874931 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068511175 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07556004 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073136212 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071322271 seconds)
  done (took 10.420638527 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163123242 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157171765 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068692531 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146955789 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075072564 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077843457 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148644222 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093322738 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06648419 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066943591 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067247485 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10868721 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104174814 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111714823 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077452667 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066495365 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083166031 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112767253 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150061817 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144876203 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083586542 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07521451 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068775636 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067582003 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069221118 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077271217 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08146523 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075659089 seconds)
  done (took 4.244511497 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078586366 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103162126 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073998253 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089836882 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089296735 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066632282 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068728665 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068166788 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079957952 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07705896 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066569661 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07173944 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073531199 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069264094 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067143342 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073498907 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073351116 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068132277 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069876093 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071861872 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076641503 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090383698 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070317705 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066460315 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072120726 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065855365 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061536919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083049588 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066803547 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093693591 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064198675 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074310607 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080859207 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067884791 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066312093 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067115379 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066164631 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066507528 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068234622 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065659066 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065122706 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056528316 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065794525 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077783929 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073797814 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055352145 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071495779 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071921271 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072479484 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064300026 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070087551 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069770308 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069893059 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074122221 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071423963 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072426672 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068536227 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073450984 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075698785 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06635512 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064345661 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064610649 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071436226 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.063938371 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074908632 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071462832 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065288985 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065968941 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068617883 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073974952 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066747015 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069699075 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064359894 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06894058 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071478136 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06854564 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06781994 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065309693 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06641221 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067540585 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054290752 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067125923 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052170474 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069587642 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064678836 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065241595 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066805567 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071463892 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078133358 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068199585 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072074764 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067706245 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066048008 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069361458 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.058982926 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068960761 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082470106 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081550544 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066671221 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064421638 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08112848 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070976575 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065366799 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.054655489 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074239613 seconds)
  done (took 8.926671265 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08926548 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069848034 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08539124 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092529712 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086471746 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07355937 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076360063 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0681425 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08180915 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072424936 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076013665 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066277267 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077004743 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076156257 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068468329 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076406131 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070999974 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083754014 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081629008 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066633425 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075115693 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079421281 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089240004 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080902924 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079622972 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080984155 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09009181 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070697553 seconds)
  done (took 3.747744985 seconds)
done (took 36.621582765 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.596410777 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.769969909 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.594705694 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.939026653 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.663510759 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.613019523 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.743154235 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.608679856 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.73121235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.626208382 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.826984983 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.715152995 seconds)
done (took 62.956349117 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.680425773 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.735823935 seconds)
    (2/2) benchmarking "String"...
    done (took 1.834087641 seconds)
  done (took 5.100668643 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.861747767 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.158965336 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.845476055 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.591891754 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.595592583 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.930498315 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.373092398 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.102163952 seconds)
  done (took 29.13232243 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.548764892 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.823967297 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.187099989 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.209905024 seconds)
  done (took 14.345192549 seconds)
done (took 59.725086343 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.626903522 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.617882064 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.607247766 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.575806908 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.684826015 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.607448601 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.824704783 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.519118843 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.59458061 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.583780514 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.593750074 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.023215928 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.59509918 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.896506107 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.591324085 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.595135598 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.630330762 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.760402347 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.747436784 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.61155117 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.595507211 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.592755207 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.595437126 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.592122309 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.603235269 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.593189197 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.996036389 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.60202631 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.209596032 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.59660132 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.618621875 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.988549398 seconds)
  done (took 198.405178441 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.592139344 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.586257644 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.619993001 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.639572633 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.944413096 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.77539349 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.709026173 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.052564202 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.597429461 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.622800503 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.800809735 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.594133474 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.824219725 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.540781784 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.62030897 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.694371559 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.743413745 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.810201839 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.625390401 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.764652168 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.615487951 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.745036189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.698317008 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.763924707 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.61726546 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.690535601 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.620494733 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.735536822 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.786204394 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.737293222 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.636022199 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.624313582 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.814907735 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.467973402 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.594649614 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.608131658 seconds)
  done (took 163.449958564 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.976975006 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.594608485 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.595191979 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.593014697 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.604619839 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.594005994 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.716528763 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719756012 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.196619051 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.607238372 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.65120463 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.381560888 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.594223081 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.659348601 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.606485061 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.594828401 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.608748904 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.620503994 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.596646833 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.595406053 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.719075726 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.606622485 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.662777676 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.602087821 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.593684567 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.600524614 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.965625562 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.595648328 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.599443807 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.852133488 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.59408983 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.59488013 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.409505566 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.487193837 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.682824494 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.599925429 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.602040374 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.595451574 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.813175789 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.596979308 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.596209089 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.596561038 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.597975369 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.738419431 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.595207846 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.720615765 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.597423718 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.082227024 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.59472204 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.59565324 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.745598863 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.223282713 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.596253034 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.595652311 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.597743259 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.596290534 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.595141079 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.602893633 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.747081137 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.670001861 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.598637566 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.59885491 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.601622052 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.596289728 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.798909328 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.597442799 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.222136133 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.648304582 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.722441098 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715242272 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.599525181 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.657690088 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.68954356 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.594188946 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.594448187 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.591428235 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.594948072 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.677089699 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.592563657 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.690336104 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.604749968 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.597126452 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.64969391 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.663304995 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.595269606 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.596821679 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.593080654 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.595835203 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.413171784 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.88214296 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.59469436 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.593604026 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.658253164 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.594916127 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.594539437 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.594466587 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.693273798 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.714460417 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.345371683 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.591344223 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.829515015 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.591370931 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.752518847 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.597646777 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.759790821 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.59101343 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.671723091 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.600048159 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.592355101 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.591603779 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.625758349 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.591323526 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.645539518 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.593955207 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.966574604 seconds)
  done (took 379.684394989 seconds)
done (took 745.096186783 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.257198437 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.19839638 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.320513558 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.224096605 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.197728938 seconds)
  done (took 12.726045505 seconds)
done (took 14.254357183 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.678928761 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.682157169 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.61362736 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.680941337 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.61141707 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.679904118 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.660856801 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.615547083 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.646679559 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.617094162 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.652901289 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.616380511 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.602340339 seconds)
  done (took 22.888816006 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.828016698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.824045006 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.662388477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.8292997 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.747202846 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.934589993 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.868415183 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.862773844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.858011386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.71950852 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.710792256 seconds)
  done (took 21.376372969 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.93962828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.951221857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78058899 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940380873 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.75148231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.932778229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.866633186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.851941384 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.857480362 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.718048312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.71404262 seconds)
  done (took 21.941143378 seconds)
done (took 67.735105059 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.710004768 seconds)
  done (took 3.350317961 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.733482963 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.892032338 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.714659474 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.71250926 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.709537031 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.713210506 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.714004277 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.711389369 seconds)
  done (took 15.54631713 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.709192291 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.708251236 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.707472052 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.705135968 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.705500223 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.707740903 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.707547298 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.712038637 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.710001988 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.709111584 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.705803749 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.706605597 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.707136037 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.707052959 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.710249599 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.706419086 seconds)
  done (took 28.967607437 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.708045295 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.706448294 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.707590174 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.706349357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.706047443 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.705460708 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.706397419 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.706220258 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.705335452 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.69983856 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.701508394 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.699903347 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.70135073 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.699128112 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.703289158 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.700081407 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.69890806 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.6971136 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.705183053 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.698617991 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.700124419 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.699212658 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.699570117 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.700522399 seconds)
  done (took 42.50522685 seconds)
done (took 92.007742675 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.592363831 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.082388615 seconds)
  done (took 8.308249423 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.703889183 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.700340077 seconds)
  done (took 5.076011897 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.702558443 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.70112259 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.702168052 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.70366243 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.702077237 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.702357475 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.700737047 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.701301576 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.700195757 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.702592864 seconds)
  done (took 18.652712264 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.700387347 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.700891006 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.697972562 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.702531305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.701520524 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.697903749 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.700974743 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.702549336 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.702273454 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.699899833 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.703328041 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.700601513 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.701512078 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.70002317 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.702838284 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.698815549 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.702761599 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.699078279 seconds)
  done (took 32.249369234 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.700331574 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.701458857 seconds)
  done (took 5.035892612 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.700243692 seconds)
    (2/7) benchmarking "second"...
    done (took 1.701276884 seconds)
    (3/7) benchmarking "month"...
    done (took 1.69893813 seconds)
    (4/7) benchmarking "year"...
    done (took 1.69899044 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.697921127 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.698084947 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.699010525 seconds)
  done (took 13.52891532 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.703181677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.860505173 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.931815968 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.352496884 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.703046647 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.704804931 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.663219608 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.706852213 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.709574618 seconds)
  done (took 18.969578347 seconds)
done (took 103.452710207 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.542701725 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.6993412 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.069070886 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.793131549 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.715173533 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.042842878 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.733753624 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.009833397 seconds)
done (took 42.238432435 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.766010529 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.255755265 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.275072791 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.018976771 seconds)
  done (took 12.183674321 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.679334054 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.212829061 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.723415199 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.282884183 seconds)
  done (took 19.543190439 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.06149505 seconds)
    (2/2) benchmarking "read"...
    done (took 2.033585977 seconds)
  done (took 5.728301682 seconds)
done (took 45.857091304 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695784268 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.696184542 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.698156037 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.694530306 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.698195889 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.694296113 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.693465772 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.697046101 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.696510672 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.698847944 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.696096438 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.697797455 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697258729 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693346567 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693973051 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697424506 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.699339344 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693910697 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.694867528 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696756824 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.695043958 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.693252442 seconds)
    (23/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.69902229 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.692851179 seconds)
  done (took 42.337294069 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.69699765 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.694017738 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.69903848 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.698964444 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.693039975 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.69711287 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.696349321 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.693933458 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.699379497 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.699482382 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694108028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.693759323 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.697364806 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.692343127 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695621483 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.695904594 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.696279241 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693920196 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696343937 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.694245736 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.696719059 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694364895 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.692934709 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.696021468 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.694160475 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.694325898 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.698065371 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.695557767 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696049539 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.693833714 seconds)
  done (took 52.499448828 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.699915503 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.701633788 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.697727601 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.695673311 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.695403863 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.696481211 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.696076825 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.695509076 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.699154717 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.696417684 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.696353744 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.695351625 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.695650858 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.696377909 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.69714105 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.695402711 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.695658297 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.69524984 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.695090354 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.698721301 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.693115045 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.692879083 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.694657541 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.695883357 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.694553223 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.698241946 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.693982474 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.694194832 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.694476378 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.694036309 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.694414141 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.697048651 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.694678312 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.693310218 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.694826715 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.69354402 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.699861229 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.705616582 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.695838762 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.695282313 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.694157822 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.695975697 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.696141199 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.697328504 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.695857779 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.694660314 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.695059619 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.695454918 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.697156163 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.701491015 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.694643036 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.695347862 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.694476417 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.694998398 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.69491412 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.697394945 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.695605209 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.695065867 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.694942359 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.696507607 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.695393504 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.697242408 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.696722364 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.693993515 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.695516253 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.695987694 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.696086062 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.696093364 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.69567084 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.694844947 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.69476712 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.695385736 seconds)
  done (took 123.741293468 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.697987511 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.694380445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.692880493 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691461546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691591002 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.698675092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.693178443 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695344449 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69291261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.694536143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695736296 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.697157288 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693293743 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.695575358 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694105059 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.692935654 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.695831807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.697482943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.695170027 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.696593362 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696466426 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.693559371 seconds)
  done (took 38.915582734 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698851889 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695406317 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.693558971 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69625366 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.693317486 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695774002 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.699977465 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.695226382 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697522192 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694174994 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693016384 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697389132 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.697590582 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693839305 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69375895 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.693093683 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696403961 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695058971 seconds)
  done (took 32.150935848 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.694516021 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.691838859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.697548666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.692344154 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.69449348 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.697265413 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692327158 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.695924059 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.695153186 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.692421011 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.695409289 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699048747 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.697334209 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693072126 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697382443 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.695543198 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.695161681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697043815 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697090935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69273384 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.693190401 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696847393 seconds)
  done (took 38.926679982 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698479299 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.695124357 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.69324403 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.694156442 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.693318576 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.695770774 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.698958196 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.694312284 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.696238044 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.697870791 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694142463 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.699767334 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.695048148 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.695339795 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.694094487 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69375412 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.696489899 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.700474351 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696917622 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.693681084 seconds)
  done (took 35.545344187 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.698247336 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698909091 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.699537412 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698933547 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.700085515 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.698180009 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699696094 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.698330717 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.701452045 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.70020989 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.700087803 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.698623046 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698962392 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.701334014 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.701913284 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699309118 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.69956224 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.699294893 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.701204557 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.699958963 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.703135175 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699156899 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.700372984 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.699704286 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.700423107 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.701178986 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.701542341 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.700589024 seconds)
  done (took 49.231240689 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69775101 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.698618812 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.696650589 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.700321507 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.697477825 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.69566029 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.69548826 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.695535411 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.699385127 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.69819743 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.699014208 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.699377755 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.698888518 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.698594415 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.698445472 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.700135449 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700607586 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.695921597 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69674723 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696861771 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.703308707 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699164516 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.698589814 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.696164595 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696065358 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.69944355 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.699283368 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.696438967 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700046841 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.696912848 seconds)
  done (took 52.576943983 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.717898927 seconds)
    (2/2) benchmarking "in"...
    done (took 1.718874343 seconds)
  done (took 5.067676962 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.697061213 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700490884 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.699034671 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.697959727 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.698936651 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.700091344 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.70017258 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697340236 seconds)
  done (took 15.22313979 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.699938552 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.702487166 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.701572372 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.701672911 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.703261848 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.70159603 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.706608973 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.706218687 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.703402582 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.701196824 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.706767433 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.707546949 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.703879764 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.705605942 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.702607111 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702548477 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.702390374 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.702193336 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.702778835 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.705189807 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.704648839 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703954955 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.703968759 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.70008238 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.702579837 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.714157999 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.70569582 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.701772338 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.702961578 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.705186932 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.706501637 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.700343228 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.704013008 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.70410274 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.702342599 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.703486409 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.711672787 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.703242457 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.707952566 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.703774742 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7038618 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.700705796 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.706131156 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.70321591 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.704453451 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.704110115 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.702779776 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.699228871 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.703543859 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.705806584 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.705489729 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.704108188 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.700565061 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.705449317 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.707447024 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.710620626 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.705115027 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.704554221 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.710884653 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.711755447 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.718993807 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.708710043 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.706343156 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.705507422 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712288883 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.723726898 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71365656 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.700506105 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.700245617 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.704851463 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.710197426 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.720519593 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.712190729 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.703668125 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704746182 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.703802121 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705714768 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.705707398 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.708368828 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.707081111 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.705907625 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.703968752 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.712066345 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.725043896 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.704679484 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.704663543 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.705201718 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.705742392 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.704989282 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.716339632 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.705139783 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.704192222 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.704039709 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.705899799 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.705919929 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.709066588 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.705643848 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707407205 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.70274937 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.704349146 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705317261 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.71008605 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.712862378 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7043955 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.706417404 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.710727558 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.705924876 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.705568886 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.711085958 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.704774087 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706286476 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.706205229 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.712628858 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.701652144 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706995324 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.713006047 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.705825266 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.707614095 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.708175421 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.706119468 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713999101 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.726615387 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.705825123 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.705954633 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.712243804 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.715231146 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7077892 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.708568767 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.705011524 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.703354809 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.703899289 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.707092954 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.70685726 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.707582156 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70820324 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707082377 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.7070547 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.706918212 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.70778798 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.706946658 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.708000058 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.706795163 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.709131213 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.708525894 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.707232163 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.708000295 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.709633325 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.705692101 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.709124657 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.707323655 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.703591761 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.706534618 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.70841804 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.71115042 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.706011604 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706863869 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.706249382 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.708360509 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707784029 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.708346029 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.707392787 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.707835946 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710309756 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.709654013 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.710939483 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.710601054 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.704823951 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.707780773 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.708170786 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.70820017 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.706802481 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.708685937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.710111175 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.7156027 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.707124005 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.709178696 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.710386629 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713057304 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.709446756 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709636986 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.710584897 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.712510606 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.710018935 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.718333333 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.710673676 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710711267 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.708020646 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.710200531 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.709182891 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.71391205 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.712251929 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.714094008 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.720089831 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.716498748 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.713792599 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.712957721 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.709966319 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.712527766 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.713221274 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.711075114 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.711142921 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710507197 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.709280635 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711432088 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.710868733 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.711196179 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.71243631 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.711334311 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.709334293 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.711238966 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.710140052 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.710728869 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.716488141 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.70737467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.711589596 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.71222901 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.710984515 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.708126779 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.712697565 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.710917841 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.710972992 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.713090864 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.716754974 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.707203702 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.716334941 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.712701393 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.710831781 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.710617276 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.711957561 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715303992 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.711052523 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716442603 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.710605319 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.712346008 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717396883 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.712716131 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.710550257 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.714975726 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.711433413 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.710420306 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.713632284 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.718735413 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.711408107 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.713624039 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.713337732 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712271177 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.712110934 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.718831437 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.709824231 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.711348664 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.712098166 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.714094616 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.70881685 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.717407467 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.714624197 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.713565402 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715764636 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713779399 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.713065111 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.716371577 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.714439768 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.713864607 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.713068756 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716024442 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.721222692 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.717495534 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.714056957 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.714255075 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.714195167 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.715621778 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.717319663 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.716755581 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.714194801 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72568709 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.720822596 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.721025343 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.718196103 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.715991391 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720998861 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.71553333 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.719211477 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.715952829 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.720326094 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.717061904 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.71490809 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.712822029 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.716361857 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.715904107 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.719343137 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.715328921 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.716777023 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.716742878 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.714578541 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.716029379 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.721527449 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.715146967 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.715629634 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.715756218 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.719325677 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.720627982 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.716624744 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.716153439 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722484801 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716720477 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.717495048 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.716842839 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.715566831 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.716522551 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.722280234 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.722526938 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.718164247 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.724494372 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.719558727 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.724545034 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.717371092 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.724065895 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.717756172 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.719097939 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.724660251 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.714480799 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.715806311 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.717580369 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.717903776 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.723222628 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.719010414 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.718722743 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.722563009 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.719826324 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.721842382 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.717838094 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.718328637 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.718081532 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.719113748 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725460056 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.719094949 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.721707116 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.719463856 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.716082805 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.719019389 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.71830478 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.717627421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.722015198 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.719835343 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.718826666 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.718734395 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.717736047 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.717695585 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.720460455 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.718077792 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.715829662 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.718561834 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.72420009 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.718896933 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.723032706 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.71906303 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.725870965 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720154494 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726081067 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.721683738 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.719863397 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.720130706 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.720269861 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.722380672 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.720216451 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.721277134 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.721111908 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.722127006 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.721249153 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.721194727 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.722118458 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.720982606 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.721951794 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.720159543 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728566123 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738797093 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.721697503 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722141832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.716618328 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.721996879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.726039265 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.7224867 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.719667339 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.724589601 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.728702373 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727066331 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.720180301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.723031535 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.721289572 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720809388 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.72046497 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.721343117 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.72197255 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.721216581 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.722091015 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.722892179 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724029157 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.722503372 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.721713095 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720903678 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.722544687 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.731534423 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.723071641 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.723208158 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723655423 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.72187005 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.722872995 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.721884635 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.722670753 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721975228 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.721974071 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.72217537 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728000336 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.727614963 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.725220399 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.722204243 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.723109441 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.723338061 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.723844975 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723651745 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.723015771 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.723354157 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.725205676 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.724021739 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.723608778 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.722551761 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.722581834 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.724129715 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.72305064 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.724060016 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.728678708 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.724425376 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.720941192 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.722935061 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.723628558 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.721843826 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.724054594 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.730652048 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.727805405 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.730402986 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.729414633 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.727856449 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.723891923 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725205779 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.730376186 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.722483651 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.72435482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.725326678 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.725511198 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.72465153 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.726569255 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.726162662 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.730059637 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.723849544 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.72338655 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.732813214 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.726565892 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.725478545 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.725669398 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.727697583 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.726059256 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.721747448 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.723947605 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.724100018 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.731334272 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.724990473 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727193366 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.727991926 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.723040351 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.726966692 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729598034 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726039311 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.726345725 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.722637178 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.724833816 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727071951 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725125723 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.722194009 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.724943468 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.726240186 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.727782356 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.731127906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.722630853 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.72713371 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.726924612 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.72864022 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.727949617 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726532493 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.723272483 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.724105956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.726852915 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727749761 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.726455321 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.728610319 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.725710661 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.727827916 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.725899609 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.72851954 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729786307 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.734688454 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.731255553 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.724448694 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.726437266 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.726724967 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.729571106 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.728072661 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.727999253 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.726890414 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.727404288 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.726121455 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72759468 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.726788803 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.72921399 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741229188 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.727166567 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.72660306 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.729025317 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.731420091 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.728402185 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.726574727 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.72838911 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.731431975 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.730815983 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.734281006 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.72980409 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.734439842 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.728183888 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.728903285 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.731221893 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.730486672 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.735284916 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.731283568 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729053277 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.731179978 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.732352312 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.74099508 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72928502 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738616719 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.752239557 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.730104521 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.730723205 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.729930992 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7289198 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.729873803 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.731387978 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.73075977 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.728688318 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729547218 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.72999733 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.729855379 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734598101 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.731146327 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.728003544 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.729487906 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.730571616 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.731083798 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.727256532 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.729930049 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.729175281 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.731016114 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.730723512 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.731833055 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.731116534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74238215 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.736972701 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.731163259 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.731030088 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.727917202 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.733738516 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.732276081 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736750069 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.73666249 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.732296122 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.731799957 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.731869435 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732841925 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.726008505 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.73008016 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.732408253 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730217935 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.727529188 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.741906695 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737658056 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.734025635 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.731413027 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.732482437 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.731909051 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730993199 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.732826415 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734053027 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.732350105 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.731411436 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.735881292 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.731046466 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.731375364 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.733513139 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.736616483 seconds)
  done (took 1025.440542741 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729156701 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729546978 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.728109773 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730474306 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72993555 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729248012 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730055229 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.729743766 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.729476252 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730313848 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.729487206 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728539016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.730591084 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.731200866 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72898237 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729175996 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728786175 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.728943871 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.729274877 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728626884 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.729764446 seconds)
  done (took 37.984587446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.73340951 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.729419266 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.729980292 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.733271102 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730616728 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.73238134 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.73089342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733500239 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.732137227 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729765787 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.732926035 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732111903 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.729746458 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.731255866 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731317077 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733424834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.733335532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730169603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.733327575 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.73111449 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733424956 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.731905194 seconds)
  done (took 39.764576507 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.736311499 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.735358063 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.733871929 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.729525624 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.732593446 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.731396352 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.735083657 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.735024859 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.735081224 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.736913935 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.733412571 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.73446504 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.739859394 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.736893651 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.737456305 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.734936798 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.884878293 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.736956364 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.737090299 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.737496795 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.731960708 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.739700968 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732968075 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.732526252 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.735083605 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.736603198 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.735953659 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.735198324 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.737026734 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.735896864 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.739823878 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.735576306 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.735857339 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.737690564 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.734529038 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.737639482 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.738499597 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.736792921 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.7331266 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.735936078 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.743159164 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.749565861 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.737141518 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.741856223 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.735043472 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.736864305 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.738143228 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.743365642 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.733284458 seconds)
  done (took 86.898249182 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.735481888 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.736002958 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.73292343 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.736358712 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.736162565 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.735825853 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.736590374 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737545411 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.734386955 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.734091833 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.738639205 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.734167086 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.733266376 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.735812139 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.737813813 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733524538 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734031595 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.734319776 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.733832283 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.733884409 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.733728018 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738723912 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.737432324 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.734017104 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.736955211 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.735295854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.734833156 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.737425423 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.735398323 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.733453253 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.738518172 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.738035717 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.737566494 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.735527621 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.73499103 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.737920017 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.738005718 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.735834228 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.738098623 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.736738967 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.736925428 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737997987 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.736998483 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.737647179 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.734800265 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.735223192 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.736106727 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.735133782 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.736028719 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.737166427 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.738117301 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.734483335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738540755 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.735263548 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738917135 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.739466626 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.737356415 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.737590655 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.73988295 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.738065834 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.737452064 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.741076287 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.73692206 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.740015169 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.740215438 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.738060196 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.738409225 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.739887289 seconds)
  done (took 119.757272591 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.740878078 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.741342883 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741551048 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740405196 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741317929 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.741420179 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740096131 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.740889044 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.741257371 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.741076341 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741744788 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.740920856 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.741434386 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.741916638 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.740536012 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.741888916 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.742975732 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740703284 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.743115728 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74383963 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.742089742 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.743084489 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.742169597 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.742265746 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.741116121 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.742941908 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.741581115 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.741895864 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742648942 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.742280208 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742416453 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.742162315 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.742654525 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.742346224 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.742154842 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.742553276 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.743011512 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742476315 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.743929829 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.742484404 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.742736599 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74207096 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.741798095 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.741932741 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742635788 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.742445902 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.742601739 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.743803181 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.741861421 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.742522439 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.742429548 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743726048 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742879332 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.743642409 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.74389617 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.74249014 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743432248 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743699876 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743249601 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.743081455 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.743519749 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.743992229 seconds)
  done (took 109.695530061 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742195596 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741866894 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.74046428 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.740273876 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.741749942 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740822229 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743272659 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.742736481 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742397466 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.741734003 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743130854 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740437909 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742567501 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743066698 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740349648 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741496224 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740495592 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741137127 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743467103 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740598023 seconds)
  done (took 36.508638913 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.741192573 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.742798714 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.740308912 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.740241157 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.74371444 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.741261042 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.74410265 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743380111 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740846496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743493981 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.744024912 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.744768618 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742303062 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.741818554 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.743870891 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.741373401 seconds)
  done (took 29.554692459 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.741235224 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.744340363 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.744787874 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.744421876 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.741796525 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.740482277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.74402149 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.74118144 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.741627371 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.744856806 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.745470438 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.745240342 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.744405139 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.745567832 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.74160942 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.743115598 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.742114559 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.742247751 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.744941065 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.744949232 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.742386268 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.742947814 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.746522248 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.746734262 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.746665256 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.744167878 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.744083231 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.744330059 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.743039418 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.745658554 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.743039333 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.743530578 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.741738245 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.743028054 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.746795834 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.743375751 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.745478074 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.746613959 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.746786362 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.74544986 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.744995192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.743665719 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.745466856 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.745887112 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.742722333 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.746091847 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.744114903 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.7438698 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.742641412 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.744463612 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.745811658 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.74860663 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.747489237 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.747643072 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.746675986 seconds)
  done (took 97.619058674 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747133129 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745152669 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.743674622 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.745848141 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.747257029 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.744235702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.746443252 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.743438915 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744255829 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.7472491 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.744873766 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.745799584 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745128974 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.746617907 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744867786 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747895091 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.744030029 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.746060384 seconds)
  done (took 33.098717805 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.744656925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746443458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.749667946 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.745612183 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.744860752 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.74908802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74544829 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.747258338 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748191353 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.745489474 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744498854 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.747808614 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748013797 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.748555845 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.745798012 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747047241 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.748985326 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749064583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.747329581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745833089 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749833554 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748210497 seconds)
  done (took 40.117301792 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.748359163 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.747466377 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.762515156 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.764930279 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.768072727 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.774944101 seconds)
  done (took 12.246514883 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747184094 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748668032 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.747558589 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750021565 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74995639 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748610723 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748033716 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.745526835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749322717 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746732859 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746238113 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749354721 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749207384 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746046991 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749799594 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750463331 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747200086 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746578144 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74747153 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749266563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748612313 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749643839 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747425584 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747738388 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747135128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747144932 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750356586 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748519856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747804161 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749898007 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750634539 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748152117 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750164052 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747452047 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751298534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751505099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749263472 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751873217 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751758323 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748693412 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.75151126 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752556128 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751505294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749400748 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751900143 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748378483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74834157 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749712255 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747848246 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751570393 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751792742 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748739613 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751435264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751634133 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751990259 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752244459 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751204838 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749860575 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751841456 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749044909 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750205334 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751435628 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750084709 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748651809 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752205355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749356097 seconds)
  done (took 117.145635426 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749220561 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.74970907 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751112029 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750201538 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750392233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750902617 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749859659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750565905 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749456289 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75019468 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753160078 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750544692 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750201245 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750678308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750736308 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749882242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74980108 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750188057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75053779 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754376295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750556541 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750828428 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751634134 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749865872 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752434646 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753230584 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751173339 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749817787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751343307 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750905535 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751721204 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75121612 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75151665 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.751177886 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751515519 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751341227 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752553585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751209923 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750830737 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753509385 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751153968 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754953426 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751973787 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751741505 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751787897 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75272417 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752203751 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750927951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750786769 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752293928 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752294768 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752072593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75246158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752841391 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751458548 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752303488 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753029275 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753672257 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752573093 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75521281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753584583 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753099456 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755055202 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752214177 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752951374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752829218 seconds)
  done (took 117.29373602 seconds)
done (took 2390.968463744 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.780098768 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.027232829 seconds)
  done (took 15.493790666 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.925329717 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.877483423 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.762781226 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.804137636 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.763031513 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.785473012 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.784723189 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.763574417 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.761650432 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.762844177 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.761781785 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.950843982 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.75916005 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.761561926 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.76185002 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.856754099 seconds)
  done (took 50.540369215 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.767891336 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.767694177 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.778922959 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.769783809 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.766716383 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.787350787 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.80325847 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.770651693 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.826964338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.780373961 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.884217635 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.782296771 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.767281039 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.836455398 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.780374012 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.782864171 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.861206294 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.846278771 seconds)
  done (took 34.057020611 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.84789522 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.771178332 seconds)
  done (took 10.323396419 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.790551041 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.796064894 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.796074227 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.777230381 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.794941802 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.789481023 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.76548889 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.768471882 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.803930208 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.7881166 seconds)
  done (took 69.569862822 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.773689096 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.768139221 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.768786362 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.768195998 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.761280132 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.77001987 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.767472514 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.766175928 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.461558883 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.807121879 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.776515947 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.772569011 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.768212689 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.770617158 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.765768242 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.791721649 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.042060368 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.765316655 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.767172181 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.781720412 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.768545461 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.90929378 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.783176851 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.770745861 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.798352452 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.460683724 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.780591523 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.778511204 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.040215322 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.765848591 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.76753959 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.768836882 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.772035359 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.162566151 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.05910843 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.768486107 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.779398335 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.785394876 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.765437208 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.053659995 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.768474104 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.783089451 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.762452964 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.03619823 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.871493743 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.817570774 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.341796845 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.774395406 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.769992211 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.811440733 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.770696063 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.771229246 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.783761634 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.349798646 seconds)
  done (took 128.066111804 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.763875105 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.040530102 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.921363159 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.761840519 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054418392 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97884835 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.770102416 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816727525 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.769311967 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997503321 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.995274021 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877622161 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768429548 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.764545827 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.764924879 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.762876349 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.927063093 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.842758064 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.771700293 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.763150692 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797141937 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012983987 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.901826386 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.767511025 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.787464531 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979133388 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.905963343 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.874716934 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.285854812 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.763416182 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832366902 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.767228216 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.768996351 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.76473343 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.922934116 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.864059703 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861056509 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.771695789 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.766573961 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.765264499 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.43774035 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966295575 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.865138699 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.914319696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.014975329 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.973495515 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.559158338 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.763563892 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.500963058 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.927891171 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.001158107 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.003289588 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.89368405 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.767230358 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.279344826 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.764598904 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.764678023 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004518401 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998634048 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.873976059 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771971218 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.765337144 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.765846596 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.016310647 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.77333627 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.863356498 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769841342 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.765749883 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.864626165 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87914743 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.995253575 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983322787 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.804264639 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.084253589 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.247626487 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019232935 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.839030256 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003028143 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.769265148 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.76668713 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854391555 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.722266302 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.9688626 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.018131808 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027326953 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807219689 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.488293644 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.765712276 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.99987651 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.995030958 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.074369107 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010814458 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.92426376 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.079981466 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.767300839 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.766899353 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.02719474 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.908292735 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.770496929 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.130221875 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003756095 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.333319498 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.798651813 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.111421207 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.904849587 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.770110628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.410983809 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.767542172 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995589039 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.810687562 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.769236527 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.768026669 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.992488526 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.844880324 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.768514433 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.410607412 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.835289037 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.774718792 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006371848 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770209245 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040571373 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772672168 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010609895 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.259287634 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805122222 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.9964645 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.012008893 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.771115224 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020336715 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.017895878 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.890153277 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993950915 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.391811218 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.769947322 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060339917 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.771969076 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.770821825 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.944755643 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.770002736 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.918589789 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.777377959 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11172385 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798318396 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934641668 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773635855 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.029261553 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.808437626 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824296247 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.773348742 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9035835 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.770853379 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.640767566 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.925576902 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.7738551 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.769080691 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.517252596 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.769809749 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.93057826 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.007836887 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799403561 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847346301 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.445940223 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.768733133 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859361161 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.799455608 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.120927124 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.772083778 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.993856067 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.77425799 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.311340771 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.769363745 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.016009917 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.95696783 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.772219554 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.769350069 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.675794093 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.76949305 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.769835928 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.933726419 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.07226743 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.770444789 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976257503 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776974485 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913531854 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.774089835 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.853079893 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.12680157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.771050784 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.770073747 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.770784463 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.769314127 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.772121904 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037802007 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.804381126 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.293541593 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.912594145 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045758175 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.093561318 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.025558618 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.82245711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.775256467 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.023790299 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.775832131 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.839209544 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.775544812 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798407953 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009425974 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77614145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990838227 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056421463 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.703706479 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8262805 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.775405188 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774687959 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.713200083 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.931402541 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86735559 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.774251282 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.77228777 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.898981952 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.909491715 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990771919 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.774738059 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.107643094 seconds)
  done (took 882.509119478 seconds)
done (took 1192.244986385 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.77305372 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775067502 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.763554387 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.774916934 seconds)
  done (took 28.797103963 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.783091391 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.779172891 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.780709748 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.777483132 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.780025921 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.778474051 seconds)
  done (took 12.386556612 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.80091661 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.776137639 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.776103193 seconds)
  done (took 21.062693199 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849460232 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.19377313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.89185016 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.230825889 seconds)
  done (took 9.873411008 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.781977088 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.780158139 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.780250268 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.781399124 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.784624279 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.786490884 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.779896581 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.782290135 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.786805744 seconds)
  done (took 17.754197749 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.12579815 seconds)
done (took 95.707468571 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.075608971 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.789058577 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.847914059 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.58421335 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.084515143 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.257130956 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.916153072 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.389162731 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.467132785 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.780552464 seconds)
    (11/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.91508881 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.134194594 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.835081869 seconds)
    (14/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.927510686 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.820762524 seconds)
    (16/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.932535099 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.80794105 seconds)
    (18/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.234267372 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.884908381 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.661629316 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.772638529 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.41407699 seconds)
    (23/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.945698923 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.657965743 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.836052856 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.324075234 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.428114586 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.86842769 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.870147319 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.023637206 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.243349191 seconds)
    (32/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.79475212 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.887864521 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.775779786 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.152896622 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.886392518 seconds)
    (37/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.861652383 seconds)
    (38/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.917143546 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.338671027 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.945855384 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.089698925 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.812810259 seconds)
    (43/309) benchmarking ("sort", Float64, false)...
    done (took 5.54611546 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.083371254 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.777926059 seconds)
    (46/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.073904903 seconds)
    (47/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.783613722 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.119512633 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.892773613 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.994409679 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.044550201 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.849557974 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.84164168 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.015710105 seconds)
    (55/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.277553956 seconds)
    (56/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.811860545 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.835400132 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.863156531 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.878406276 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.106057126 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.763066969 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.45680097 seconds)
    (63/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.069105052 seconds)
    (64/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.986902827 seconds)
    (65/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.77137345 seconds)
    (66/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.820413821 seconds)
    (67/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.936992469 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.133158591 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.783062144 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.653788551 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.760816398 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.803951612 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.787791063 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.79628634 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.377933428 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.97018771 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.484029863 seconds)
    (78/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.058610138 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.484356602 seconds)
    (80/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.26676986 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.794957636 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.764886606 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 4.147067286 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.816938283 seconds)
    (85/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.805733105 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.883227749 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.907337086 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.110929829 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.247235273 seconds)
    (90/309) benchmarking ("sort", Int8, false)...
    done (took 4.789043926 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.896436132 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.994796985 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.459220617 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.995979183 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.762453845 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.245972799 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.919615522 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 5.529046734 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.713514713 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.764518511 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.991218548 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.075229603 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.988888495 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.661307743 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.86543153 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.85042241 seconds)
    (107/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.701585066 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.863918525 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.94379139 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.87301889 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.779333755 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.426854201 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.821168057 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.082171493 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.910724469 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.272441519 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.056227636 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 2.222744452 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.803481363 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.043236083 seconds)
    (121/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.86738069 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.765563709 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.982662159 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.000709059 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.044423986 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.044378536 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.857922713 seconds)
    (128/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.913633948 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.848059117 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.782129232 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.653356524 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.321901643 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.95803316 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.117977446 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.060897936 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.889244005 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.765452411 seconds)
    (138/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.815867596 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.783757294 seconds)
    (140/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.918413352 seconds)
    (141/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.9316854 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.785172007 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.842709914 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.961803959 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.953004838 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.154557068 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.885431031 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.781736096 seconds)
    (149/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.00777753 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.285433607 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.133944848 seconds)
    (152/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.915329193 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.811758379 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.799710474 seconds)
    (155/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.344139709 seconds)
    (156/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.703845971 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.870420471 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.784967961 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.120729708 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.788068895 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.168205638 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.191349354 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.803298098 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.420366018 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.083063071 seconds)
    (166/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.157755074 seconds)
    (167/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.395347365 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.092808958 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.093541626 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.30711376 seconds)
    (171/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.315953756 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.879746265 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.19927057 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.129305861 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.848859715 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.071842763 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.912154411 seconds)
    (178/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.022917607 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.129755279 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.789466474 seconds)
    (181/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.019321529 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.047369467 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.254687704 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.820681302 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.806844641 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.784338905 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.235200865 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.85929082 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.84634601 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.179281875 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.826283687 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.857996852 seconds)
    (193/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.9258749 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.356731728 seconds)
    (195/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.486907827 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.944766511 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.870617739 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.872708562 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.073179387 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.591260809 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.927083814 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.915566741 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.807796888 seconds)
    (204/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.869009098 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.844254122 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.881898349 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.639846023 seconds)
    (208/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.881295108 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.817193789 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.246473202 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.819019573 seconds)
    (212/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.879419852 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.15397165 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.490908215 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.891875005 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.50641755 seconds)
    (217/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.075334694 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.997080002 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.420360523 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.812781545 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.979815846 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.814587346 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.903243706 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.814495846 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.80551976 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.772193668 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.941570586 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.811817817 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.803089812 seconds)
    (230/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.871476756 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.829102127 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.788693999 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.702641456 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.86623744 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.1360639 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.812616141 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.705639742 seconds)
    (238/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.932295634 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.795721218 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.349036466 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.933825465 seconds)
    (242/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.385329808 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.964919544 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.168838874 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.98726135 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.596344349 seconds)
    (247/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.634940115 seconds)
    (248/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.889155753 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.136901979 seconds)
    (250/309) benchmarking ("sort", BigInt, false)...
    done (took 6.793621892 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.016556033 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.816808841 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.720518214 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.898690799 seconds)
    (255/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.790857257 seconds)
    (256/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.808960658 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.923070211 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.022294764 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.781418555 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.567700084 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.791907062 seconds)
    (262/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.988897842 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310804501 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.793716951 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.778858392 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.854343967 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.030773816 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.154417147 seconds)
    (269/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.996434699 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.854958142 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.978563545 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.717781948 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.131941423 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.122843629 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.867857149 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.48951819 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.98168491 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.903658186 seconds)
    (279/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.374871657 seconds)
    (280/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.894742835 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.904167301 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.181150058 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.181885802 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.939324533 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.300558146 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.896306612 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.877911583 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.873715859 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.932085753 seconds)
    (290/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.271683057 seconds)
    (291/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.132103919 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.519913489 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.046625174 seconds)
    (294/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.795246432 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.783408944 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.120485678 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.794556658 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.825951981 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.181390306 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.780713292 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.813040598 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.828988808 seconds)
    (303/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.98745326 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.55828888 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.145307885 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.790701063 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.814573894 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.526692721 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.110201915 seconds)
  done (took 990.686366468 seconds)
done (took 992.458661531 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.827890231 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822668745 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.805395033 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.82612852 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.918871969 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.837562011 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.814291473 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.806895327 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.853553117 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.854328908 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.806636918 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.832509306 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.808455317 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.809153804 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.804799255 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.821353276 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.119211499 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.839309793 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.824453988 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.814452558 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.822405937 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.805459873 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.854438738 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.833361138 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.80964839 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.808045333 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.809544742 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.829204895 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.919636661 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.812975365 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.810463993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.8196506 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.121379108 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.836667165 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.800889517 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.828498196 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.818048005 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.815679563 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.811518813 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.841370003 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.267580345 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.815054773 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.80927873 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.807756947 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.80786852 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.812113457 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.811058385 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.814000907 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.822086766 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.82336369 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.265964134 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.830912193 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.81280036 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.808096857 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.818168924 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.8110621 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.814902133 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826364289 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.829417841 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.823520568 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.111524466 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.84382172 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.812288733 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.826466962 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.817808433 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.302263909 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.809933887 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.812248933 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.269755868 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.819270352 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.299782105 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.826452303 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.809942686 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.824642783 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.842211212 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.122368959 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.832753724 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.808333342 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.817749823 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.808576237 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.820415933 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.823201271 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.815633306 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.808734456 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824739439 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.837181743 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.817694378 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.813128209 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.818601759 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.829347 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.817617542 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.821338479 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.811708535 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.804857404 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.820223726 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.817810112 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.814951279 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.813307529 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.815081802 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.819970084 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.267170981 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.836720555 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.806683715 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.808436555 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.808813351 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.824963763 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.267042355 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.818569185 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.831901235 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.857325793 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.813388091 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.113437259 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.846997332 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827771672 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.81915177 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.814052646 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.805735209 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.114113143 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.297380817 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.833357169 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.812138303 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.810598555 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82927005 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.81528568 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.807068846 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.127304467 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.847134805 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829400416 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.934568899 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.822296247 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.845176123 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.812755383 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.814036799 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.841799233 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829307671 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.842515271 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.814654818 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.82912207 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.829773167 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.808779036 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.8237077 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.82253377 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.813867612 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.821115821 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.807779346 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.840869154 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825826544 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.827407684 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.834078422 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.936857517 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.810845028 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.114402812 seconds)
done (took 285.002682538 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.880966315 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.802360449 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.906078041 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.808561681 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.900500922 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.894526892 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.804844802 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.804504215 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.80500229 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.23133157 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.80598458 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.804892636 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.806597304 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.805938727 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.905927395 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.807369518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.80554546 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.144339338 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.809439785 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.88134299 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.807641644 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.8051801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.808942886 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.179152599 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.805404294 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.803651864 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.881526558 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.809386075 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.188305143 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.802705096 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.80797249 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.144812788 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.902175894 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.827621677 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.819229287 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.817885701 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.892377587 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.814963403 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.89259837 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.900014087 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.908784568 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.851203109 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.804328057 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.801608853 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.812934647 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.811305746 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.807216532 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.8371166 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.805223774 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.806486692 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.189062354 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.818510082 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.80958579 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.806939366 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.807321142 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.842732432 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.807353999 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.812318566 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.90359038 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.812839847 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.873671296 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.228332061 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.182177412 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.812056246 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.803527528 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.808923389 seconds)
  done (took 180.429644982 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.877791561 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.885685163 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.877580664 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.814296564 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.860620662 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.881739504 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.816823018 seconds)
  done (took 14.753037078 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.817949549 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811762123 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.863131 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.861983467 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.814323471 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.96222669 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813004661 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.825414919 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.809953793 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.865065567 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.814597331 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.814132026 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.81934752 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.805638366 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.861005155 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.82276047 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.930074337 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.814277115 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.814142902 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.966837961 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81765646 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.818709621 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.867056192 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.825261314 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.812587201 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.820320834 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.404445246 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.815374737 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810832561 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.813199694 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811781583 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.855584259 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.812434874 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.810613333 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810634227 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928267142 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.813149018 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810250095 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.814611284 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.81169871 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.815107969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.813777406 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.813882302 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.811469012 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.814124629 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.837808295 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.814006711 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.81426091 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.815484148 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.814257066 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.866353043 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.813571138 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.810211954 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.810611211 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.869753591 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824349394 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.816424106 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.812188161 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.814921229 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811827174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.969313286 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.862057334 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.812866995 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.861803965 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815005086 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.815486731 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.814511382 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.81447736 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909118642 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.814511189 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.863075806 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.81118991 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.974541966 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.839046634 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.814272798 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.816704787 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.816782465 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.815749615 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.806541 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.81994264 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.811324497 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.815899485 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.821796697 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.822094226 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813163244 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930740503 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.923571795 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.811516156 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.828706688 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.821112453 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.813933868 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.867574821 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.815010236 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.815699962 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868865002 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.932612284 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.869730257 seconds)
  done (took 200.400467049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.820495914 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.824991498 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.817998751 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.834927518 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.816161189 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.815151814 seconds)
  done (took 12.674755247 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.818642695 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.815089869 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.814894128 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.816070731 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.816939836 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.817306742 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.816995821 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816878621 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.821986202 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.814758949 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.818206865 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.81763153 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.816873285 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.81750049 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.816547899 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.815546675 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.817202449 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.814872217 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.814770485 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816061154 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.965204197 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.81654564 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816124966 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.817398686 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.821583908 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.815972614 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823466257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.816230308 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.816510466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.825727521 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.820628553 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.819689306 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.818086388 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.822477876 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.82245533 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.818578138 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.819877739 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.818611613 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.812941697 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.817030871 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.81771634 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817596402 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.81691233 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.819830374 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.819493342 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.822185607 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.82460895 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.825062892 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.818085276 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.819523797 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.819531323 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.816136875 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.81881961 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.821355736 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.819679225 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823060997 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.822262566 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.819485042 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.818492766 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.81918795 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.81866052 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.819408275 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.820987148 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.823353557 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.824907683 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.81888896 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.818574305 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824475086 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81972613 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.817716415 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.820465329 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.815626557 seconds)
  done (took 133.848367694 seconds)
done (took 543.856796333 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.863033012 seconds)
  done (took 8.608146012 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.929810988 seconds)
  done (took 8.757603182 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.566416671 seconds)
  done (took 10.312140572 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.817401687 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.816678474 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.829127936 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.819277817 seconds)
  done (took 29.040610233 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.819203367 seconds)
  done (took 8.567364984 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.827010485 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.810968219 seconds)
  done (took 15.419429656 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.852385915 seconds)
  done (took 8.599017046 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.931120108 seconds)
  done (took 8.679952454 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.834127925 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.85178733 seconds)
  done (took 15.447690505 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.798161062 seconds)
  done (took 8.545589555 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.471660314 seconds)
  done (took 11.227559626 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.818453472 seconds)
  done (took 8.584674791 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.888597179 seconds)
  done (took 8.636295708 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.087023883 seconds)
  done (took 9.835674828 seconds)
done (took 162.005669135 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.814499145 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.81637914 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.815330922 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.815366155 seconds)
  done (took 29.009509173 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.853214923 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.852527487 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.855825268 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.865651006 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.856544738 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.853377 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.846653156 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.846109883 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.864872177 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.860473625 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.856860328 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.854852482 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.853248893 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.847374599 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.856289427 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.856626061 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.865272366 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.855096638 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.845909121 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.857982603 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.822675832 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.865159548 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.856618712 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.821574939 seconds)
  done (took 46.219480252 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.020807672 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.894710854 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.975520387 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.874271033 seconds)
  done (took 9.513485102 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.873005849 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.874665594 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.888095452 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.926018213 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.94838936 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.884354206 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.847706896 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.841339583 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.82964835 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.875313574 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.949176913 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.870548224 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.973132677 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.82059212 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.007311956 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.822771332 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.822500978 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.874004858 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.924802244 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.939319592 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.822801211 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.872471253 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.876452001 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.869976778 seconds)
  done (took 46.983778994 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.820911602 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.829070596 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.827387428 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.821596284 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.821147483 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.821287496 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.830687509 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.82220475 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.84294971 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.821736118 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.822999738 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.820997785 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.821673165 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.821118001 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.820001978 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.833614192 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.834402083 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.821759163 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.825976387 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.828445421 seconds)
  done (took 38.259312113 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.816356931 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.67095525 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.16798838 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.073590761 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.816576405 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.819857845 seconds)
  done (took 31.115248 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.838511992 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.829010388 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.822655377 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.879564267 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.964387873 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.833481451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.822959584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.834085863 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.870601154 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.891432739 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.844264722 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.850910109 seconds)
  done (took 24.033397533 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.819251743 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.818505792 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.819794737 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.836749682 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.835441782 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.831540218 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.828913672 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.817663999 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.838797716 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.844236011 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.832073532 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.837753034 seconds)
  done (took 43.715361246 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909155472 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.708226954 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.870402572 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544195122 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291468236 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031518952 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333486924 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155799667 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.822905135 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092574863 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.817585485 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928676866 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074003482 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819415008 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.84079447 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.287591713 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110357937 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05104517 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849012975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563860201 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869567534 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430565853 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.652430344 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.876329667 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031738862 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.954642407 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.082400708 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.778570537 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953864403 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858386298 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831310138 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819982045 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095966844 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196913745 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927333899 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832652757 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.476696989 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.543799269 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.810136166 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.603591383 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.589926885 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.940827437 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830010365 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820717716 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.755616021 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374203793 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20265421 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.82634711 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.531644449 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822778058 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833829728 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910165626 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.826833807 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.638486967 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776569831 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102717369 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.819362735 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830763997 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392202273 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898410379 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410791141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.805822909 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.01619629 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60118277 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215048085 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.973525044 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.82629035 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828489089 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758290788 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.572950536 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873789662 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968742189 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.843651056 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472156596 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120540801 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.883781694 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.769762129 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119683545 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.664135547 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.255627516 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051862828 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781257939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757977789 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.684629409 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758187392 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090388697 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868014137 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.472480872 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868109726 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158023044 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836106989 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839950723 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832503192 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.047609691 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.704462552 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8267198 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.60562753 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976330916 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846007383 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160921926 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757990122 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.829030814 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079519522 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.036724589 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.130007295 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.339264356 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982435992 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824985207 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.908390508 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.804778949 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880973735 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.098337378 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882595248 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922748098 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884909214 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.782843461 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129928658 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853400519 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.995340213 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.830911851 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956034248 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.151714586 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122427095 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890966191 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835077142 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.826228352 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.58118585 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400775245 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.095488385 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.826584661 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397909882 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.879878896 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.828009996 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761616245 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.456042832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.875721731 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.807791357 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050126367 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.826191623 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144593531 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760605995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973498412 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.942132953 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.051932923 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.466754734 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.893884601 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087014976 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390590474 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.166009474 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882857333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848236233 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947074832 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850377243 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.30503016 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122576186 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.831628569 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.833574032 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.589513988 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.826554459 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828340161 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.833937638 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630035826 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104124266 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.850959227 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831764398 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716842538 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.841101597 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895087947 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833673401 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.839265334 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388282908 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597436927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.839983564 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.46047663 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055141639 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840684356 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.557000119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941209429 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.914360785 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098538753 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889303205 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.76400442 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.542986749 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.52323455 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832828948 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764893399 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.828359333 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839795754 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840457882 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.211799981 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.107276328 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8720837 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.578184425 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.873956448 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841758672 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.83578308 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829347696 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.375454828 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913302708 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418606416 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885328 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967669942 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.842954798 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765720019 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.834250761 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836423048 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.83121251 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.789459393 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885869105 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.583631687 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204996195 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092456457 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.52479239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852618265 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.616676577 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.888504766 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.859590802 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62229492 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842566174 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.871297009 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857517758 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.844242958 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.578754697 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539371381 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400786991 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137107807 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139428443 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265632792 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.373743251 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141429752 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165652197 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069006292 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361896923 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892216735 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175104742 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777022065 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919246772 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.470729316 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178054143 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852000385 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061130389 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225510596 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.701161691 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862700934 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044403785 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86889206 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.822707842 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799620928 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.040101945 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973646021 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.571142763 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033202705 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163650043 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.629620871 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.810595574 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.8325606 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.520928035 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92096321 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.542946314 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.196684589 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440493495 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.770914989 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32403007 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.840990688 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281497992 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200980186 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.217638488 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.963515011 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773212311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846740205 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84810696 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.837277594 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.831956768 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.703425573 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.089880038 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848831242 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071239639 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.181766045 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140051804 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.738712256 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.839639615 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836611184 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133609381 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.691747111 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004985 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.342266608 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.365737932 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842708679 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771757522 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770965285 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.530463693 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.845409692 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812064299 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059970087 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.026696158 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792597712 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414853043 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083309744 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091179403 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.849473524 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108833949 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10874458 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.573876123 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864930463 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.938640244 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.495216784 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.940558494 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.106189874 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072607695 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.63574634 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068083796 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.873331239 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.621785272 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.835259746 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051525071 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.105354276 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.752966944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064908489 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.560549347 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.844128986 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15859706 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8945171 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.700340582 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987077359 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.033959675 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848340032 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922206676 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847561417 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.850535117 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850634483 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884419343 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.70844941 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955972657 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.853249808 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927464834 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939606914 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.369879472 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.847658054 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113951965 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187487667 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164237425 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89689553 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838983438 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847136267 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772503753 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975227765 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.285596183 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113369884 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.968992123 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.140389053 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866258807 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.507546042 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27590255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086647935 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113745007 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.7331493 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839263126 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.861838999 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.106357543 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849268038 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.050392965 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063652681 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151402632 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314165127 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.153654923 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.211374966 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113542527 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.209894168 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840503187 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428227401 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.845593672 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.530923371 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.885753161 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.755262379 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103755543 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851704415 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221649276 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.863763426 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.036680208 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.358505595 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590782589 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.129636058 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.826788457 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.898853898 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113647884 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220017713 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152625531 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913498066 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855258946 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.556740038 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979032072 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.706136969 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.11565817 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843043348 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053634434 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.551512129 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851837352 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118594185 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147311352 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.839734058 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.728789422 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854483148 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.854203394 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067809446 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1117586 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095360345 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850919037 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.852562247 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.662600023 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118205131 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897621932 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779027197 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.847049564 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94275531 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.091285053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86274416 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.532450182 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.556218782 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146462852 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.763002778 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867551899 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406253463 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212538972 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162058962 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.38320427 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074793413 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.403475383 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843914475 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149485676 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.849111633 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401965249 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158765903 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.8491373 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.519665515 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890141395 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.110677832 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159489249 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.854568947 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606188235 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.815239584 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068030542 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439765278 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788551826 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848502193 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.905651862 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845291633 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.976325349 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857353123 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.738419772 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846482161 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.602194239 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338854994 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.848877073 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.836077095 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.550610895 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.529259667 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886053091 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00145898 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854448619 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.558388238 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.13600275 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099575196 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.552927874 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.859246742 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.850022993 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846049012 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773379179 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.042829873 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.22824404 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142789612 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.357233672 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.889705428 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849969709 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.062126464 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057611931 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.698560079 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979021856 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410014056 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891810501 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.59151125 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527619789 seconds)
  done (took 1669.51860968 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.865279318 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.88367299 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.877911483 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.921479106 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.885719158 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928323639 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.939238913 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935430975 seconds)
  done (took 57.01637677 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.845307346 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.046486021 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.855421581 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.849878084 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.856910272 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.847389737 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.019875794 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.858785365 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.858069902 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.856498377 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.847553203 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.846587561 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.181713995 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.874352611 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.846948082 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.85207637 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.858746162 seconds)
  done (took 74.011255692 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.846986619 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.074583543 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.876402479 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.860595244 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.807123775 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.871688077 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.916506926 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.871000665 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.855469079 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.078456497 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.487669253 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.876053662 seconds)
  done (took 90.2050739 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.857176708 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.853776445 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.855472191 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.85555787 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.855183243 seconds)
  done (took 11.062885713 seconds)
done (took 2172.438875419 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.109993847 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.076913994 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.083170316 seconds)
  done (took 5.941844227 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.995484603 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.044155095 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.165602938 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.185498642 seconds)
  done (took 10.173277847 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.138934256 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.22074628 seconds)
  done (took 6.138965521 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.26833205 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.857466345 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.248631495 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.846199968 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.84865872 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.848284883 seconds)
  done (took 22.328845149 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.850760778 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.853519066 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.850190968 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.85407596 seconds)
  done (took 9.187956974 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.831674692 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.582369309 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.832980028 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.849310372 seconds)
  done (took 20.876318777 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.601507254 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.248992223 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.594781107 seconds)
  done (took 9.225342569 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.314073611 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.73508368 seconds)
  done (took 8.828744168 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.125193983 seconds)
  done (took 3.905541548 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.880728187 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.123904555 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.365186806 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.364662826 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.459471859 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.715034815 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.187492719 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.10877322 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.263605079 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.295394764 seconds)
  done (took 24.545442478 seconds)
done (took 136.417284568 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.232720201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.216890921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.060488677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.200417338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.083282383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.058828844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.056326393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.184668961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.701489367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.693751838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.240267165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.075668698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.002043722 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.217272693 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.009436328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.087735964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.071814201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.249486143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.897072224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.091886525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.062950275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.826949756 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.081987634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.842184119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.074432703 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.009027159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.402641166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.091048205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.047846001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.415717025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.010717445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.245315063 seconds)
  done (took 170.324298979 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.849400389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.850305162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.852428024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.852055248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.366819454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.85096681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.852834443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.851269552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.09673498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.101251339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.859545159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.370700767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.861261244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.851671411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.859231537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.851571014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.297584589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.860146863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.862606545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.863038948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.864806678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.184038966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.88109626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.224892927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.304854062 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.868101034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.853240015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.86851174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.857120762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.859155146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.860288135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.853269934 seconds)
  done (took 208.32483425 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.853362306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.853595968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.854287761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.852564251 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.853445299 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.854425206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.853463653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.853504207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.602535707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.594513177 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.860870185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.85848085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.856754154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85363749 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855368738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859479567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.868488826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.870545338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.869347143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.874991382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.879328003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.691737473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.877088561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.687522752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.868022604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.868195403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.854290872 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873009681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.876593085 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.879080074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.876905661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.854248307 seconds)
  done (took 220.534291936 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.055813999 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.860718577 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.860639959 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.801928437 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.861623103 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.861853141 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.809680707 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.059828076 seconds)
  done (took 18.984055283 seconds)
done (took 619.961730618 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.342684832 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.192743651 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.043012398 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.885123392 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.135274701 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.925689646 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.882604372 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.944719961 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.620855105 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.956625925 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.572925503 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.901817589 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.665676665 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.909398838 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.004506962 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.937568761 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.474501046 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.573749849 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.067726844 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.955664839 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.063325128 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.814221151 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.965915429 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.648569269 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.687167703 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.865609754 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.061175413 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.479211787 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.894491279 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.048307485 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.67604077 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.278162739 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.895605815 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.87962946 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.940436239 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.922970224 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.232308637 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.894704232 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.0036697 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.623395134 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.961852404 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.502547219 seconds)
  done (took 103.120434235 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.852946712 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.848276406 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.85022678 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.850402964 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.851211215 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.85039869 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.84971544 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.849857241 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.851008988 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.851048667 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.849260029 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.851617841 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.849740549 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.850434247 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.848760715 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.85049749 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.850715805 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.854195203 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.850840074 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.850444384 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.852876328 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.850556947 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.866815852 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.850452163 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.851693922 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.851593939 seconds)
  done (took 49.938389071 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.864327728 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.028985897 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.114516943 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.884082426 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.86357095 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.867868189 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.883650433 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.870881002 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.867236139 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.86690968 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.972343166 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.872352517 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.886269399 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.116976463 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.884436093 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.865912113 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.865394212 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.865595032 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.037291203 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882050339 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.886516611 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.870310983 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.885618823 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.881207246 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.867844307 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.866096177 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.870657899 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.319817451 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.875196925 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.975841789 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.908716624 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.88714738 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.28721788 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.128814141 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.921041419 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.872157664 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.866448593 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.976762532 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.872776712 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.866799234 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.885463 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.871151702 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.116582878 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.352966745 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.881624381 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.867768141 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.32899412 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.986030444 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.90806983 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880683663 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.119612006 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.885195767 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.871626643 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.868594716 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.905375842 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.878994893 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.868130451 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.205534744 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.879413597 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.886683457 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.873220984 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.868437547 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.043011604 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.877802176 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.033377293 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.877314416 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.874924174 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.87056397 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.120829859 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.887271632 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.35963069 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.882527444 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.869276244 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.975028104 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.037919855 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.358763204 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.882697608 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047126531 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.303049806 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.895881525 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.877308353 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.309661179 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.898921686 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.877431671 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.871268258 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.870950722 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.871105767 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.91657151 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.886500491 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.293238309 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.365349337 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220791558 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.898522998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.884663861 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.87081754 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.210137 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.878348713 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.870473105 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.112772321 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.371349643 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.883643547 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.877172271 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.347058896 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.88392061 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.891825364 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.879962411 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.125471495 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.887481392 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.915552519 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.870688789 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.878902723 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.873729018 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.890860277 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.879028866 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.870859898 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.334757918 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.998773768 seconds)
  done (took 232.075128103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.866073092 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.865424581 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.864266539 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.867601342 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.864931246 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.870133853 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.863945697 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.863848131 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.871466964 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.865201846 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.865073437 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.864428173 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.867320116 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.873091389 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.368064178 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.872196301 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.524733248 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.867183856 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.866825327 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.878609248 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.553547745 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.875687715 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.867743816 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.866880479 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.865034082 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.865989916 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.872355981 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.918415261 seconds)
  done (took 167.998077136 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.873726525 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.062110626 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.893614421 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.914695021 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.881907993 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.870985181 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.896964742 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.897147011 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.879984744 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.871641371 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.872339267 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.935747822 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.886565062 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.018526098 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.906796283 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.90511198 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.986345342 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.883068604 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.87261397 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.874579282 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.904939846 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.869851737 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.935543217 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.00637486 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.898429883 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.990963694 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.881918136 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.87618712 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.873587117 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.995936778 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.892593415 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.937712023 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.90555199 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.893453267 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.999457887 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.999193213 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.984700503 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.904938366 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.882248014 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.8738536 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.873404002 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.86173733 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992996596 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.896690365 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.878851202 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984301423 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.897963109 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.879279607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.883575475 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.87513791 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.892166432 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.903369203 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.943775273 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.010675877 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.914724116 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.901569259 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.901425763 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.154641985 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.88947698 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.979848798 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.868710969 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.996629917 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.897783582 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.864539488 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.875376371 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.881760318 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.910736133 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.911337517 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.991494926 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.884742333 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.981804989 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.914732341 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.882522455 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.876257386 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.877969327 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.998120106 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.000111997 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.913127548 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.916328488 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.908755758 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.87140636 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.877182899 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.867400542 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.896835971 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.881214537 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.99704153 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.999146433 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.885502235 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.878670238 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.881967394 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.881096671 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.90279969 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.003260512 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.917904112 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979257552 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.948446477 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.958249551 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.898450619 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.891845291 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.879732106 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.943187597 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.896849427 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.891268499 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.200036455 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.95609221 seconds)
  done (took 203.548885388 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.371198454 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.938652523 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.936382518 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.184056433 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.402214645 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.767874925 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.931939036 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.929042193 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.95245167 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.141099006 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.003006489 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.95143788 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.915021493 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.900009045 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.92615043 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.949343725 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.937957442 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.260780686 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.049917209 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.07097762 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.916310156 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.24967695 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.250090262 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.372995125 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.966583524 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.262310553 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.614866082 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.183518254 seconds)
  done (took 62.15024189 seconds)
done (took 820.616162792 seconds)
SAVING RESULT...
DONE!
